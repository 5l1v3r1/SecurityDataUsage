 6303. DATASETS Our Internet-wide study of key sharing in the HTTPS ecosystem is driven by four datasets: SSL certificates We use SSL certificates from full IPv4 scans as the basis of our measurements,Data,0
| Our SSL scans [30] also contain information on the IP address(es) that advertised each certificate. To obtain in- formation about the entity that controls this IP address, we use full IPv4 reverse DNS scans [29] that are also conducted by Rapid7|,Data,0
| Each AS is assigned an AS Number (ASN): for example, MIT is AS 3 and the Chicago Public Schools are AS 1416 [26]. CAIDA collects and publishes mappings between IP addresses and ASNs via their Route- Views datasets [7]|,Data,0
| For example, AT&T owns 160 unique ASNs. To aggregate these, we use CAIDA’s AS- to-Organization dataset [8] to group together ASes owned by the same organization|,Data,0
| For that, we rely on WHOIS [12], a protocol for querying domain registrars to obtain data on the domain owner. In practice, WHOIS data often contains fields such as the con- tact information for the owner of the domain, the contact for technical issues, where to send abuse complaints, and so on|,Data,0
| Here, we expand upon these prior findings by evaluating whether there is a correlation between centralized management and the quality of the keys chosen. Figure 13 compares several different features of self- managed and outsourced certificates across our entire cor- pus of leaf certificates (3,275,635 self-managed and 1,781,962 outsourced): (a) Key lengths in self-managed certificates are nearly identical to those managed by third-party hosting providers|,Data,0
|1 Combining Packet Capture (PCAP) Files The data set used in this study is a combination of the packet capture files obtained from two main sources. First of all, the APTs were collected from Contagio malware database [15] contributed by Mila Parkour|,Data,1
| First of all, the APTs were collected from Contagio malware database [15] contributed by Mila Parkour. The normal and non-malicious data is obtained from PREDICT internet data set repository [18] under the category of “DARPA Scalable Network Monitoring (SNM) Program Traffic”|,Data,1
| The data collection was performed during April 2016 using ZGrab, an application-layer scanner that operates with ZMap [15]. In the first phase, we performed an Internet-wide scan of all IPv4 addresses on port 500 to determine which hosts were configured 16This defect was corrected quite recently, years after the version of OpenSSL ScreenOS uses was written|,Data,6
|, download from an external source). Running on 71,000 articles collected from 45 leading technical blogs, this new approach demonstrates a remarkable performance: it gener- ated 900K OpenIOC items with a precision of 95% and a coverage over 90%, which is way beyond what the state-of-the-art NLP tech- nique and industry IOC tool can achieve, at a speed of thousands of articles per hour|,Data,7
| To structure our efforts, we followed a multi- step process. First, we collected exploits from various online databases and exploit frameworks, including Metasploit (22 exploits)3, Exploit-DB (2)4, Packet Storm (5)5, from the security research company Security Explorations (52)6, and an online repository for Java exploits7|,Data,11
| To structure our efforts, we followed a multi- step process. First, we collected exploits from various online databases and exploit frameworks, including Metasploit (22 exploits)3, Exploit-DB (2)4, Packet Storm (5)5, from the security research company Security Explorations (52)6, and an online repository for Java exploits7|,Data,11
| To structure our efforts, we followed a multi- step process. First, we collected exploits from various online databases and exploit frameworks, including Metasploit (22 exploits)3, Exploit-DB (2)4, Packet Storm (5)5, from the security research company Security Explorations (52)6, and an online repository for Java exploits7|,Data,11
| To structure our efforts, we followed a multi- step process. First, we collected exploits from various online databases and exploit frameworks, including Metasploit (22 exploits)3, Exploit-DB (2)4, Packet Storm (5)5, from the security research company Security Explorations (52)6, and an online repository for Java exploits7|,Data,11
| To structure our efforts, we followed a multi- step process. First, we collected exploits from various online databases and exploit frameworks, including Metasploit (22 exploits)3, Exploit-DB (2)4, Packet Storm (5)5, from the security research company Security Explorations (52)6, and an online repository for Java exploits7|,Data,11
 5. ANALYSIS AND FINDINGS In the following we use the extensive documentation of the 61 minimal exploits to provide insight into how attackers use specific vulnerabilities and features of the Java platform to implement their attacks,Data,11
| We run our event analysis on the top 100 free applications in the Android application store to determine how often this happens. In total, our analysis finds 1060 errors across 88 of the top 100 applications (10|,Data,12
| To our knowledge, AUTOREB is the first work that explores the user review information and utilizes the review semantics to predict the risky behaviors at both review-level and app-level. We crawled a real-world dataset of 2, 614, 186 users, 12, 783 apps and 13, 129, 783 reviews from Google play, and use it to comprehensively evaluate AUTOREB|,Data,14
| 4.1 Data collection For each team, we collected a variety of observed and self- reported data|,Data,16
| To demonstrate this, we scraped greatfire.org for websites in the top 1000 Alexa websites that are blocked by the GFW|,Data,18
| (cid:15) Identifying New Vulnerabilities. Our tool successfully an- alyzed 1,591 service interfaces of all the 80 system services in Android 5|,Data,19
| To understand the scope and magnitude of this new XARA threat, we developed an ana- lyzer for automatically inspecting Apple apps’ binaries to deter- mine their susceptibility to the XARA threat, that is, whether they perform security checks when using vulnerable resource-sharing mechanisms and IPC channels, a necessary step that has never been made clear by Apple. In our study, we ran the analyzer on 1,612 most popular MAC apps and 200 iOS apps, and found that more than 88|,Data,24
| To assist software developers (or secu- rity analysts) in tracking down a memory corruption vulnerability, CREDAL also performs analysis and highlights the code fragments corresponding to data corruption. To demonstrate the utility of CREDAL, we use it to analyze 80 crashes corresponding to 73 memory corruption vulnerabilities archived in Offensive Security Exploit Database|,Data,25
| These techniques may be applicable in other scenarios. We implemented and evaluated the attacks against the popular Gmail and Bing services, in several environments and ethical experiments, taking careful, IRB-approved mea- sures to avoid exposure of personal information|,Data,26
|, CSPAutoGen can handle all the inline and dynamic scripts. We have implemented a prototype of CSPAutoGen, and our eval- uation shows that CSPAutoGen can correctly render all the Alexa Top 50 websites|,Data,27
| 5. EXPERIMENTAL RESULTS This section reports on our evaluation of the moments ac- countant, and results on two popular image datasets: MNIST and CIFAR-10|,Data,28
| 6.1 Mobility Trace Dataset We use the CRAWDAD dataset roma/taxi [2, 3] for our simu- lations|,Data,31
 6.1 Evaluation We evaluated the performance of Σoφoς using 4 data sets of increasing size and also the English Wikipedia,Data,33
|1 Datasets, Metrics, Competitors & Settings Datasets. We test EpicRec on two real-world datasets: MovieLens1: a movie rating dataset collected by the Grou- pLens Research Project at the University of Minnesota through the website movielens|,Data,36
| 1 http://grouplens.org/datasets/movielens 188Yelp2: a business rating data provided by RecSys Chal- lenge 2013, in which Yelp reviews, businesses and users are collected at Phoenix, AZ metropolitan area|,Data,36
| The number of movie categories is 18. We use the MovieLens- 1M, with 1000,209 ratings from 6,040 users on 3,883 movies|,Data,36
| Our goal is to show that an ad- versary can insert an unbounded number of Sybil identities in the SybilLimit protocol, breaking its security guarantees. For our evaluation, we consider a real-world Facebook inter- action graph from the New Orleans regional network [28]|,Data,38
| We utilize these papers to extract Android malware behaviors and to construct the semantic network. From the electronic proceedings distributed to conference participants, we collect the papers from the IEEE Sympo- sium on Security and Privacy (S&P’08–S&P’15)4, the Com- puter Security Foundations Symposium (CSF’00–CSF’14), and USENIX Security (Sec’11)|,Data,39
 We conduct experiments on two publicly available set-valued datasets. • AOL search log dataset [1],Data,45
 90% of the users have fewer than 84 keywords in their logs. • Kosarak dataset [2],Data,45
 We select one month of data for our study. The data logs we used are col- lected from more than 30 machines with various server mod- els and operating systems,Data,46
| This paper rigorously investigates how users’ security beliefs, knowledge, and demographics corre- late with their sources of security advice, and how all these factors influence security behaviors. Using a carefully pre- tested, U|,Data,48
 We have ported Valgrind to iOS and implemented a prototype of iRiS on top of it. We evaluated iRiS with 2019 applications from the official App Store,Data,54
| from manufacturing equipment, as shown in Figure 1. We capture the relevant sensor data by deliberately or accidentally placing an attack-enabled phone close to, on top of, or inside a piece of manu- facturing equipment while the machinery is fabricating the target object|,Data,55
| Our new metric helps us compare in a fair way previously proposed attack-detection mechanisms. (ii) We compare previous attack-detection proposals across three di↵erent experimental settings: a) a testbed operating real-world systems, b) network data we collected from an operational large-scale Supervisory Control and Data Acqui- sition (SCADA) system that manages more than 100 Pro- grammable Logic Controllers (PLCs), and c) simulations|,Data,57
| Evaluation. We ran Oyente on 19, 366 smart contracts from the first 1, 460, 000 blocks in Ethereum network and found that 8, 833 contracts potentially have the documented bugs|,Data,58
| First, we consolidate the eight origin-exposing vectors into one auto- mated origin-exposing system called Cloudpiercer. Then, we assemble a list of clients from five CBSP companies by studying their DNS configurations and obtaining their adop- tion rate across the Alexa top 1 million websites|,Data,59
| The vast majority of them were exposed through their A record, indicating a brief dis- abling of the protection system. SSL certificate exposure In order to find IP addresses hosting SSL certificates associ- ated with the domains in the evaluation set, we made use of the publicly available data of Rapid7’s Project Sonar [42]|,Data,59
| 4. LARGE-SCALE ANALYSIS To assess the magnitude of the origin-exposure problem, we conduct a large-scale analysis in which we attempt to uncover the origin of CBSP-protected domains|,Data,59
|1 Dataset Description The dataset was first presented and used by Keller et al. in [23], and is publicly available in the gene expression om- nibus (GEO) database under reference GSE61741|,Data,61
| Although the cost of stor- age and processing have diminished, the cost of maintaining reliable infrastructure for transaction logs is still noticeable. Figure 1: A plot of transaction fee versus frequency for 1 million transactions in May 2015|,Data,65
| To estimate the cost of producing the preprocessing data (multiplication triples, random bits etc.), we used figures from the recent MASCOT protocol [31], which uses OT ex- tensions to obtain what are currently the best reported triple generation times with active security|,Data,67
| In this section, we validate whether the smartphone’s acoustic data can be utilized to deduce the movements. To conduct the validation, we implement an application on Nexus 5 (Android OS v6|,Data,68
| As seen in Table 4, we found that about half of the servers in Alexa’s top 10 support a large number of requests without rekeying. For a better estimate of the number of vulnerable servers, we tested servers from Alexa’s top 10k that negotiate 3DES with a modern client|,Data,72
| For a better estimate of the number of vulnerable servers, we tested servers from Alexa’s top 10k that negotiate 3DES with a modern client. We identified 11483 different HTTPS servers11, and found that 226 of them (1|,Data,72
| In this paper, we study the possible techniques to detect and measure this fraud and evaluate the real impact of OTT bypass on a small European country. For this, we performed more than 15,000 test calls during 8 months and conducted a user study with more than 8,000 users|,Data,78
|, the server cannot learn their relative order) after some number of queries are performed over real-world data. Specifically, we ran an experiment where we inserted over 2 million public employee salary figures from [1] and then performed 1000 random range queries|,Data,79
| In this study, we are interested in finding answers to security- and privacy-related questions about libraries, such as “How prevalent are third- party libraries in the top apps and how up-to-date are the library versions?”, “Do app developers update the libs included in their apps and how quickly do they update?”, or “How prevalent are vulnerabilities identified in prior research [28, 9] in libraries and how many apps are affected?” To answer these questions, we first built a comprehensive repository of third-party libraries and applications (see Section 5). Our library set contains 164 libraries of different categories (Ad- vertising, Cloud,|,Data,84
|) and a total of 2,065 versions. We then collected and tracked the version histories for the top 50 apps of each category on Play between Sep 2015 and July 2016, accumulating to 96,995 packages from 3,590 apps|,Data,84
|6.1, we found in our sample set 360 affected packages from 23 distinct apps, when only considering exact library matches|,Data,84
|15 for Android, which contained an account hijacking vulnerability, on 06/11/2014. In the histories of our sample set apps, we discovered, in total, 394 affected packages from 51 distinct apps, when only considering packages with exact matches of the vulner- able lib version|,Data,84
| We used LibScout to detect the affected application packages in our data set. In total 2,667 app versions of 296 distinct apps with a cumu- lative install-base of 3|,Data,84
| We observed that there is a significant variance in ACFG size. To reduce the sampling bias, we first collect a dataset which covers ACFGs of different functions from various architec- tures|,Data,89
| This dataset was used for base- line comparison, and all functions in this dataset has known ground truth for metric validation. We prepared this dataset using BusyBox (v1|,Data,89
| Dataset II – Public dataset. Recent work such as Pewny et al [45] and Eschweiler et al [23] used the same public dataset based upon two publicly-available firmware images for baseline comparison [7, 8]|,Data,89
| Dataset III – Firmware image dataset. This dataset of 33,045 firmware images was collected from the wild|,Data,89
| As a result, we created a freely available vulnerability database for this effort and for the broader research community. To build this database, we mined official software websites to collect lists of vulnerabilities with the corresponding CVE num- bers|,Data,89
| We selected OpenSSL for demonstration, since it is widely used in IoT devices. The resulting vulnerability database includes 154 vulnerable functions|,Data,89
| Roughly speaking, our measurement methods can be divided into two kinds: those that could be fully automated and scaled eas- ily, and those that required some manual interaction. For the latter, we used a set of 302938 major email providers and email genera- tors, while for the former, we used a much larger set of a million popular providers occurring in the Adobe leak and the Alexa top million Web sites (as potential email generators)|,Data,90
1.2 Provider List We created the set of popular email providers based on the top 1 million email address domains occurring in the leaked Adobe user data set of September 2013,Data,90
| Using a combination of mea- surement techniques, we determine whether major providers sup- ports TLS at each point in their email message path, and whether they support SPF and DKIM on incoming and outgoing mail. We found that while more than half of the top 20,000 receiving MTAs supported TLS, and support for TLS is increasing, servers do not check certificates, opening the Internet email system up to man- in-the-middle eavesdropping attacks|,Data,90
|26 and are configured with 4G RAM and 2 virtual processors. The VMs for TorA run on a workstation and are connected to a campus wired network, whereas the VMs for TorB and TorC are run on a laptop and connect to a home wired network, Each of these three datasets contains 30,000 traces collected as follows: (1) For each target obfuscator, we used our trace collection framework to visit Alexa Top 5,000 websites to collect 5,000 traces (labeled as obfs3, obfs4, fte, meekG, and meekA, corresponding to obfsproxy3, obfsproxy4, FTE, meek-google, and meek-amazon respectively); (2) In addition, we visited the same set of websites without Tor and obfuscators to collect 5,000 traces and labeled them as nonTor|,Data,91
|26 and are configured with 4G RAM and 2 virtual processors. The VMs for TorA run on a workstation and are connected to a campus wired network, whereas the VMs for TorB and TorC are run on a laptop and connect to a home wired network, Each of these three datasets contains 30,000 traces collected as follows: (1) For each target obfuscator, we used our trace collection framework to visit Alexa Top 5,000 websites to collect 5,000 traces (labeled as obfs3, obfs4, fte, meekG, and meekA, corresponding to obfsproxy3, obfsproxy4, FTE, meek-google, and meek-amazon respectively); (2) In addition, we visited the same set of websites without Tor and obfuscators to collect 5,000 traces and labeled them as nonTor|,Data,91
| 3.1 Datasets We use two major types of datasets: (1) packet-level traffic traces collected at various locations in a campus network, and (2) packet-level traces for Tor Pluggable Transport traffic collected in controlled environments|,Data,91
 Evaluation: local mixing time in social graphs. We use 10 various large-scale real-world social network topolo- gies that mainly come from the Stanford Large Network Dataset Collection [23] and other sources [45] to evaluate the local mixing time for nodes in social graphs,Data,92
| Feature Functions and Weights. To learn all feature functions and weights, we downloaded 1784 non-obfuscated Android applications from F-Droid [3], a popular repository for open-source Android applications|,Data,93
2.2 Experiments with Malware Samples We randomly selected one sample from each of the 49 mal- ware families reported in [40],Data,93
1_r1). Apps in our dataset used for the case study are downloaded from the Google official market (Google Play) in May 2016,Data,95
| • Using SInspector, we perform the first study of Unix domain sockets on Android, including the categoriza- tion of usage, existing security measures being en- forced, and common flaws and security implications. We analyze 14,644 apps and 60 system daemons, find- ing that 45 apps, as well as 9 system daemons, have vulnerabilities, some of which are very serious|,Data,98
| We presented SInspector, a tool for discovering potential security vulnerabilities through the process of identifying socket addresses, detecting authen- tication checks, and performing data flow analysis on na- 90tive code. We analyzed 14,644 Android apps and 60 system daemons, finding that some apps, as well as certain system daemons, suffer from serious vulnerabilities, including root privilege escalation, arbitrary file access, and factory reset- ting|,Data,98
| Our results show that many of our attacks succeed with a 100% chance such that the Sound-Proof cor- relation algorithm will accept the attacked audio samples as valid. Third, we collect general population statistics via an online sur- vey to determine the phone usage habits relevant to our attacks|,Data,100
 We find that the larger width of integer types and the increased amount of addressable memory introduce previously non-existent vulnerabilities that often lie dormant in program code. We empirically evaluate the prevalence of these flaws on the source code of Debian stable (“Jessie”) and 200 popular open-source projects hosted on GitHub,Data,104
| We have applied UniSan to the latest Linux kernel and Android kernel and found that UniSan can successfully prevent 43 known uninitialized data leaks, as well as many new ones. In particular, 19 of the new data leak vulnerabilities in the latest kernels have been confirmed by the Linux community and Google|,Data,107
| This allows us to prevent replay attacks, which are possibly the most applicable attack vectors against biometric authentication. Using a gaze tracking device, we build a prototype of our system and perform a series of systematic user experiments with 30 participants from the general public|,Data,108
| If two commits were blamed for the same amount of lines, blame both. Our heuristic maps the 718 CVEs of our dataset to 640 VCCs|,Data,109
| However, improving our blame heuristics further is an interesting avenue for future research. Apart from the 640 VCCs, we have a large set of 169,502 unclassified commits|,Data,109
|9 The SVM detected a high amount of excep- tions, a high number of changed code, inline ASM code, and variables containing user input such as __input and user. 6As previously mentioned we use the years 2011–2014 as the test dataset, since we have ground truth data on which to base the discussion|,Data,109
| When given a source file, Flawfinder returns lines with suspected vul- nerabilities. It offers a short explanation of the finding as well as a link to the Common Weakness Enumeration (CVE) database|,Data,109
| The paper makes three contributions. First, we conducted the first large-scale mapping of CVEs to GitHub commits in order to create a vulnerable commit database|,Data,109
| Our results show that our approach significantly outperforms the vulner- ability finder Flawfinder. We created a large test database containing 66 C and C++ project with 170,860 commits on which to evaluate and compare our approach|,Data,109
 VoiceLive takes advantages of the user’s unique vocal system and high quality stereo recording of smartphones. • We conduct extensive experiments with 12 participants and three different types of phones under various ex- perimental settings,Data,111
| To test if WebCapsule can successfully record and subsequently replay real-world phishing attacks, we proceeded as follows, us- ing Chromium on our desktop machine. We selected a large and diverse set of recently reported phishing web pages from Phish- Tank8|,Data,112
| 2.4 Datasets and implementation We use two real geographic datasets Cal, SpitzLoc, one synthetic geographic distribution Globe, and one real time- stamp dataset SpitzTime|,Data,113
|4 Datasets and implementation We use two real geographic datasets Cal, SpitzLoc, one synthetic geographic distribution Globe, and one real time- stamp dataset SpitzTime. The dataset Cal represents the latitude and longitude of about 21,000 intersections in the California road network1 (also used by Mavroforakis et al|,Data,113
294258. The dataset SpitzLoc consists of latitude and longitude coordinates tracking the movement of German Green party politician Malte Spitz over six months,Data,113
| In this section, we aim to explore whether the differences of keystroke wave- forms are large enough to be used for recognizing different keys inputs in the real-world setting. We collected training and testing data from 10 volunteers|,Data,114
 B. Real Attacks MAD uniformly detects attacks more quickly than the PAD; we use the former method to detect the presence of an attack in real Internet traces3,Data,119
 III. DATA SET  changes  The data used was the PREDICT ID USC-Lander!  (- 60  The total  were DNS attack packets,Data,120
|395326000  files IPs. There are total 59,928,920 packet counts out of which there was a total of  DoS_DNS_amplification-20130617 (2013-06-17) (2013-06-17) with anonymized million) 358019 DNS packets|,Data,120
| The maximum number of unique hosts per day we measured was 106,000. To understand these differences, we compared the observations from our network monitor to data collected from DShield (www|,Data,121
| 3.1 From our own transactions We engaged in 344 transactions with a wide variety of services, listed in Table 1, including mining pools, wallet services, bank ex- changes, non-bank exchanges, vendors, gambling sites, and mis- cellaneous services|,Data,122
| Wallets. We kept money with most of the major wallet services (10 in total), and made multiple deposit and withdrawal transac- Bank exchanges|,Data,122
|, in which the exchange rate is not fixed) also function as banks. As such, we tagged these services just as we did the wallets: by depositing into and withdrawing from our accounts (but rarely par- ticipating in any actual currency exchange)|,Data,122
|info/tags, including both addresses provided in users’ signatures for Bitcoin forums, as well as self-submitted tags. We collected all of these tags — over 5,000 in total — keeping in mind that the ones that were not self-submitted (and even the ones that were) could be regarded as less reliable than the ones we collected ourselves|,Data,122
| 3.1 Data analysis overview We use three data sets, summarized in Table 1|,Data,123
|1 PlanetLab Deployment We deployed tracebox on PlanetLab, using 72 machines as vantage points (VPs). Each VP had a target list of 5,000 items build with the top 5,000 Alexa web sites|,Data,124
|1 PlanetLab Deployment We deployed tracebox on PlanetLab, using 72 machines as vantage points (VPs). Each VP had a target list of 5,000 items build with the top 5,000 Alexa web sites|,Data,124
| We also describe our application of the technique to the IPv6 interface-level graph captured by CAIDA’s Archipelago (Ark) infrastructure [14] for March 2013. The graph consists of all the 52,986 IPv6 interfaces numbered within the 2000::/3 unicast prefix captured from all 27 Ark vantage points (VPs) with IPv6 connectivity|,Data,125
| cause the counters of distinct routers to diverge, and (4) confirm aliases with pairwise probing. Given the absence of velocity in ID counters and the large probes required for the technique to work, we probe at a low rate of 20pps from a single VP, producing 26Kbps of traffic|,Data,125
| 3. METHODOLOGY In this section, we describe the design of our experiment and our data collection methodology, as well as the mitigating steps and proactive measurements we conducted to ensure a minimal im- pact of our covering routes|,Data,126
| of IPs 1622 1219 159 9,409 9 12,418 No. of Unique ASNs 603 530 62 3,654 8 4,857 In order to validate minimal impact on data plane connectivity, we performed the following: We collected a set of public IPv6 addresses by querying the Alexa top 1M domains [2] for AAAA records|,Data,126
| of IPs 1622 1219 159 9,409 9 12,418 No. of Unique ASNs 603 530 62 3,654 8 4,857 In order to validate minimal impact on data plane connectivity, we performed the following: We collected a set of public IPv6 addresses by querying the Alexa top 1M domains [2] for AAAA records|,Data,126
| Our IPv6 network telescope results suggest sev- eral important differences (and some similarities) compared to that body of work. To produce a more recent and valid comparison, we analyzed a single week of IPv4 background radiation captured during the course of our ongoing IPv6 packet capture|,Data,126
| 4. DATA COLLECTION In this section we describe the datasets used in our analysis, which we summarize in Table 1|,Data,127
| DATA COLLECTION In this section we describe the datasets used in our analysis, which we summarize in Table 1. Our primary dataset consists of changes made to the |,Data,127
| domains, (2) the removal of existing domains, and (3) changes to existing domains in terms of revisions to their associated name- servers. Our data includes captures of the DNZA files as recorded every five minutes, time periods we refer to as epochs|,Data,127
| Since we lack comprehensive ground truth regarding the ultimate use of domains, to this end we use two proxies: subsequent appearance of a newly registered do- main in: (1) an email spam campaign, or (2) a domain blacklist. For the first of these, we operated a spam trap, i|,Data,127
|com), by restricting our focus to domains recently registered (March–July 2012) we can filter down the do- mains appearing in the spam trap to those very likely used for spam- ming. For the second, we subscribed to three major DNS blacklists, URIBL, SURBL, and Spamhaus DBL|,Data,127
| In this paper, we examine the effectiveness of these inter- ventions in the context of an understudied market niche, counterfeit luxury goods. Using eight months of empirical crawled data, we identify 52 distinct SEO campaigns, document how well they are able to place search results for sixteen luxury brands, how this ca- pability impacts the dynamics of their order volumes and how well existing interventions undermine this business when employed|,Data,128
| For a small number of stores, we were also able to collect user traffic data that directly measures an SEO campaign’s effectiveness in attracting customers to their stores. Specifically, we were able to periodically collect AWStats data for 647 storefronts in 12 cam- paigns|,Data,128
| One issue that undermines coverage is that Google only labels the root of a Web site as “hacked”, and does not label search results that link to sub-pages within the same root domain. In the PSR data set, we found 68,193 “hacked” search results|,Data,128
| We begin by exam- ining the properties of individual darknets and in particular the behavior of source IP addresses. We provide these char- acterizations by looking at data from 14 darknet monitors ranging in size from a /25 monitor to a /17 monitor over a period of 10 days between August 18, 2004 and August 28, 2004|,Data,129
| Figure 10: The number of darknets (of 31) reporting a port in the top 10 ports over a day, week, and month time frame. The analysis is performed for the top 10 destination ports over a day, top 10 destination ports over a week, and top 10 destination ports over a month|,Data,129
| 3.6 Datasets This paper uses DNS datasets from three authorities: one national-level top-level domain, operators of two root servers as shown in Table 1|,Data,130
 JP-DNS operates the .jp country code domain for Japan; we have data from all seven of their anycast sites,Data,130
|) part of the 2014 DITL collection [16] (for B-Root, shortly after 2014 DITL). We also use data for M-Root’s 2015 DITL collection (§ 4|,Data,130
 These root datasets are available to re- searchers through DNS-OARC. For longitudinal analysis we draw on 9 months of data taken at the M-Root server,Data,130
| However, we treat the union of these classes together. We use data from 103 surveys taken between April 2006 and February 2015, and performed initial studies based on 2011–2013 data, but focus on the most recent of them, in January and February of 2015 for data quality and time- liness|,Data,131
| We use data from 103 surveys taken between April 2006 and February 2015, and performed initial studies based on 2011–2013 data, but focus on the most recent of them, in January and February of 2015 for data quality and time- liness. The dataset consists of all echo requests that were sent as part of the surveys in this period, as well as all echo responses that were received|,Data,131
|, “host unreachable”); we ignore all probes as- sociated with such responses since the latency of ICMP error responses is not relevant. In later sections, we will complement this dataset with results from Zmap [5] and additional experiments includ- ing more frequent probing with Scamper [13] and Scrip- troute [22]|,Data,131
| 3.2 Milking 3 Methodology To collect the information needed to cluster servers into oper- ations, we have built an infrastructure to track individual exploit servers over time, periodically collecting and classi- fying the malware they distribute|,Data,132
 2. We receive feeds of drive-by download URLs (Sect,Data,132
 2. CHARACTERISTICS OF CHECK-INS We use three different datasets that capture human mobility,Data,133
 First we consider two online location-based social networks. We col- lected all the public check-in data between Feb,Data,133
| There are 196,591 nodes, 950,327 edges in Gowalla and 58,228 nodes, 214,078 edges in Brightkite. To ensure that our observations on human movement are not specific to data based on check-ins from location-based social net- works, we also include a dataset of cell phone location trace data|,Data,133
| Backscatter DDoS is a commonly seen behaviour in darknets where the attacker uses simultaneous bots to generate the actual attack packets to reach the targeted (original) victim. In our study, five publicly available network traffic datasets from CAIDA’s archives are employed|,Data,134
| Datasets Employed In this research, five publicly available real-life network traffic traces (datasets) from CAIDA’s archives are employed. Three of them, which were captured by a passive darknet in 2007, 2008 and 2012 [27][26][28], namely UCSD Network Telescope [21], include mostly one-way malicious traffic while the remaining ones collected in 2008 [29] and 2014 [30] via CAIDA’s Internet backbone links include only normal traffic|,Data,134
| 3 Approach This section presents our approach for the evalua- tion of reputation based blacklists. We evaluated the blacklists by deploying them in a large academic net- work of over 7,000 hosts|,Data,135
| This was a preliminary step to preventing inexperienced and non-serious workers from participating in our survey. Our survey is based on the participants’ actual check-ins on Foursquare posted over the last 24 months (that we collected through a specific application we developed), and it requires a significant amount of time to complete (30-45 minutes)|,Data,136
| The third phase of worm activ- ity is the persistence phase which for the Blaster worm has continued through 2004. In this one-week period of measurement, the IMS system observed over 286,000 unique IP addresses displaying the characteristics of Blaster activity|,Data,137
| published a study in 2011 that focused on the dynamics of leaf cer- tificates and the distribution of certificates among IP addresses, and attempted to roughly classify the overall quality of served certifi- cates. The study was based on regular scans of the Alexa Top 1 Mil- lion Domains [1] and through passive monitoring of TLS traffic on the Munich Scientific Research Network [17]|,Data,138
| Our study is founded on what is, to the best of our knowledge, the most comprehensive dataset of the HTTPS ecosystem to date. Between June 2012 and August 2013, we completed 110 exhaustive scans of the public IPv4 address space in which we performed TLS handshakes with all hosts publicly serving HTTPS on port 443|,Data,138
| Between June 2012 and August 2013, we completed 110 exhaustive scans of the public IPv4 address space in which we performed TLS handshakes with all hosts publicly serving HTTPS on port 443. Over the course of 14 months, we completed upwards of 400 billion SYN probes and 2|,Data,138
| Content Provider e Service Provider v i t c e p s r e P Content Consumer Addressing Prerequisite IP Functions Routing Naming A1: Address Allocation; A2: Address Advertisement N1: Nameservers; R1: Server Readiness N2: Resolvers N3: Queries A2: Address Advertisement; T1: Topology End-to-End Reachability R1: Server Readiness Operational Characteristics Usage Profile Performance U3: Transition Technologies U1: Traffic Volume; U3: Transition Technologies P1: Network RTT R2: Client Readiness U2: Application Mix; N3: Queries Table 2: Dataset summary showing the time period, scale, and public or new status of the datasets we analyzed. Dataset RIR Address Allocations Routing: Route Views Routing: RIPE Google IPv6 Client Adoption Verisign TLD Zone Files CAIDA Ark Performance Data Arbor Networks ISP Traffic Data Verisign TLD Packets: IPv4 Verisign TLD Packets: IPv6 Alexa Top Host Probing Time Period Metrics Jan 2004 – Jan 2014 A1 Jan 2004 – Jan 2014 A2, T1 Jan 2004 – Jan 2014 A2, T1 Sep 2008 – Dec 2013 R2, U3 Apr 2007 – Jan 2014 N1 P1 Dec 2008 – Dec 2013 U1, U2, U3 Mar 2010 – Dec 2013 Jun 2011 – Dec 2013 N2, N3 N2, N3 Jun 2011 – Dec 2013 Apr 2011 – Dec 2013 R1 Recent Scale ≈18K allocation snapshots (5 daily) 45,271 BGP table snapshots millions of daily global samples daily snapshots of ≈2|,Data,139
com & .net) ≈10 million IPs probed daily ≈33-50% of global Internet traffic; 2013 daily median: 50 terabits/sec (avg,Data,139
| To put the IPv6 allocation data in context, Figure 1 also shows IPv4 prefix allocations over the same period. The number of IPv4 prefix allocations grows from roughly 300 per month at the begin- ning of our observation period to a peak of 800–1000 per month at the start of 2011, after which it drops to around 500 per month in the last year, as the number of available addresses at RIRs has dwindled|,Data,139
| There were less than 30 IPv6 prefixes al- located per month prior to 2007, generally increasing thereafter. In the past several years, we typically find more than 300 prefixes allocated per month, with a high point of 470 prefix allocations in February 2011|,Data,139
| The number of IPv4 prefix allocations grows from roughly 300 per month at the begin- ning of our observation period to a peak of 800–1000 per month at the start of 2011, after which it drops to around 500 per month in the last year, as the number of available addresses at RIRs has dwindled. 1 Overall, we find nearly 69K IPv4 prefix allocations at the beginning of our dataset and just over 136K at the end|,Data,139
| We deployed this detection mechanism on an Alexa top 10 website, Facebook, which terminates connections through a diverse set of network operators across the world. We analyzed 3, 447, 719 real-world SSL connections and successfully discovered at least 6, 845 (0|,Data,140
| We deployed this detection mechanism on an Alexa top 10 website, Facebook, which terminates connections through a diverse set of network operators across the world. We analyzed 3, 447, 719 real-world SSL connections and successfully discovered at least 6, 845 (0|,Data,140
| Table 1 shows the datasets we use in our paper. We use two ICMP surveys taken by USC [12]: IT17ws and IT16ws; IT17ws is the main dataset used in this paper, while we use IT16ws for validation in Section 6|,Data,142
2. We collected VUSC s at our enterprise in order to compare our inferences with network operators as discussed in Section 6,Data,142
| # of Data-Oriented Attacks gives the number of attacks generated by FLOWSTITCH, includ- ing privilege escalation attacks and information leakage attacks. FLOWSTITCH generates 19 data-oriented attacks from 8 vulnerable programs|,Data,144
| Third, this method is not specific to C or C++, and can be applied to any programming language. We collected C++ source of thousands of contestants from the annual international competition “Google Code Jam”|,Data,145
| Finally, we analyze various attributes of programmers, types of programming tasks, and types of features that appear to influence the success of attribution. We identified the most important 928 fea- tures out of 120,000; 44% of them are syntactic, 1% are layout-based and the rest of the features are lexical|,Data,145
|3.1ScalingWecollectedalargerdatasetof1,600programmersfromvariousyears|,Data,145
| ) s y a D n i (    e m T i  7  6  5  4  3  2  1  10  20  30  40  50  60  70  80  90 Time Before Accounts Suspension Number of IP Addresses 2 Motivation: Analysis of Malicious Activ- ity on a Webmail Service We want to understand the way in which cybercrimi- nals abuse accounts on online services, to identify weak points that we could leverage for detection. To this end, we observed the email-sending activity on a large web- mail service|,Data,147
| Following accepted frameworks for qualitative research [18, 30, 35], we focus closely on a small number of participants. We interviewed 15 journalists employed in a range of well-respected journalistic institutions in the United States and France, analyzing these interviews using a grounded theory approach [18, 30]|,Data,146
| 3.1 Datasets We examine 13,345 passwords from four sets created under composition policies ranging from the typical to the currently less common to understand the suc- cess of password-guessing approaches against passwords of different characteristics|,Data,149
| Had we used any major password leak, their analysts would have already been familiar with most or all of the passwords contained in the leak, biasing results. The passwords in these sets were collected using Ama- zon’s Mechanical Turk crowdsourcing service|,Data,149
| The decision for or against pinning is always a trade- off between increasing security and keeping mainte- nance efforts at an acceptable level. In this paper, we present an extensive study on the applicability of pinning for non-browser software by analyzing 639,283 Android apps|,Data,152
| Therefore, we instrument telemetry data from a popular anti-virus software provider. We evaluate the update behaviour of 871,911 unique users from January 2014 to December 2014 and find that only 50% of the users update to a new app version within the first week after release|,Data,152
| Developer View Although pinning is only ap- plicable in relatively few cases, the nominal-actual comparison leaves room for improvement. We there- fore collected feedback from 45 developers of apps for which we would recommend pinning|,Data,152
| Section 4). Altogether we found 20,020,535 calls to network related API calls (cf|,Data,152
| Instability of the routes to the sensor address space can also result in reachability problems, especially given that route flap damping can be triggered during convergence to suppress unstable routes [9]. Using the BGP updates data from RouteViews BGP monitor, we studied the availability of the routes to the sensor blocks in our de- ployment from a large set of ASes|,Data,154
| This section probes these differences using three successively more specific views of traffic to a network of distributed blackhole sensors. The data was recorded over a one month period with SYN responders on TCP port 135, 445, 4444, and 9996 across all sen- sors|,Data,154
|  V. EXPERIMENT RESULTS  In this section, we mainly focus on how our router-to-AS Mapping method and other baseline methods behave on global router-level topology, as discussed above, we use PeeringDB data as ground truth, and apply clustering method on global topology based on CAIDA ITDK project|,Data,155
| It describes the properties that a dataset should have in order to be used for comparison purposes. The dataset used in the paper includes an IRC-based Botnet attack1, but the bot used for the attack was developed by the authors and therefore it may not represent a real botnet behavior|,Data,156
| This dataset may be downloaded with authorization. The Protected Repository for the Defense of Infrastructure Against Cyber Threats (PRE- DICT) indexed three Botnet datasets2 until May 16th, 2013|,Data,156
 None of them are labeled. A custom botnet dataset was created to verify five P2P botnet detection algorithms in Saad et al,Data,156
| Unfortunately, there is only one infected machine for each type of botnet, therefore no synchronization analysis can be done. The Traffic Laboratory at Ericsson Research created a normal dataset that was used in Saad et al|,Data,156
 This is the only normal dataset that is labeled inside the pcap file. A considerable amount of malware traffic in pcap format was published in the Contagio blog9,Data,156
| But since each scenario includes only one infected computer, it should be possible to label them. Another dataset with malware logs and benign logs was collected in NexGinRC (2013)|,Data,156
 Access to this dataset may be granted upon request10. The last dataset analyzed is currently created by the MAWI project described in Cho et al,Data,156
| Methodology and datasets We deployed Paris Traceroute with its Multipath Detection Algorithm (MDA) [29] enabled in 90 PlanetLab nodes. We configured each node to trace IP-level routes toward 10 thou- sand destinations selected at random from a list of 102,404 reachable destinations in different /16 prefixes we obtained from the PREDICT project [11]|,Data,158
| We configured each node to trace IP-level routes toward 10 thou- sand destinations selected at random from a list of 102,404 reachable destinations in different /16 prefixes we obtained from the PREDICT project [11]. Our dataset contains more than 900 thousand IP-level (multi)routes and 324,313 IP addresses|,Data,158
1 3.1 Address Allocation and BGP Data We analyzed BGP announcements captured by all collectors (24 collectors peering with 184 peers) of the Routeviews [3] and RIPE RIS [52] projects,Data,159
| For each /24 block, we computed the maximum number of peers that saw it reachable at any time within the full observation period of 92 days. To determine which address blocks are available for assignment, we used a dataset compiled by Geoff Hus- ton [23], which merges the extended delegation files from the 5 RIRs [4, 6, 7, 41, 51] with IANA’s published registries [31–36]|,Data,159
| SWITCH. We collected unsampled NetFlow records from all the border routers of SWITCH, a national aca- demic backbone network serving 46 single-homed uni- versities and research institutes in Switzerland [55]|,Data,159
| R-ISP. We collected per-flow logs from a vantage point monitoring traffic of about 25,000 residential ADSL customers of a major European ISP [21]|,Data,159
 UCSD-NT. We collected full packet traces from the /8 network telescope operated at the University of Cal- ifornia San Diego [1],Data,159
| IXP. Our fourth VP is a large European IXP inter- connecting more than 490 networks, exchanging more than 400 PB monthly [5]|,Data,159
|3 Active Measurements ISI. We used the ISI Internet Census dataset it55w- 20130723 [37], obtained by probing the routed IPv4 address space with ICMP echo requests and retaining only those probes that received an ICMP echo reply from an address that matched the one probed (as rec- ommended [38])|,Data,159
| HTTP. We extracted IP addresses from logs of Project Sonar’s HTTP (TCP port 80) scan of the entire IPv4 address space on October 29, 2013 [24]|,Data,159
| Definitions of graph parameters measuring metric tree-likeness of a graph, as well as notions and notations local to a section, are given in appropriate sections. 3 Datasets Our datasets come from different domains like Internet measurements, biological datasets, web graphs, social and collaboration networks|,Data,160
| The experiments were executed as follows. Traces were col- lected by using ICMP, UDP, and TCP Traceroute to probe the paths to a set of 100 destination websites from a source located on the Pennsylvania State University, University Park campus|,Data,161
| For UDP and TCP Traceroute, traces were collected using the default destination port numbers. We also collected traces using other ports and observed similar results|,Data,161
| Realistic Networks Here we compare the merged topologies produced by iTop, MN, and Isomap for realistic topologies. We use the Au- tonomous System (AS) topologies from both the Rocketfuel [20] and the CAIDA [21] projects, which represent IP-level connections between backbone/gateway routers of several ASes from major Internet Service Providers (ISPs) around the globe|,Data,161
| Although the paris-traceroute output of ITDK is more reliable than that of IPlane’s traceroute, the random selection of endpoints implemented by CAIDA hinders the collection of routes between the same vantage- and endpoints. Therefore we used the data of IPlane’s traceroute measurements|,Data,162
| They can also be used for constructing maps of the Internet at the Autonomous Systems level [, ]. In this work we used the CAIDA router-level Internet map from October th,  []|,Data,163
| 3 Table 1: Dataset Description Name BGP Usage AS Geolocation; Detour Detection Date 2016-01 Sources Info RouteViews, RIPE 38,688 RIBS, 416 peers, RIS 30 countries, 55GB Infrastructure IP List AS Geolocation 2016-01 to 2016-03 CAIDA Ark, iPlane, OpenIPMap, RIPE Atlas Measurements 3M Router IPs Infrastructure IPs to AS Mapping Infrastructure IP geolocation 2015-08 CAIDA ITDK, iPlane 6.6M IP to AS mappings AS to IXP Mapping AS Relationship AS Geolocation 2016-01 to 2016-03 Filtering peered paths from detection 2016-01 Traceroute Detour Validation 2016-05-01 IXP websites, PeeringDB, PCH CAIDA AS Relationship RIPE Atlas MaxMind Prefix Geolocation; Detour Validation 2016-01, 2016-03 MaxMind GeoLite City (free and paid) 368 IXP websites crawled 482,657 distinct relationships Used by Netra, 163 traceroutes Paid version used only for geolocating infrastructure IPs and detour validation longest prefix match on the global routing table and map the IP to the AS announcing the longest matching prefix|,Data,164
| As shown in Figure 3, we install LaBrea on a /29 subnetwork and use PlanetLab [9] to probe from multiple vantage points the entire /24 aggre- gate to which the /29 belongs. We scan the /24 network by attempting to establish TCP connections to each IP address in the subnet and capture the packets for further analysis|,Data,165
| • Active IPs in a Subnet: Intuitively, we might ex- pect high-occupancy subnets to be good indicators of pos- sible tarpits. To this end, we initially investigated using a hitlist of probable tarpits as inferred from the /24 subnets with more than 240 responding web hosts in the scans|,Data,165
| To facilitate large-scale scanning and avoid triggering anomaly detectors, degreaser uses permu- tation scanning [7, 12] to pseudo-randomly iterate through the IP address space when probing. Our real-world Internet scan, which probes at least one address in each /24 network in the Internet, discovers 107 different tarpit subnetworks (cid:20)(cid:24)(cid:25) ranging in size from /16 (with up to 216 fake hosts) to /24 (with up to 28 fake hosts)|,Data,165
  III. DATA SET  The data used in this work was the PREDICT ID USC-Lander/ DoS_DNS_amplification-20130617 (2013- 06-17) to (2013-06-17) [26],Data,166
  III. DATA SET  The data used in this work was the PREDICT ID USC-Lander/ DoS_DNS_amplification-20130617 (2013- 06-17) to (2013-06-17) [26],Data,166
| • Discovering correlations between anomalous traffic types detected with deep inspection techniques and traffic feature entropy variations. • Providing a traffic-type dissection (in-depth and entropy based) of a representative portion of the IBR for three weeks of April, 2012, with a 10-minute time scope|,Data,167
 Following is the summary of information about these data sets:  1. Data set from PREDICT USA [24] which contains traces of a DNS distributed denial of service attack (DDOS),Data,168
  from optical  2. Data set from CAIDA USA [25] which contains internet internet connectivity from 2002 and 2003,Data,168
  3. Data set from our experiment in which a PCAP file is captured from a lab computer which is being used for browsing and software development for the cyber security project,Data,168
|Abstract People travel in the real world and leave their location history in a form of trajectories These trajec- tories do not only connect locations in the physical world but also bridge the gap between people and locations This paper introduces a social networking service, called GeoLife, which aims to understand trajectories, locations and users, and mine the correlation between users and locations in terms of user- generated GPS trajectories GeoLife offers three key applications scenarios: 1) sharing life experiences based on GPS trajectories; 2) generic travel recommendations, e|,Non-data,2
|g, the top interesting locations, travel sequences among locations and travel experts in a given region; and 3) personalized friend and location recommendation 1 INTRODUCTION The advance of location-acquisition technologies like GPS and Wi-Fi has enabled people to record their location history with a sequence of time-stamped locations, called trajectories These trajectories imply to some extent users’ life interests and p|,Non-data,2
|ABSTRACT SMS (Short Messaging Service) is a text messaging service for mo- bile users to exchange short text messages It is also widely used to provide SMS-powered services (eg, mobile banking)|,Non-data,69
| With the rapid deployment of all-IP 4G mobile networks, the underlying technology of SMS evolves from the legacy circuit-switched net- work to the IMS (IP Multimedia Subsystem) system over packet- switched network In this work, we study the insecurity of the IMS-based SMS We uncover its security vulnerabilities and ex- ploit them to devise four SMS attacks: silent SMS abuse, SMS spoofing, SMS client DoS, and SMS spamming We further dis- cover that those SMS threats can propagate towards SMS-powered services, thereby leading to three malicious attacks: social network account hijacking, unauthorized donation, and unauthorized sub- scription|,Non-data,69
| Our analysis reveals that the problems stem from the loose security regulations among mobile phones, carrier networks, and SMS-powered services We finally propose remedies to the identified security issues Keywords Mobile networks; LTE; IMS; SMS; attack; defense 1 INTRODUCTION SMS (Short Message Service) is one of the fundamental ser- vices in mobile networks|,Non-data,69
| It is supported by almost all cellular- connected mobile devices (74 billion devices in 2014) It is not only used for interpersonal communications, but also employed by SMS-powered services, which empower companies to reach or/and authenticate their customers via SMS They have been used by var- ious types of industries, such as social network (e|,Non-data,69
|g, Facebook, Twitter), grocery (eg, Walmart), airline (e|,Non-data,69
|g, American Airline), ∗ The first two authors equally contribute to this work Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full cita- tion on the first page Copyrights for components of this work owned by others than ACM must be honored|,Non-data,69
| Abstracting with credit is permitted To copy otherwise, or re- publish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee Request permissions from permissions@acmorg|,Non-data,69
| CCS’16, October 24-28, 2016, Vienna, Austria c(cid:2) 2016 ACM ISBN 978-1-4503-4139-4/16/10  |,Non-data,69
 $1500 DOI: http://dxdoiorg/10,Non-data,69
|1145/29767492978393 Songwu Lu University of California, Los Angeles, CA, USA slu@csuclaedu bank (e|,Non-data,69
|g, Chase), apparel (eg, A&F), courier (e|,Non-data,69
|g, Fedex, UPS) and instant messaging application (eg, Whatsapp), to name a few|,Non-data,69
| The success of the SMS-based approach stems from two rea- sons First, the delivery of SMS messages within mobile networks protects confidentiality and integrity [21] Though it has some se- curity issues (eg|,Non-data,69
|, the unauthorized SMS messages sent by the phone-side malware or the spoofed SMS messages sent from the Internet), thanks to the efforts of research community and indus- try [8, 9, 15, 37, 43, 48, 49], they are well addressed in the 2G/3G networks, at least for the top four largest US carriers Second, SMS, a fundamental service of mobile phones, is the most con- venient way for service providers to reach billions of mobile users Since the 4G LTE network supports only packet-switched (PS) domain, the services of the conventional circuit-switched (CS) do- main shall be migrated to the IP Multimedia Subsystem (IMS) [1] over the PS domain The PS domain is used for the data plane of mobile networks, whereas the CS domain is mainly for the sig- naling messages on the control plane|,Non-data,69
| Thus, the underlying tech- nology of SMS has to shift from the control-plane CS to the data- plane IMS At this point, the natural question is: given the dramatic change of the SMS design in the 4G network, are mobile phones, carriers’ SMS infrastructures and SMS-powered services as secure as usual? Unfortunately, our study yields a negative answer Our results show that all of those three parties may suffer from the attacks caused by the change of underlying security semantics In par- ticular, 28 out of the 40 SMS-powered services (summarized in Table 2) which we choose from some big companies of various in- dustries, are vulnerable to SMS security threats|,Non-data,69
| Due to space limit and similarity, we do not list other studied SMS-powered services from USPS, Dollar Tree, ZipCar, Weathercom, etc Specifically, we devise four attacks based on the vulnerabilities of the IMS-based SMS: silent SMS abuse, SMS spoofing, SMS client DoS, and SMS spamming towards IMS The victims of the first three attacks are mobile users, whereas those of the last at- tack are carriers|,Non-data,69
| We further discover that those vulnerabilities can be exploited to launch three major attacks against SMS-powered services: social network account hijacking, unauthorized donation, and unauthorized subscription Table 1 summarizes our findings Note that our presumed attack model is relatively simple: the at- tacker uses only commodity smartphones and has no control of car- rier networks Moreover, we evaluate those attacks in a responsible and controlled manner (i|,Non-data,69
|e, the victims are only the participants of this project) 1118Category Attack user Victim Silent SMS abuse Mobile SMS client DoS Mobile SMS spamming towards IMS SMS spoofing Description and Threat Adversary exploits the malware on the victim phone to abuse SMS silently Adversary exploits the malware on the victim phone to exhaust the SMS client’s resources|,Non-data,69
 Adversary sends spam SMS messages to the IMS system Adversary sends SMS messages on behalf of the victim without his/her awareness Adversary hijacks the victim’s Facebook account and abuse it Adversary donates money to Red Cross from the victim’s bill,Non-data,69
| Adversary makes mobile users subscribe to one service, the provider of which may receive the users’ complaints of unauthorized subscription Main Vulnerability V1: Leakage of SIP Session Information (§411) V2: Injection of Forged SIP Messages (§4|,Non-data,69
|12) V3: Insufficient SMS Access Defense at Phone (§421) V1, V2, V3 V4: Spoofable SMS Messages at IMS Server (§4|,Non-data,69
|22) ◦ Phones & Carriers: V1, V2, V3 and V4 ◦ Facebook: No runtime authentication (§51) ◦ Phones & Carriers: V1, V2, V3 and V4 ◦ Red Cross: weak authorization (§52) ◦ Phones & Carriers: V1, V2, V3 and V4 ◦ Home Depot: weak authorization (§5|,Non-data,69
|3) user Carrier Mobile user Mobile user Mobile user Service provider IMS- based SMS (§4) SMS- powered services (§5) Account hijacking Unauthorized donation Unauthorized subscription Table 1: Summary of our main findings on IMS-based SMS vulnerabilities and proof-of-concept attacks The identified attacks root in the security vulnerabilities span- ning mobile phones, carrier networks, and SMS-powered services On the mobile phones, the SMS-related security mechanisms (eg|,Non-data,69
|, SMS permission control) remain invariant while the SMS tech- nology evolves; thus, they are easily bypassed For the carrier networks, though the standards provide several SMS security op- tions, the flexibility of which helps carriers accommodate the di- versified service demands of mobile users, they may expose both carriers and mobile users to the serious security threats The SMS- powered service providers still rely on the existing defense, which is used to be against the legacy SMS threats Therefore, the un- precedented SMS threats introduced by the IMS-based SMS may hurt the SMS-powered services|,Non-data,69
| In summary, we study the insecurity of the IMS-based SMS by systematically exploring all the parties involved: mobile phones, carrier networks, and SMS-powered services The paper makes three major contributions 1 We identify four vulnerabilities of the IMS-based SMS on mobile phones and the IMS system|,Non-data,69
| They come from the se- curity issues of its fundamental designs (ie, software-based client, flexible protocol, data-plane communication channel), and the security mechanisms stipulated by the standards 2|,Non-data,69
| We devise proof-of-concept attacks against mobile users, car- riers, and SMS-powered service providers, by exploiting the identified vulnerabilities We assess their impact in two ma- jor US carriers 3 We point out root causes and propose recommended solu- tions|,Non-data,69
| The lessons we learned not only help secure the global deployment of IMS-based SMS, but also benefit the mobile industry The rest of this paper is structured as follows §2 introduces the background of SMS §3 describes the potential security issues of IMS-based SMS, as well as threat model and methodology|,Non-data,69
| In §4, we present four security vulnerabilities of IMS-based SMS, and sketch four proof-of-concept attacks We then devise three major attacks against SMS-powered services in §5 We propose solutions and discuss several remaining issues in §6 and §7, respectively §8 presents related work, and §9 concludes the paper|,Non-data,69
| 2 BACKGROUND ment of the IP Multimedia Subsystem (IMS), which is the desig- nated solution of offering multimedia services in mobile networks It shifts from the legacy circuit-switched (CS) technology to the IMS-based, packet-switched (PS) design To empower the Internet users to communicate with mobile users via SMS, there exists the other Internet-based SMS|,Non-data,69
| Based on this technology, many SMS- powered services are developed by companies to interact with their customers via SMS (eg, Uber contacts users via SMS) Figure 1 shows the architecture of the Internet-based, CS-based (i|,Non-data,69
|e, the legacy), and IMS-based SMS services Each of them has an SMS client at the end device The client sends/receives SMS messages to/from a central controller called SMS Center|,Non-data,69
 The SMS center is responsible for store-and-forward of SMS messages We next elaborate each SMS service Internet-based SMS The SMS client maintains a session with the server of the Internet SMS provider (e,Non-data,69
|g, Twilio, Vibes, etc) The server forwards SMS messages between the Internet client and the SMS center in the mobile network|,Non-data,69
 The interface used between the server and the SMS center relies on SMPP (Short Message Peer- to-Peer) protocol CS-based SMS It is mainly used in 2G/3G networks The SMS client on the mobile phone relies on the CS gateway to forward SMS messages to/from the SMS center,Non-data,69
| The messages are carried by a particular control signaling through the control plane of the mobile network IMS-based SMS Unlike the CS-based SMS, its messages are carried by particular data packets through the data plane, which is taken care of by the PS gateway Specifically, it relies on the popular Session Initiation Protocol (SIP) [36] to control the SMS delivery|,Non-data,69
| A SIP-based session is maintained between the phone’s SMS client and the IMS server The IMS server is responsible for bridging the SIP session and the SMS center 1 21 Current Threats and Defenses The practical security issues of the IMS-based SMS are less ex- plored, but those of both the CS-based and Internet-based SMS ser- vices have been well studied [8, 15, 26, 30, 39, 45]|,Non-data,69
| There are two major SMS threats in those two SMS services: unauthorized SMS access and SMS spoofing The former mainly happens on mobile phones, whereas the latter takes place on both mobile and the In- ternet devices We describe each threat and its defenses below Unauthorized SMS access|,Non-data,69
| A mobile application maliciously Short Message Service (SMS) is a text messaging service for mobile users Its underlying technology advances with the deploy- 1We here focus on the IMS-based SMS supported by the 4G network, though it can be also deployed in the 3G network 1119Internet- based SMS CS-based  SMS IMS-based  SMS Internet CS Gateway Base Stations 3G 4G Internet SMS  Providers SMS Center PS Gateway IMS Server Radio Access Core Network Figure 1: Architecture of the legacy (Internet-based and CS- based) and IMS-based SMS services sends out SMS messages without user consent|,Non-data,69
| This threat has been largely prevented by most antivirus applications (eg, Kaspersky and McAfee) and mobile OS Both of them monitor all the SMS activities from mobile applications, and then take actions when any malicious behaviors are detected (e|,Non-data,69
|g, users send SMS messages to the numbers that would cause monetary loss) Some actions have been taken by antivirus applications, such as stopping malicious SMS activities, bring them to users’ attention, etc The major action taken by mobile OS (e|,Non-data,69
|g, Android) is to halt each malicious SMS activity until the user permits it through a pop-up dialog SMS Spoofing An attacker is able to set who an SMS message appears to come from by replacing the originator’s phone number so that she can send out SMS messages to a recipient on behalf of another mobile user|,Non-data,69
| This threat happens in both the CS-based and Internet-based SMS services For the CS-based SMS, the threat comes from the vulnerability of 2G networks, no mutual authenti- cation [11] It does not require mobile phones to authenticate their serving networks, so they may be trapped into fake 2G networks Through the fake networks, spoofed SMS messages can be easily sent to the phones|,Non-data,69
| Though they can be detected by the law en- forcement agencies [10], there are still no ultimate solutions that can eliminate all the fake networks or prevent devices from asso- ciating with the fake ones Moreover, the 2G technology will not completely disappear in the near future Some carriers [7] will re- tire 2G shortly, but other carriers and most devices will still main- tain 2G backward compatibility for years The Internet-based SMS spoofing is based on the vulnerabil- ity that the Internet SMS providers do not restrict the originator number of each SMS message only to be the originator’s|,Non-data,69
| Their customers are thus allowed to maliciously send out the spoofed SMS messages on behalf of other mobile users, who are consid- ered as victims For example, by sending a spoofed SMS mes- sage on behalf of a victim to a charity organization, which pro- vides an SMS-powered service to accept the donation, an attacker can force the victim to donate money There were even some web sites [44, 46, 47] offering SMS spoofing services This spoofing threat can be prevented by authenticating the originator numbers of SMS messages|,Non-data,69
| However, this mechanism is not stipulated in the standard, but relies on various Internet-based SMS providers outside mobile networks It is still uncertain whether all providers adopt the mechanism or do it right, so the threat may not be elimi- nated completely Note that these two threats may also happen for the IMS-based SMS, but the current defenses are not applicable to it Differ- ent from the current SMS spoofing attacks, which are from either the fake 2G networks or the Internet, our identified SMS spoofing threat comes from malicious mobile users inside mobile networks|,Non-data,69
| 3 NEW SECURITY ISSUES FROM IMS-BASED SMS We investigate the security issues of the IMS-based SMS by sys- tematically considering all the aspects where it differs from the legacy, CS-based SMS There are three major dissimilarities: SMS client design (ie|,Non-data,69
|, software-based versus hardware-based), SMS protocol design (ie, different flexibility), and the communication channel between the SMS client and the core network (ie|,Non-data,69
|, data- plane versus control-plane) We also review the security mecha- nisms stipulated for the IMS system in the standards In the follow- ing, we analyze the security issues which may happen from these four aspects, and present our threat model and methodology Software-based Client Design|,Non-data,69
| The IMS-based SMS takes a software-based client design so that the SMS client is deployed as a mobile application (eg, an Android application) Different from the hardware-based client of the legacy SMS, it is so flexible that carriers can customize SMS to satisfy various user demands|,Non-data,69
| How- ever, it is more vulnerable to attacks, since abusing the software- based client is much easier than compromising the hardware-based client located at the phone modem Once the mobile OS does not have any proper security protection for the SMS client, SMS is ex- posed to security threats For example, a malicious user can hijack the SMS client to attack the IMS system, or the malware can send out forged SMS messages by pretending to be the SMS client Flexible Protocol Design|,Non-data,69
| The SIP protocol on which the IMS- based SMS relies is more flexible than the legacy SMS Specifi- cally, the control information in the SMS message header can be specified on the device end, but the legacy SMS does not offer such flexibility Without the strict security check of the SMS message header in the IMS server, this flexibility may allow malicious users or the malware to easily forge harmful SMS messages For exam- ple, a malicious user can spoof the originator’s number of a SMS message to launch the attack of SMS spoofing|,Non-data,69
| Data-plane Communication Channel The IMS system shifts the communication channel of SMS, which is between the client and the core network, from the control plane of the legacy SMS to the data plane All well-tested security mechanisms of the control- plane signaling (eg|,Non-data,69
|, identity authentication, message encryption, integrity protection, etc) at the CS gateway (as shown in Fig- ure 1) are not applicable to the PS-based IMS system As a re- sult, when the IMS system’s security mechanisms are still at the initial stage, its offered SMS can be vulnerable to security threats, like VoLTE [24] For example, the forged SMS messages can take effect without being detected|,Non-data,69
| Stipulated Security Mechanisms The 3GPP and 3GPP2 [2] standards, which are two different telecommunication specifica- tions, stipulate different IMS system designs and security mech- anisms They are funded by two different industry consortiums, and each of them has supporters In the US, they are supported by AT&T/T-Mobile and Verizon/Sprint, respectively|,Non-data,69
| In the 3GPP standard, IPSec-3GPP, where IPSec (Internet Protocol Security) is a protocol suite for secure IP communications, is the only and mandatory security mechanism for IMS However, the 3GPP2 stan- dard offers more freedom on the IMS security Besides the IPSec- 3GPP mechanism, it provides other four options: TLS (Transport Layer Security), DIGEST (Digest authentication), IPSec-IKE (IPSec Internet Key Exchange), and IPSec-Main Such freedom may ex- pose the IMS system to security threats|,Non-data,69
| For example, one carrier may employ only the DIGEST mechanism without the end-to-end security, IPSec, so that it may suffer from eavesdropping or man- in-the-middle attacks 112031 Threat Model and Methodology The victims can be mobile users, carriers (the IMS system is under attack), or SMS-powered service providers, whereas the pre- sumed attacker is a mobile user The attacker has a rooted com- modity smartphone so that she can gain full control of the mobile OS for two purposes|,Non-data,69
| First, she can crack the IPSec protection of SMS to launch attacks against the IMS system with IPSec (ie, SMS spamming) Second, she can collect the information that can- not be obtained without root access|,Non-data,69
| It includes the SIP session information of SMS, which is required for the development of the malware used in the attacks In the attack of SMS spoofing, the malware is not required to be deployed on the victim phone, but can be put on another phone that is used as a springboard to attack the victim However, the other attacks requiring the malware need it to be on the victim phone Note that the malware does not re- quire root access or SMS permission (i|,Non-data,69
|e, allowed to use SMS API to send/receive SMS messages) in the mobile OS, but only network permission In all cases, the attacker has no full control of the vic- tim phones, the IMS system and the SMS-powered service servers We validate vulnerabilities and attacks in two top-tier US carri- ers, which are denoted as OP-I and OP-II for the privacy concern|,Non-data,69
| They together take almost 50% of market share [29] We conduct experiments by using three Android phone models that support the IMS-based SMS: Samsung Galaxy S5 with Android 444, Sam- sung Galaxy S6 with Android 5|,Non-data,69
|02/601, LG G3 with Android 4|,Non-data,69
|42 We here focus on the Android OS, but we believe that the identified issues are applicable to any other OS We bear in mind that some feasibility tests and attack evaluations might be harmful to mobile users, carriers, and SMS-based ser- vice providers|,Non-data,69
| We thus conduct this study in a responsible manner through two measures First, we use only our own phones as the victims Second, we purchase unlimited SMS plans for all tested phones We seek to disclose new security vulnerabilities of the IMS-based SMS and SMS-powered services, as well as effective attacks, but not to aggravate the damage|,Non-data,69
| 4 NEW THREATS FROM IMS-BASED SMS In this section, we introduce new threats from the IMS-based SMS According to the security issues presented in Section 3, we discover four vulnerabilities ranging from the phone to the IMS server Two vulnerabilities are in the SIP session of SMS, whereas the other two are on the phone and the server, respectively|,Non-data,69
| They enable a malicious application without root access to fabricate legal SMS messages and deliver them successfully without the aware- ness of security applications, mobile OS or users It results in the attack of silent SMS abuse More threateningly, the origina- tor phone numbers of the forged SMS messages can be spoofed, thereby leading to the SMS spoofing attack The forged SMS mes- sages can be further manipulated to launch the DoS and spamming attacks against the SMS client and the IMS system, respectively|,Non-data,69
| 41 SIP Session Vulnerabilities The IMS-based SMS relies on a SIP session between the SMS client on the phone and the IMS server On the phone, a new in- terface is created for the IMS-based services (eg|,Non-data,69
|, VoLTE, SMS, etc) It is different from the network interface of mobile data ser- vices We here call this new interface as IMS-specific interface|,Non-data,69
 The SIP session is established over this IMS-specific interface by the SMS client It remains active as long as the IMS-based SMS is on We next present two vulnerabilities of this SIP session: (V1) leakage of SIP session information and (V2) injection of forged SIP messages (V1) Leakage of SIP Session Information 4,Non-data,69
|11 Once the SIP session information (eg, message format, session parameters, etc|,Non-data,69
|) is disclosed, the attacker may be able to fabri- cate legal SIP messages to carry forged SMS messages based on it Though the SIP session is protected by the security mechanisms stipulated in the standards, we discover that the session information can be leaked to the attacker for both OP-I and OP-II For OP-I, the session is secured only by the DIGEST security mechanism, which provides only access authentication during the SIP registration pro- cedure Without data confidentiality, the SIP messages are thus in plain text|,Non-data,69
| For OP-II, the session is protected by the IPSec-3GPP with data confidentially, but the encrypted SIP messages can still be decoded by the method presented in the work [51] Note that the packets containing SIP messages can be captured by monitor- ing the IMS-specific interface Though this packet capture requires root access, it can be done at the attacker phone beforehand After getting the understanding of the session information, the attacker can develop the malware without root access for the attacks that are introduced later|,Non-data,69
| Validation We use a mobile application called Shark to capture the SIP messages of SMS by monitoring the IMS-specific interface For OP-I, the SIP messages are plain-text, so the session informa- tion can be easily obtained For OP-II, we load the IPSec keys that are being used by the Android OS to the WireShark application to decrypt the SIP packets|,Non-data,69
| Note that the IPSec keys can be fetched using the command ip xfrm state We here show how to get the SIP session information by con- sidering a packet trace of OP-I as an example Figure 2 shows an example packet trace of the SIP registration procedure After registering to the IMS server, the SMS client receives a message with the status, SIP 401 Unauthorized|,Non-data,69
| In this message, the authentication method is specified to be DIGEST, and several pa- rameters are included for authentication (eg, challenge, algorithm, etc)|,Non-data,69
| The SMS client then finishes the registration by sending an- other new message of SIP REGISTER, which includes the an- swer to the authentication challenge Afterwards, no encryption of the received message with the status, SIP 200 OK, shows that the follow-up SIP messages will be plain-text Figures 3 and 4 respec- tively show the SIP message header and body for an SMS message As a result, the SIP message format can be easily learned|,Non-data,69
| Causes and lessons The 3GPP2 standard, which is supported by OP-I, leaves the freedom of security mechanisms to carriers, but such freedom may expose the IMS system to security threats Due to some operational concerns, carriers may prefer simple security methods, which are not secure enough For example, one server with the IPSec support is much more expensive than another with- out it, given that they support the same bandwidth|,Non-data,69
| Therefore, in order to secure the IMS system, the 3GPP2 standard should learn from 3GPP that the most secure mechanism, IPSec-3GPP, is set to be mandatory Though OP-II relies on the IPSec-3GPP mechanism by follow- ing the 3GPP standard, the SIP session information can still be leaked It is because the IPSec security module (eg|,Non-data,69
|, XFRM in An- droid) leveraged by the SMS client can be abused by malicious users with root access To be more secure, the SMS client may require another level of security protection on top of the IPSec (V2) Injection of Forged SIP Messages 41|,Non-data,69
|2 We discover that for both OP-I and OP-II, the forged SIP mes- sages can be injected into the SIP session between the SMS client and the IMS server The IMS server accepts all the packets with the correct session identifier (ie, the destination address pair of the 1121Status: 401 unauthorized No encryption is enabled!! Authentication by DIGEST Figure 2: An example packet trace of the SIP registration procedure at OP-I|,Non-data,69
| ZĞĐŝƉŝĞŶƚƉŚŽŶĞŶƵŵďĞƌ /D^ƐĞƌǀĞƌĂĚĚƌĞƐƐ ^ĞŶĚĞƌ/WĂĚĚƌĞƐƐ >Ϭϭ͗ D^^'ƚĞů͗yyyyyyϭςϭϯ͖ƉŚŽŶĞͲĐŽŶƚĞdžƚсdždždždž͘ĐŽŵ^/WͬϮ͘Ϭ >ϬϮ͗ DĂdžͲ&ŽƌǁĂƌĚƐ͗ϳϬ >Ϭϯ͗ ZŽƵƚĞ͗фƐŝƉ͗΀ϮϬϬϭ͗dždždždž͗dždždždž͗dždždždž͗ĨĂ͗ϭϬκ͗͗ϭĂ΁͗ρϬςϬ͖ůƌх >Ϭκ͗ sŝĂ͗^/WͬϮ͘ϬͬhW ΀ϮςϬϬ͗dždždždž͗͗dždždždž͗ϭκΘĐ͗ĚϳĂď͗ρĂϯϭ͗ĚϮďϯ΁͗ρϬςϬ͖ďƌĂŶĐŚсnjεŚ͙͘ĚͲςĞϯϬď >Ϭρ͗ ^ĞƋ͗ϭD^^' ^ĞŶĚĞƌƉŚŽŶĞŶƵŵďĞƌ >Ϭς͗ >Ϭϳ͗ >ϬΘ͗ >Ϭε͗ >ϭϬ͗ &ƌŽŵ͗фƐŝƉ͗нϭyyyyyyϮρϬϭΛdždždždž͘ĐŽŵх͖ƚĂŐсϬϬϬ͘͘ϳͲϬϮϮϬΘĨΘΘ dŽ͗фƚĞů͗yyyyyyϭςϭϯ͖ƉŚŽŶĞͲĐŽŶƚĞdžƚсdždždždž͘ĐŽŵх Ɖ ůůŽǁ͗/Es/d͕z͕E>͕<͕WZ<͕hWd͕/E&K͕Z&Z͕EKd/&z͕ D^^'͕KWd/KE^ >ϭ͗WͲWƌĞĨĞƌƌĞĚͲ/ĚĞŶƚŝƚLJ͗фƐŝƉ͗нϭyyyyyyϮρϬϭΛdždždždž͘ĐŽŵх WͲĐĐĞƐƐͲEĞƚǁŽƌŬͲ/ŶĨŽ͗ϯ'WWͲͲhdZEͲ&͖ƵƚƌĂŶͲĐĞůůͲŝĚͲ ϯŐƉƉсϯϭϭκΘϬϮεϬςρϯϳεĚϬĐ >ϭϭ͗ ZĞƋƵĞƐƚͲŝƐƉŽƐŝƚŝŽŶ͗ŶŽͲĨŽƌŬ >ϭϮ͗ >ϭϯ͗ hƐĞƌͲŐĞŶƚ͗>'Ͳ/D^ͲĐůŝĞŶƚͬϯ͘ϯ͘Ϭs^yyyκ' ŽŶƚĞŶƚͲdLJƉĞ͗ĂƉƉůŝĐĂƚŝŽŶͬǀŶĚ͘ϯŐƉƉϮ͘ƐŵƐ ^ĞŶĚĞƌ/WĂĚĚƌĞƐƐ >ϭκ͗ ĂůůͲ/͗ϬϬϬςϳϳκρͲ κκĂϬςĂĂĚΛϮςϬϬ͗dždždždž͗dždždždž͗Ĩρϭϳ͗ϭκΘĐ͗ĚϳĂď͗ρĂϯϭ͗ĚϮďϯ >ϭρ͗ ŽŶƚĞŶƚͲ>ĞŶŐƚŚ͗Ϯε ^ŝnjĞŽĨ^D^ďĞŝŶŐƐĞŶƚ Figure 3: The SIP message header of an SMS message UDP-based SIP sessions, or the 5-tuple address of the TCP-based session) no matter where they come For OP-I, the SIP session is built over UDP Once a forged UDP packet with the SIP session’s destination IP and port is sent via the IMS-specific interface, the IMS server can receive it and consider it to belong to the SIP ses- sion|,Non-data,69
| For OP-II, though the SIP session is protected by the IPSec over TCP, a forged TCP packet can still be sneaked into the SIP ses- sion by using the security module, XFRM Note that exploiting this vulnerability does not require root access at OP-I, but it is needed at OP-II Validation We first validate this vulnerability for OP-I|,Non-data,69
| We show that an application without root access can sneak a forged SIP message into the SIP session, and the recipient specified in the message can receive it Based on the understanding of the SIP packet format from V1, the application can fabricate a SIP message with the header shown in Figure 3 It then uses a UDP socket to send it to the destination address of the ongoing SIP ses- sion via the IMS-specific interface The successful delivery of the message is validated based on a response message with the status, Recipient's phone number Content of SMS Figure 4: The SIP message body of an SMS message|,Non-data,69
| 202 Accepted, from the IMS server Moreover, the recipient, XXX-YYYY-1613 2, as shown in Line 1, indeed receives it Note that though some information items are required to forge the header and send out the forged message, all of them can be ob- tained without root access The major ones are the IMS server’s IP address and the UDP socket’s destination port number|,Non-data,69
| The former can be fetched from the routing table and the latter is fixed for each carrier We next validate this vulnerability for OP-II, but root access is required There are three major steps to do the message injection First, we fetch the information of the IPSec security using the com- mand, ip xfrm state|,Non-data,69
| It includes the HMAC-SHA1/SHA2 keys for integrity protection and authenticity, and the SPI (Security Parameter Index) value of ESP (Encapsulating Security Payload) Second, we configure XFRM with the IPSec information and the SIP session identifier of TCP (ie, 5-tuple address)|,Non-data,69
| Third, we use RAW SOCKET to create an IP/TCP packet with the 5-tuple address to carry the forged SIP message, and then send it out through the IMS-specific interface Before being sent out, the packet is auto- matically encapsulated into an IPSec packet due to the XFRM con- figuration Afterwards, a response message with the same status 202 Accepted is received Causes and lessons|,Non-data,69
| Although the data-plane communication 2For the privacy concern, only the last four digits are shown 1122mation dialog at the sender phone, after the application sends out an SMS message to the number Causes and lessons The root cause is that the SMS permission control relies on the SMS API to monitor the SMS activities, but the way of using network sockets to send out SMS messages is neither monitored nor prevented|,Non-data,69
| Though SMS has been shifted to the IMS-based SMS, the security mechanisms at the phone are not updated with its deployment Moreover, the loopholes that the IMS-based SMS may open in the existing system are not carefully examined and addressed by mobile OS (V4) Spoofable SMS Messages at IMS Server 42|,Non-data,69
|2 To ensure that the sender identifier specified in an SMS message belongs to its genuine sender, it is not an issue for the CS-based SMS It is because the control information including the sender identifier is specified by the CS gateway in the core network How- ever, the control information of the IMS-based SMS is allowed to be specified at the phone, so the identifier may be spoofed by mali- cious users Once the IMS server does not check the sender identi- fier of each incoming SIP message, the spoofed SMS messages can be delivered to their recipients|,Non-data,69
| Validation We discover that this vulnerability works for OP-I but not for OP-II In order to pass the integrity check at the IMS server of OP-I, we identify that there are eight header fields which have to be filled correctly in a forged SIP message The values of the other fields do not affect the result of the integrity check|,Non-data,69
| As shown in Figure 3, those eight fields are Request-Line at Line 1, Route at Line 3, Via at Line 4, From at Line 6, To at Line 7, P-Preferred-Identify at Line 9, Call-ID at Line 14, and Content- Length at Line 15 They respectively require the recipient’s phone number, the IMS server’s address, the sender’s IP address, the sender’s phone number, the recipient’s phone number, the sender’s phone number, the sender’s IP address, and the message body size For the message body, there are only two fields required to be filled: the recipient’s phone number and the SMS message content, as shown in Figure 4 To build the message body, we can employ a set of classes (e|,Non-data,69
|g, CdmaSmsAddress and BearerData) in the library, ITelephony [12] We validate this vulnerability by sending a spoofed message, where the specified sender number is not the sender’s, to a recipient The message can be received by the recipient, and it still carries the spoofed sender number|,Non-data,69
| We want to note two things First, all the required information items in the message header can be obtained without root access For the IMS server’s address, the IP address can be fetched from the phone’s routing table, whereas the port number is always the same for each carrier Second, the sender’s IP address and phone number do not need to match|,Non-data,69
| That is, a mali- cious user can spoof other phone numbers by keeping using her IP address Causes and lessons The root cause is that there is no secure binding between the PS network identifier (ie|,Non-data,69
|, IP address) used to set up the SIP session, and the sender identifier (ie, phone number) specified in the SIP message The IMS-based SMS offers more flexibility than the legacy from the protocol design, but does not prevent the abuse of the flexibility|,Non-data,69
| OP-I should learn from OP-II that the secure binding is applied to SMS messages 43 Proof-of-concept Attacks We devise four proof-of-concept attacks: (1) silent SMS abuse; (2) SMS spoofing; (3) SMS Client DoS; (4) SMS spamming toward IMS All the attacks can be launched in the OP-I network, whereas in the OP-II, only the forth one is feasible|,Non-data,69
| For OP-I, the two at- Figure 5: A pop-up confirmation dialog that is used when a non-SMS application sends out a SMS message that may cause charges offers more flexibility to the IMS-based SMS, the IMS server does not restrict the traffic carried by the SIP session to the SMS client only For OP-I, no end-to-end security mechanism is used so that the injection of forged messages can be easily done without root access For OP-II, even if the IPSec mechanism is employed, the message injection can still happen with root access|,Non-data,69
| It may come from the IMS system’s fundamental limitation that the IMS server is only able to authenticate the device but not software (ie, the SMS client), since the private keys used for the IMS service are installed in the device hardware (ie|,Non-data,69
|, SIM card) Once malicious users can leverage the keys no matter which way is used (eg, ex- ploiting the security module XFRM), the IPSec security mechanism can be abused|,Non-data,69
 42 Phone and IMS Server Vulnerabilities We identify other two vulnerabilities at the phone and the IMS server respectively: insufficient SMS access defense and spoofable SMS messages (V3) Insufficient SMS Access Defense at Phone 42,Non-data,69
|1 Based on the current SMS access defense on the phone, when a non-SMS application without root access wants to send SMS mes- sages, it has to be granted the SMS permission during its installa- tion (eg, SEND_SMS in Android) However, when SMS moves from the CS-based technology to the IMS-based design over PS network, mobile OS may not provide sufficient defense of the SMS access|,Non-data,69
| We discover that for OP-I, an application without the SMS permission is allowed to send SMS messages by using network sockets This application does not require root access but only the network permission Such vulnerability empowers the malware to abuse SMS without awareness of security applications, mobile OS, or users Note that this vulnerability is not feasible for OP-II, since sending out SMS messages from a non-SMS application requires to crack the IPSec security (as presented in the V2 validation) but the cracking needs root access|,Non-data,69
| Validation We validate this vulnerability for OP-I by letting an application send an SMS message to a service number which causes charges on the sender’s account When the application with the SMS permission relies on the SMS APIs to do it, the Android OS will pop up a dialog to request user’s confirmation before send- ing it out, as shown in Figure 5 Based on V2, we develop an ap- plication without root access or the SMS permission, and it is able to send out forged SMS messages by injecting the SIP messages to the SIP session|,Non-data,69
| It is observed that there is not any pop-up confir- 1123tacks, silent SMS abuse and SMS client DoS, require the malware at the victim phone However, the other two can be launched from the attacker phone or any non-victim phone that is used to be a springboard and has the malware installed Note that the malware in these attacks does not require root access For OP-II, the SMS spamming attack requires root access at the attacker phone to crack the SIP session’s IPSec|,Non-data,69
| Silent SMS abuse Clearly, the discovered loopholes can be ex- ploited to abuse SMS on a mobile phone silently This silent SMS abuse can result in the victim’s monetary loss It works as follows|,Non-data,69
| The malware without root access requires to be deployed at the vic- tim phone, and sends out its forged SMS messages to the recipients who cause charges (eg, premium-rate text service [50]) With V1, the attacker can develop the malware which knows how to fabri- cate SIP/SMS messages|,Non-data,69
| According to V2 and V3, the malware is able to send out the forged SIP/SMS messages via the IMS-specific interface without getting the victim’s attention (eg, no pop-up con- firmation dialog) SMS spoofing|,Non-data,69
| The attacker can send SMS messages on behalf of another mobile user without his/her awareness or involvement Such SMS spoofing attack may lead to the victim’s monetary loss, and the hijacking of the victim’s account, to name a few, when it targets the SMS-powered services of the victim More details of the damage propagating towards the SMS-powered services are presented in Section 5 The attack works as follows|,Non-data,69
| According to V2, the attacker can successfully send out the forged SIP/SMS messages, where the originating number is set to the victim’s phone number, to the IMS server The spoofed SMS messages can be then delivered to the recipient due to V4 From the recipient’s point of view, those SMS messages are sent by the victim Moreover, this SMS spoofing attack can be launched from other phones to prevent the attacker from being traced back|,Non-data,69
| This attack can be done by the malware without root access at those spring- board phones Though there exists a risk that the malware can be detected, thereby impeding the attack or possibly tracing back to the attacker, the risk is very low It is because the current defenses (eg|,Non-data,69
|, the security mechanisms from two research studies [3, 19], the confirmation dialog of the Android OS, and other mechanisms from antivirus applications) against the SMS malware all focus on whether the applications with the SMS permission would abuse SMS or not However, the malware does not require the SMS per- mission SMS client DoS The malware on the victim phone can send a large amount of SIP/SMS messages to the local phone’s SMS client, thereby exhausting the client’s resources to result in its DoS|,Non-data,69
| In order to send a SIP message to the local SMS client, the malware requires to configure its destination address with the IP address of the local IMS-specific interface and the port number used for SMS (ie, 5060 in OP-I) Its source address can be assigned any arbitrary IP address and port number|,Non-data,69
| Note that the IMS-specific interface’s IP address can be obtained from the system’s network information without root access Due to different implementations of the SMS clients from phone companies, different results are observed We here examine two different SMS clients from Samsung and LG, and test two phone models, Samsung S5 and LG G3, respectively On the phone S5, the DoS attack prevents the SMS client from receiving any SIP/SMS messages|,Non-data,69
| It is because the SMS client, the process of which is named as comsecimsandroid, cannot handle any incoming SIP messages once the client’s CPU usage is equal to or higher than 25% on the tested phone|,Non-data,69
| We observe that when the malware sends SIP messages to the SMS client with the speed at least 3,825 messages (1 KB each) per second, the client would suffer from DoS with the CPU usage at least 25% The effect can last if the attack does not stop Note that the threshold of the SMS client’s CPU usage may vary with different clients, systems, or/and other ongoing services More severely for the phone G3, the DoS attack crashes the SMS client on the victim phone|,Non-data,69
| With the crash, the mobile OS would also stop responding or slowly respond to user input for a period of time Though the SMS client can be automatically recovered within 150 seconds after being crashed, the attack can be repeat- edly launched to crash it whenever its recovery completes The root cause is that the SMS client, the process of which is named as comlge|,Non-data,69
|ims, has the vulnerability of memory leak We dis- cover that the process would buffer part of the incoming SIP/SMS messages that have new recipient phone numbers into its memory When a SIP message, which has the large size of 75 KB and a new recipient number, is sent to the SMS client, the client’s memory usage would increase by 4|,Non-data,69
|5 KB We thus develop the malware to launch the attack by continually sending the SIP messages that have the large size and different recipient numbers, to the SMS client on the victim phone It is observed that the attack takes around 200-250 seconds to crash the client’s process with more than 140K forged SIP messages, and its memory usage reaches 128 MB right before the crash SMS spamming towards IMS|,Non-data,69
| The attacker can also launch SMS spamming attack towards the IMS system to downgrade its performance This attack, which relies on V2, requires root access to crack IPSec at the attacker phone for OP-II, but it is not needed for OP-I The victims are the IMS systems of the carrier networks The attack aims to cause the heavy computation load (e|,Non-data,69
|g, decrypt- ing plenty of IPSec packets, handling lots of SIP messages with large sizes, etc) in the IMS system by sending a large amount of SIP/SMS messages to the IMS server However, due to the legal concerns, we did not conduct this attack against the IMS systems of OP-I and OP-II|,Non-data,69
| 5 THREAT PROPAGATION TOWARDS SMS-POWERED SERVICES In this section, we examine how the threats caused by the IMS- based SMS menace SMS-powered services We study 40 SMS- powered services, which are summarized in Table 2, in the US With the threat of the SMS spoofing, an attacker can send SMS messages to use the SMS-powered services on behalf of a vic- tim without his/her awareness|,Non-data,69
| Together with the vulnerabilities of these SMS-powered services, the SMS threat can be manipulated to launch attacks against them It can lead to three major types of at- tacks: account hijacking, unauthorized donation, and unauthorized subscription We below consider one representative service of each attack type as an example to illustrate service vulnerabilities, at- tack methods, and negative impacts The SMS-powered services corresponding to those three attack types are offered by Facebook (a social network company), American Red Cross (a charity orga- nization), The Home Depot (a home improvement retailer), respec- tively|,Non-data,69
| Note that these attacks are feasible only for OP-I, but not OP-II 51 Facebook: Account Hijacking A Facebook user is allowed to use SMS to manage his/her ac- count (eg|,Non-data,69
|, posting status, adding a friend, poking someone, liking a page, etc) with the service of Facebook Text [16] For example, for the action of liking the Facebook page, Lakers Nation, a user can send an SMS message with the text, Like LakersNation, to the number 32665 To use this Facebook Text service, the user 1124ƵƚŚĞŶƚŝĐĂƚĞĚ hƐĞƌͲ&ƐĞƐƐŝŽŶ ϮͲǁĂLJĂƵƚŚĞŶ͘ ĂƌƌŝĞƌ KǀĞƌ^D^ ϭ͘>ŽŐŝŶĂŶĚƌĞƋƵĞƐƚƚŽĂĚĚĂƉŚŽŶĞ;ƌĞŐŝƐƚĞƌĂƉŚŽŶĞηͿ Ϯ͘dĞdžƚ͞&͟ƚŽϯϮςρρ;&KK<Ϳ /ƐƐƵĞĂ ϯ͘^ĞŶĚŽŶĞͲƚŝŵĞĐŽŶĨŝƌŵĂƚŝŽŶĐŽĚĞ ƌĂŶĚŽŵ ĐŽĚĞ κ͘ŶƚĞƌƚŚĞƌĞĐĞŝǀĞĚĐŽĚĞŽŶƚŚĞƌĞŐŝƐƚƌĂƚŝŽŶƉĂŐĞ Figure 6: Authentication procedure of the phone number reg- istration on Facebook|,Non-data,69
| is required to securely bind his/her phone number to the account beforehand, as shown in Figure 6 During the phone number reg- istration, Facebook relies on a one-time confirmation code to au- thenticate the number However, the Facebook Text service can be abused to launch the account hijacking attack due to its vulnerabil- ities and the SMS spoofing threat Vulnerabilities|,Non-data,69
 We identify two security vulnerabilities of the Facebook Text service: no runtime authentication and inappropri- ate binding of phone number registration and Facebook Text ser- vice The first vulnerability is that a user can keep using the regis- tered phone number to manipulate his/her account via SMS without any runtime authentication The initial authentication of the phone number is the only security mechanism used for the Facebook Text service It is validated in our 28-day experiment,Non-data,69
| As a result, once obtaining the victim’s phone number, the attacker is able to ma- nipulate the victim’s Facebook account by sending out the spoofed SMS messages The second one is that once a user registers his/her phone num- ber, his/her Facebook Text service is automatically enabled How- ever, the user’s phone number registration may be used for only se- curity purpose (eg|,Non-data,69
|, password recovery) This inappropriate bind- ing may expose the user to the SMS threats, but s(he) does not know it Moreover, the number of this kind of users is not small, because Facebook encourages users to register their numbers by continuously showing a reminder dialog, as shown in Figure 7 Attack and negative impacts|,Non-data,69
| By leveraging the SMS spoof- ing threat, the attacker can hijack the victim’s Facebook account via SMS without the victim’s awareness Since there is no runtime authentication, the victim would not get involved in the attack or receive any confirmation messages We develop an Android ap- plication, which is named as HackFacebook, to launch this attack It does not require root access, but only the network permission|,Non-data,69
| It can be also converted to be the malware that is used to launch attacks from the non-attacker phones We validate the attack feasibility by using HackFacebook to at- tack the victim phone which has the number, XXX-YYYY-4347, and the associated Facebook account, ResearchOne We employ HackFacebook on one non-victim phone to update status, add a new friend, and like a page for the victim account, as shown in Figures 8(a), 8(b), and 8(c), respectively The snapshot of the victim account’s activity logs, as shown in Figure 8(d), confirms that those three attack actions are successful|,Non-data,69
| This attack can be further employed to disclose the victim’s private information (eg, friends, family members, photo, etc), because the attacker can add one fake account to be one of the victim’s friends without the vic- tim’s consent|,Non-data,69
| The attacker can thus obtain all the information that the victim shares with his/her friends on Facebook 52 American Red Cross: Unauthorized Do- nation American Red Cross (ARC), a non-profit humanitarian organiza- tion, allows a mobile user to make a donation from his/her monthly bill via SMS This service is called Mobile Giving|,Non-data,69
| For example, to make a $10 donation, a mobile user can send an SMS message with the text, REDCROSS, to the number, 90999 Afterwards, s(he) receives an SMS message with a confirmation request, and then needs to reply it by sending another message with the text, YES3 The donation will be charged in the user’s monthly bill Though the Mobile Giving service offers mobile users a very convenient way to make donations, its vulnerabilities can be abused to launch the attack of unauthorized donation|,Non-data,69
| Vulnerabilities We discover two security vulnerabilities of the Mobile Giving service: weak authorization and automatic enroll- ment The service’s authorization mechanism, which relies on only a static response text (ie|,Non-data,69
|, YES), is too weak to defend against ma- licious attacks The service can be easily abused, if the attacker is able to manipulate the victim’s SMS The second vulnerability is that most US carriers including AT&T, Verizon and T-Mobile, au- tomatically enroll their mobile users to the Mobile Giving service Some users may not be aware of it, since there is no explicit no- tification of this automatic enrollment|,Non-data,69
 It is dangerous especially when this service is related to the users’ monetary expense It also provides an opportunity for the attacker to cause the victim’s mon- etary loss by abusing SMS Attack and negative impacts The attacker can make an unau- thorized donation from the victim’s mobile bill by launching the SMS spoofing attack against the Mobile Giving service,Non-data,69
| Due to the service’s weak authorization, the attack can be done without the victim’s involvement To launch this attack, we develop an ap- plication, DonateARC, based on HackFacebook Different from HackFacebook, it requires to send two consecutive SMS messages to the number, 90999 The text in the first message is REDCROSS, whereas that in the second one is YES|,Non-data,69
| Since the second message cannot be sent out until the first one is successfully delivered, a time interval is set between these two messages’ deliveries We set the interval value to be 5 seconds, because our experiments show that for OP-I, 95% SMS messages can be successfully delivered to their recipients within 5 seconds To validate the attack feasibility, we employ DonateARC to make an unauthorized $10 donation to ARC from the victim’s mobile bill After performing this attack, the victim’s mobile bill, where $10 has been donated to ARC, confirms the validation|,Non-data,69
| We want to note two things First, the victim is one of our lab members Second, the victim can be notified of the unauthorized donation by the SMS message of the confirmation request, but s(he) has no way of stopping the ongoing attack 5|,Non-data,69
|3 The Home Depot: Unauthorized Subscription The Home Depot, an American retailer of home improvement needs, provides SMS advertising that sends advertisement (eg, ex- clusive offers, discounts, etc) to customers via SMS|,Non-data,69
| To receive the advertisement, a customer needs to subscribe to SMS advertis- ing on the website of The Home Depot with his/her phone number and email address After doing subscription, the customer would 3The text in reply to the confirmation may vary with different carriers 1125Figure 7: The reminder dialog used by Facebook to encourage users to register their phone numbers for security (a) Update status (b) Add a friend (c) Like a page (d) Victim’s activity logs Figure 8: HackFacebook launches three attack actions against the victim, ResearchOne: update status, add a friend, and like a page|,Non-data,69
| receive an SMS message with a confirmation request s(he) is then required to send another SMS message with the text, Y, in reply to it Similar to the attack of unauthorized donation, the subscription can be abused to be without authorization Vulnerability|,Non-data,69
| The vulnerability of the SMS advertising is the weak authorization procedure of the subscription Similar to the Mobile Giving service, the subscription confirmation relies on a static response text (ie, Y)|,Non-data,69
| As a result, by leveraging the SMS spoofing, the attacker can let the victim subscribe to the SMS ad- vertising without the victim’s consent Attack and negative impacts The attacker can make an unau- thorized subscription to the victim so that the victim would keep re- ceiving unwanted SMS advertisements and may feel annoyed The way to launch this attack is similar to that of the unauthorized do- nation attack|,Non-data,69
| Both of them have two steps, requesting donation or subscription for the victim and sending an SMS message to do confirmation The major difference is that the first step of this at- tack needs to be done at the website but not via the delivery of an SMS message We validate this attack by subscribing a victim to the SMS advertising of The Home Depot using the SMS spoofing Our experiments show that it causes the victim to receive up to 10 SMS messages per month|,Non-data,69
| When this attack is applied to a large number of mobile users, many complaints could be made from the victims The goodwill of The Home Depot may be thus impaired We will examine the feasibility of launching large-scale attacks in the next section 5|,Non-data,69
|4 Feasibility Study of Large-scale Attacks We further study the feasibility of launching large-scale attacks for OP-I In order to impede traceback, it is better for the attacker to launch our discovered attacks from the malware at other phones So, we examine whether there is any limitation of sending a large number of forged SMS messages from the malware in that case In our experiments, we use the HackFacebook application at one phone to send as many forged SMS messages as possible to another phone within a time period|,Non-data,69
 We also test the default messaging application for the comparison by using it to send SMS messages as fast as possible The test time is 30 minutes Note that we purchase an unlimited SMS plan for each tested phone to avoid legal issues The result shows that in terms of the speed of the SMS message  3500 3000 2500 2000 1500 1000 500 0 t n e s  s e g a s s e M HackFacbook-before-April-2015 HackFacbook-after-April-2015 Android Default Message App 2459 1002 30 Figure 9: The number of the SMS messages that are success- fully delivered within 30 minutes,Non-data,69
| delivery, HackFacebook can be 33x faster than the default mes- saging application, as shown in Figure 9 It is observed that the default messaging application is unable to send more than 30 SMS messages within 30 minutes However, the HackFacebook applica- tion can successfully deliver 2459 and 1002 SMS messages before April 2015 and after April 2015, respectively The malware can thus launch large-scale attacks with the speed at least 33 SMS mes- sages per minute|,Non-data,69
| We have two other observations First, there is a cap of 30 SMS messages per 30-minute by using the Android SMS API to send SMS messages But, HackFacebook, which does not rely on the API, can bypass the cap Second, it seems that OP-I de- ploys a network-based SMS control which limits the speed of the SMS message delivery after April 2015|,Non-data,69
| Note that it would be interesting to exhaust the IMS server’s re- sources by launching large-scale attacks against SMS-powered ser- vices, and then cause SMS DoS For example, the attacker uses a large number of the malware applications to keep subscribing to different SMS-powered services, thereby overloading the IMS server However, we did not do it due to legal issues 5|,Non-data,69
|5 Lessons Learned Most SMS-powered service providers rely on mobile networks to authenticate mobile users They may assume that the users’ phone numbers cannot be spoofed, so only weak security mech- anisms or none are used for the SMS-powered services When the mobile networks suffer from the SMS spoofing attacks, most 1126SMS-powered services are exposed to security threats Moreover, there are various mobile networks around the world, so it is diffi- cult for the service providers to ensure their security based on them|,Non-data,69
| Therefore, the SMS-powered services should have their own au- thentication mechanisms Moreover, not only the users of the SMS- powered services but also other mobile users may be attacked, be- cause some service providers or carriers may automatically enroll their users to their SMS-powered services without the users’ aware- ness It is unfair for those users who do not subscribe to the SMS- powered services to bear the security risks 6|,Non-data,69
| RECOMMENDED SOLUTIONS We propose recommended fixes to the IMS-based SMS threats We seek to address the vulnerabilities at all the involved parties including the mobile phone, the mobile network, and the SMS- powered service provider The proposed fixes consider not only feasibility, but also standard compatibility, deployment cost and the feedback from industry (eg|,Non-data,69
|, carriers and SMS-powered service providers) Mobile phone We recommend two remedies to two main vul- nerabilities, which are insufficient SMS access defense (V3) and the IPSec crack (V1 and V2), on the phone First, mobile OS should prevent all the ways other than using the SMS API from being leveraged to access SMS|,Non-data,69
| That is, applications should be for- bidden from using network sockets to send/receive SMS messages To achieve it, the mobile OS should restrict the IMS-specific in- terface to the IMS-related applications only (eg, the SMS client)|,Non-data,69
| The advantage of our approach is that both the current SMS permis- sion control of mobile OS and the existing permission-based mal- ware detection methods [27, 38] can still be effective without any modifications Certainly, this vulnerability can be resolved when the SIP session is protected by IPSec, like that of OP-II However, enabling the IPSec protection requires upgrades of both the SMS client and the IMS system, thereby possibly resulting in too much overhead or deployment cost The SIP session could still suffer when the IPSec can be abused on a rooted phone|,Non-data,69
| Second, the SMS client should have another level of security by itself in addition to IPSec, because the XFRM module on which the client relies can be exploited to abuse IPSec by the applications with root access The additional security level can be done by hid- ing the destination address of the SMS service (eg, dynamic as- signment of service ports, avoiding the leakage of the IMS server’s IP address in the routing table, etc|,Non-data,69
|), or adding a security method (eg, security challenges, DIGEST, etc)|,Non-data,69
| In the former mechanism, hiding the destination address can increase the difficulty of know- ing where the forged SMS messages should be sent The latter se- curity method can prevent the attacker from forging legal SIP/SMS messages Note that both mechanisms require only the upgrade of the SMS client without modifying the mobile OS, and the former has been adopted by OP-I Mobile network|,Non-data,69
| On the network side, we suggest a remedy to prevent the SMS spoofing The network should provide a secure binding between the client’s IP address used to set up the SIP ses- sion and the originator identifier (ie, phone number) specified in the SIP/SMS message|,Non-data,69
| When a SIP session is initialized and au- thenticated successfully, the IMS server should bind the originator phone number specified in the initial messages to the client’s IP ad- dress Then, there are two ways to carry out the secure binding for the following messages within the session First, the IMS server can verify the originator phone number in each SIP message, and drop it when the number is spoofed Second, learned from the CS- based SMS, the originator information of the SIP message needs to be specified by the network (i|,Non-data,69
|e, IMS server) instead of the phone Therefore, the IMS server would skip the originator information specified in each incoming SIP message and fill in the related fields with the early binding of the SIP session Note that one possible remedy is to add a secret (e|,Non-data,69
|g, DIGEST) to the SIP message so that the originator identifier can be verified in each message It can prevent the attacker from fabricating legal SIP messages However, this security mechanism requires extra efforts to verify the secret carried in each SMS|,Non-data,69
| Besides, this approach, which is located at the core function of SMS, is not stipulated by the standards To be compatible with the standards and avoid the possible interoperability issues, carriers do have concerns to carry out it SMS-powered service provider We propose two remedies to strengthen the security of the SMS-powered service|,Non-data,69
| First, one user’s subscription to the SMS-powered service should be con- firmed by the user To some extent, it can prevent the attacker from successfully launching the SMS spoofing attack against the SMS-powered service The attacks against the users without the service subscription would fail, and the users do not need to bear the security risks of the services to which they do not subscribe Second, the SMS-powered service provider should authenticate the mobile user by itself for each service request|,Non-data,69
| The reason a service relies on SMS is that SMS is a convenient tool to be used, so the authentication mechanism has to be simple and does not require any additional application to be installed We suggest that one-way request without confirmation (eg, the Facebook service) should be issued with a secret code, and the confirmation request/reply (e|,Non-data,69
|g, the services of ARC and The Home Depot) should contain a dy- namic short code For example, to like a page (say, LakersNation) on Facebook via SMS, the text of the SMS request message should be Like LakersNation, 3847, where 3847 is the sender’s secret code To do the confirmation of a donation, the user should reply the confirmation request which includes a short code instead of the message with a static text|,Non-data,69
| As a result, even if the SMS spoofing attack is feasible, the SMS-powered services are protected against it with the secret code or the short code This approach has been adopted by Facebook as MobilePIN Note that though there have been several proposals for an SMS security framework [39, 39] and end-to-end SMS encryption [26, 33] to secure SMS communication However, the lessons we learned from industry is that they either are too complex to be deployed or require another application (e|,Non-data,69
|g, Pushbullet or SilenceIM) to be in- stalled Relying on them to provide security may destroy the con- venience of SMS, thereby discouraging people from using SMS That might be the reason why Facebook chose to implement its MobilePIN (i|,Non-data,69
|e, appending a secret code to the SMS request), in- stead of those aforementioned approaches 7 DISCUSSION We next clarify several remaining issues|,Non-data,69
| How about other carriers’ IMS-based SMS? We further exam- ine whether the discovered vulnerabilities exist at other two major US carriers, which are denoted by OP-III and OP-IV for the privacy concern They together take more than 45% of market share [29] Our experimental results show that similar to OP-II, OP-III uses IPSec to secure the SIP session At OP-III, Vulnerabilities V1, V2 and V3 exist, but V4 does not|,Non-data,69
| We further discover that the IMS server always replaces the originator phone number with the sender’s number, no matter what number is assigned to it on the phone As for OP-IV, we do not observe that the IMS-based SMS is supported on our test phones 1127Could TrustZone be a solution? TrustZone [5], a hardware-based security technology of ARM processors, could be a candidate so- lution for the IMS-based SMS issues It partitions hardware into two worlds, trusted and non-trusted, thereby separating trusted soft- ware, data and hardware from the non-trusted world|,Non-data,69
| In the trusted world, a secure network communication [25], such as the device’s communication with the IMS server, can be built, or the SMS client can be placed As a result, neither is the attacker able to get the SIP session information of SMS, nor does the malware have a chance to sneak into the SIP session However, it has three concerns First, the feasibility of TrustZone is processor-dependent, so it does not work for all the devices|,Non-data,69
| Moreover, enabling it in the existing de- vices requires the firmware update, which not all users are will- ing to do Second, there exists an overhead of the switch between two worlds, so whether to employ TrustZone should depend on the overhead, which should be evaluated by considering the SMS client’s behaviors Third, an outbound authentication issue [42] can also exist Even if TrustZone can deal with security functions and/or secret keys, it is hard for TrustZone to authenticate all the re- quests coming from the non-trusted world|,Non-data,69
| We will consider these concerns in our future work Premium SMS spoofing attack The premium SMS [32] is to provide third-party providers’ services (eg, charitable donations, TV voting, financial/stock information, etc|,Non-data,69
|) to users via SMS, and carriers charge them at the prices higher than normal SMS There- fore, launching the attack of premium SMS spoofing can increase the victim’s bill, thereby resulting in his/her monetary loss The at- tack of unauthorized ARC donation presented in Section 52 is one of the premium SMS spoofing attacks|,Non-data,69
| However, this type of attack may not work for all the carriers, since several major US carriers have stopped charging for most premium text messages [6] Similar to MMS spoofing threat? People may think that the MMS (Multimedia Messaging Service) spoofing threat identified in early works is similar to the SMS spoofing introduced in this work However, they are totally different, since they root in differ- ent protocols and security mechanisms 8|,Non-data,69
| RELATED WORK In this section, we present related work in the security areas of LTE network, VoLTE (voice over LTE, an IMS-based voice ser- vice), and SMS Several previous works [13, 22, 28, 41] have ex- amined the security issues of LTE network Shaik et al [41] ex- ploited the vulnerabilities of LTE access network to expose the mo- bile user’s location|,Non-data,69
| Dabrowski et al showed that once the phone’s IMSI (International Mobile Subscriber Identity) is exposed to the rogue base station the phone can be tracked, and proposed solutions to secure the access network However, our work focuses on the se- curity vulnerabilities of the core network (ie|,Non-data,69
|, IMS system) and the mobile software (ie, mobile OS and IMS client), rather than those of the radio access network Two recent surveys [22, 28] focus on the security vulnerabilities that exist in the LTE network, but our discovered vulnerabilities and attacks are not presented in them|,Non-data,69
| There have been several works [23, 24] which study the VoLTE security issues They identified several vulnerabilities of the VoLTE device and infrastructure, and further showed that the adversary can gain free data service by delivering data packets through the signal- ing or voice channel of VoLTE, and launch the DoS attack against VoLTE There are three major differences from our work First, our work looks into IMS-based SMS service, but not IMS-based voice service (i|,Non-data,69
|e, VoLTE) Second, our work focuses on the vul- nerabilities of IMS signaling protocol, rather than those of IMS control/data channels, which are the focuses of those two VoLTE works Third, the discovered vulnerabilities in our work can be ex- ploited to launch large-scale attacks, which could cause monetary loss or privacy leakage to a large number of people, but not only individual attacks they focus|,Non-data,69
| To the best of our knowledge, this is the first work that studies the security vulnerabilities of IMS-based SMS service in the operational networks The security issues of SMS service are hot research topics in re- cent years There are several works [14, 31, 40] which focus on the (in)security of mobile two-factor authentication via SMS or other channels The authors in the work [35] study the security prac- tices of benign SMS services, and the malicious misuse of the SMS ecosystem|,Non-data,69
| Other research studies include defending against the threats of user privacy leakage from the SMS [34], faking SMS con- figurations [37], launching attacks against the mobile device from fake network infrastructure [45], launching DoS attack against the mobile network by sending a large number of SMS messages from the Internet [15,49], devising the malware to abuse SMS [4,19,27], embedding malware/virus into the SMS message [8, 9] and man- in-the-middle attacks via SMS [20, 26, 30, 33, 39], to name a few Different from them, our work focuses on the IMS-based SMS, but not the CS-based SMS or the Internet-based SMS 9 CONCLUSION In this work, we examine the security implications of IMS-based SMS|,Non-data,69
| Several new vulnerabilities are discovered from IMS system and mobile OS Though there exist security shields deemed effec- tive for the legacy SMS, they hardly protect the IMS-based SMS We show that the vulnerabilities can be exploited to launch attacks against mobile users and carrier networks The users may suffer from the attacks of SMS spoofing and DoS, whereas the carrier networks may be under the spamming attack|,Non-data,69
| Moreover, the SMS threat can propagate to SMS-powered ser- vices Most service providers rely on SMS to authenticate mobile users so that they may assume SMS messages cannot be abused The services may thus have no runtime authentication or weak au- thorization, thereby being easily abused by the SMS threat The users may suffer from account hijacking and unauthorized dona- tion, whereas the providers may bear the risks of goodwill impair- ment|,Non-data,69
| We show that no sophisticated attacks are needed, and simple attacks may work in practice The solution calls for the concerted efforts among all parties involved Any of parties which do not timely enforce the necessary security mechanisms will cause secu- rity threats and unexpected damages 10|,Non-data,69
| UPDATES We have reported the identified issues to OP-I, Facebook, LG and Samsung, and worked with OP-I and Facebook to address their issues According to the OP-I security patches at the phone, there are two remedies First, the IMS server’s IP address is hidden from the routing table, so the malware without root access is unable to know where the forge SIP messages should be sent Second, OP-I adopts the locked bootloader [18] to prevent the phone from be- ing rooted so that the IPSec of the SIP session cannot be abused|,Non-data,69
| Besides, OP-I plans to deploy the network-based solution, which is the secure binding of the originator’s phone number and IP address, in October 2016 As for Facebook, the user is allowed to specify a secret code for the Facebook Text service, but it is disabled by default Moreover, Facebook removes the features of add-a-friend and like-a-page from the service Note that the security team of LG and Samsung are currently investigating the security issues we reported|,Non-data,69
| 112811 ACKNOWLEDGMENTS We greatly appreciate our shepherd, Prof William Enck, and the anonymous reviewers for their valuable feedback This work is supported in part by the National Science Foundation under Grants No|,Non-data,69
| CNS-1421933, CNS-1422835, CNS-1528122 and CNS-1527613 Any opinions, findings, and conclusions or recommendations ex- pressed in this material are those of the authors only and do not necessarily reflect those of the National Science Foundation 12 |,Non-data,69
|Abstract Persistently saturated links are abnormal conditions that indicate bottlenecks in Internet traffic Network operators are interested in detecting such links for troubleshooting, to improve capacity planning and traffic estimation, and to detect denial-of-service attacks Currently bottleneck links can be detected either locally, through SNMP information, or remotely, through active probing or passive flow-based analysis However, local SNMP information may not be available due to administrative restrictions, and existing remote approaches are not used systematically because of their network or computation overhead|,Non-data,117
| This paper proposes a new approach to remotely detect the presence of bottleneck links using spectral and statistical analysis of traffic Our approach is passive, operates on aggregate traffic without flow separation, and supports remote detection of bottlenecks, addressing some of the major limitations of existing approaches Our technique assumes that traffic through the bottleneck is dominated by packets with a common size (typically the maximum transfer unit, for reasons discussed in Section 51)|,Non-data,117
| With this assumption, we observe that bottlenecks imprint periodicities on packet transmissions based on the packet size and link bandwidth Such periodicities manifest themselves as strong frequencies in the spectral representation of the aggregate traffic observed at a downstream monitoring point We propose a detection algorithm based on rigorous statistical methods to detect the presence of bottleneck links by examining strong frequencies in aggregate traffic We use data from live Internet traces to evaluate the performance of our algorithm under various network conditions|,Non-data,117
| Results show that with proper parameters our algorithm can provide excellent accuracy (up to 95%) even if the traffic through the bottleneck link accounts for less than 10% of the aggregate traffic Key words: Spectral Analysis, Bottleneck Detection, Traffic Analysis 1 Introduction A link is saturated when the offered load at the link ex- ceeds its capacity A saturated link is very likely to be the bottleneck link for traffic passing through it|,Non-data,117
| Links may become saturated for brief moments during normal oper- ation in the Internet However, with the exception of ex- pensive, highly utilized links (eg, satellite or deep space links), a sustained, saturated link typically implies an ab- normal condition in the network|,Non-data,117
| Examples of such links that are of interest to network operators include: (a) an under-provisioned link that may spend most of its time saturated as many users share its capacity; (b) an under- provisioned access link that may indicate a customer’s need Email addresses: xhe@ciscocom (Xinming He), christos@cscolostateedu (Christos Papadopoulos), johnh@isi|,Non-data,117
|edu (John Heidemann), ubli@uscedu (Urbashi Mitra), uriaz@uscedu (Usman Riaz) to purchase more bandwidth; (c) a denial-of-service (DoS) attack that saturates a link near the victim; (d) individual attackers in a distributed DoS attack that saturate their access links as they try to send packets as fast as possible; and (e) links that may become accidentally saturated due to faulty software or hardware|,Non-data,117
| These examples are of interest for several reasons First, information about saturated links is necessary to influence long-term decisions such as capacity planning and traffic matrix estimation, and in short-term response to exter- nal attacks or internal bugs More importantly, bottlenecks represent a performance problem for users of the network Network operators would like to systematically monitor bottlenecks and report on them to their users|,Non-data,117
| If traffic is limited by an access link, it shows that a user needs to pur- chase greater capacity If within the ISP, a bottleneck link represents a problem that may affect multiple users and must be diagnosed If outside the ISP, the bottleneck link demonstrates that the problem is external Preprint submitted to Computer Networks 26 September 2008 Currently, saturated links can be detected through direct observation, e|,Non-data,117
|g, network monitoring with SNMP While network monitoring tools are widely used, they are not a panacea, particularly because access to SNMP data is of- ten administratively limited and does not provide visibility into a customer’s behavior or an external network’s perfor- mance In addition, SNMP reports are typically averaged over long intervals (5 minutes or more) and so they miss short but recurring saturation events|,Non-data,117
| Finally, in some cases SNMP data may not be collected or processed because of economic or bandwidth costs Detecting bottlenecks can also be done remotely by ac- tive probing (Kim et al, 2004; Hu et al, 2004) or per-flow analysis and traffic correlation (Katabi and Blake, 2001)|,Non-data,117
| However, such techniques either require additional traffic to be inserted into the network exacerbating the congestion on the bottleneck link, or incur high computational cost as packets have to be separated according to flows and then correlated to detect sharing of bottlenecks Ideally a net- work operator would like to install a network monitoring system that can detect saturated links quickly by looking at the aggregate traffic level, and then resort to detailed per-flow analysis only if a problem is detected We propose an approach that can remotely detect the presence of bottleneck links in aggregate traffic without flow separation Note that we are interested in transient bot- tlenecks, which are hard to detect with standard methods such as SNMP monitoring Our key observation is that when links are saturated, they send packets out as fast as possi- ble, resulting in regular back-to-back packet transmissions|,Non-data,117
| We call this regular, back-to-back packet stream bottleneck traffic as it is rate-limited by the capacity of the saturated (bottleneck) link If we observe the bottleneck traffic in the frequency domain, the back-to-back packet transmissions exhibit strong periodicities regulated by the bottleneck link capacity and the packet size While there are potentially an infinite number of combinations of link speed and packet size, resulting in many potential bottleneck frequencies, in practice, both are constrained to a relatively few, common values Links typically come in discrete capacities (e|,Non-data,117
|g, 15Mbps, 10Mbps, 45Mbps, 100Mbps, 1Gbps, etc) corre- sponding to WAN technologies Packet sizes exhibit strong modes governed by protocol design, including 60B for TCP acknowledgments, 572B for the minimum supported Inter- net datagram, 1500B for maximum size Ethernet segment|,Non-data,117
| Moreover, transient bottlenecks often result from large file transfers; such transfers use the maximum available packet size Throughout this paper we assume that the bottle- necks are caused by large flows, dominated by packets with a common size (typically near the maximum transfer unit, for reasons discussed in Section 51) We observe that the strong periodicities in the packet transmissions along the bottleneck link can manifest themselves as strong frequen- cies in the spectral representation of the aggregate traffic observed at a downstream monitoring point, and we show that bottlenecks can be detected despite interference and noise created by irregular packet transmissions of other flows|,Non-data,117
| Thus, we can detect the presence of bottleneck links by detecting the existence of bottleneck traffic in the ag- gregate traffic in the spectral domain Our approach builds on top of prior work of spectral analysis of network traf- fic (Barford et al, 2002; Partridge et al, 2002; Cheng et al|,Non-data,117
|, 2002; Hussain et al, 2003) The main contribution of this paper is the development of a novel approach to detect bottleneck links through the periodic packet transmissions in network traffic Our ap- proach is completely passive and incurs no additional net- work overhead|,Non-data,117
 It can detect the presence of bottleneck links without flow separation even if the traffic through the bottleneck link accounts for less than 10% of the aggregate traffic at the monitoring point We also investigate the sen- sitivity of our approach under different network conditions such as different bottleneck bandwidths We have not in- vestigated deeply the performance of our algorithms when only partial bottleneck traffic is observed Such scenarios reduce the bottleneck signal and make detection harder,Non-data,117
| Further investigation is part of our future work The rest of the paper is organized as follows First, we describe potential applications of bottleneck link detection in Section 2 and give an overview of our detection system in Section 3 Then, in Section 4 we present our technique for calculating spectral representation of network traffic|,Non-data,117
| After applying this technique to visually demonstrate spec- tral characteristics of bottleneck links in Section 5, we pro- pose an automatic detection algorithm based on Maximum Likelihood Detection in Section 6 and evaluate its perfor- mance using real Internet traffic in Section 7 Finally we conclude the paper in Section 9 2 Applications of Bottleneck Detection We are not the first to explore the problem of detect- ing bottlenecks by passively monitoring traffic|,Non-data,117
| Others have used the regularities in the packet transmission along the bottleneck link to detect bottleneck sharing among multiple flows (Katabi and Blake, 2001) However, network opera- tors today rarely explore traffic at this level for at least two reasons First, current approaches to bottleneck traffic de- tection are computationally expensive, requiring splitting traffic into flows and then combining different flows into groups sharing the same bottleneck, an expense we avoid in this paper Second, perhaps because of this expense, there has been limited exploration of how useful early detection of bottleneck traffic might be in network operations|,Non-data,117
 We explore several possibilities below 21 Capacity Planning and Traffic Engineering In capacity planning and traffic engineering it is impor- tant to understand which parts of the network are bottle- neck limited,Non-data,117
| Bottleneck information is useful in capacity planning to inform decisions about link upgrades; in traffic 2 engineering it can help operators make informed decisions to fine-tune routing and label switching Current approaches to these problems typically use net- work monitoring (with SNMP (Case et al, 1990)) and traf- fic matrix estimation (Zhang et al, 2003)|,Non-data,117
| SNMP runs on individual interfaces in an ISP’s network While essential, these approaches are limited to ISP links only (customer links are typically inaccessible) and information is often aggregated at coarse timescales (5 minutes or more) Our proposed approach is able to detect the presence of a bot- tleneck from afar (eg|,Non-data,117
|, an upstream ISP) without the use of SNMP It does so by monitoring incoming or outgoing traffic at an ISP ingress or egress If a bottleneck is detected at the incoming traffic, the bottlenecked is clearly exter- nal to the ISP If the bottleneck is detected at the outgo- ing traffic, the bottleneck’s is internal to the ISP network, and perhaps it was not detected by SNMP because it hap- pened on a non-SNMP capable interface, or traffic from a customer|,Non-data,117
| Moreover, our approach is able to detect bottle- neck traffic in a manner of seconds rather than minutes While planning and even traffic engineering decisions may be done infrequently, trend analysis of the frequency of bot- tlenecks is important information for the network operator Our system does not reveal the exact location of the bot- tleneck link, but only the presence of one However, it can be used as early-warning to trigger further actions such as costly active probing techniques to locate the bottleneck|,Non-data,117
| 22 Preemptively Diagnosing Performance Problems for Customers For customers it is challenging to diagnose network per- formance problems Performance limitations may exist at the application, the access link, the receiver or “somewhere in the network”|,Non-data,117
| Our technique can be the basis for a poten- tial new service for ISPs, where they continuously monitor customer traffic and preemptively determine if the bottle- neck is inside or outside the ISP This can be done by mon- itoring traffic at the ISP egress point, and using our tech- niques to determine whether incoming or outgoing traffic is bottlenecked on not In addition to the value-added service to the customer, such diagnosis provides several attractive opportunities for the ISP A frequently bottlenecked client access link might help persuade the client to upgrade|,Non-data,117
| Prob- lems inside the ISP’s network can be detected and resolved quickly, before users notice Problems tracked outside the ISP it can avoid open tickets and tarnish to the ISP’s rep- utation 23|,Non-data,117
| Detecting DDoS attacks and other network anomalies Although “smart” denial-of-service (DoS) attacks have been described in (Kuzmanovi ́c and Knightly, 2003), many such attacks harm their victims by simply saturating links Our system is perfectly suited for detecting flooding at- tacks such as distributed DoS attacks (DDoS), where many Fig 1 A Typical System Deployment machines (called zombies) generate small streams that re- sult into a damaging aggregate at the target|,Non-data,117
| Individual zombie attack traffic could be also be detected because it typically saturates the zombie’s access link (Hussain et al, 2003) While our focus here is not on zombie detection, our techniques are directly applicable to this problem, comple- menting signature-based schemes and obviating the need for signature discovery and distribution We do not evaluate the effectiveness of such techniques here and it is possible that they would generate many false positives, if focused on an individual stream|,Non-data,117
| However, an ISP could look for the appearance of multiple bottlenecks at the same time, with the same destination Such correlation would most likely drastically reduce false positives 3 System Overview Figure 1 depicts a typical deployment of our system for detecting the presence of bottleneck flows, rate-limited by the capacity of one or more bottleneck links|,Non-data,117
| Note that we expect the network administrator to deploy our system at the access link of the network to maximize traffic visibility Figure 2 illustrates the processing steps in our system First, we capture packet streams from the network and record the arrival times of each packet Then, we map the packet arrival-time sequence to a uniformly sampled time series|,Non-data,117
| Each number in the series is the number of packets that arrive during a fixed interval A Fourier Transforma- tion converts the time domain representation into the fre- quency domain, where the Power Spectral Density (PSD) shows the strength (or energy) at each individual frequency Finally, we employ an algorithm based on Maximum Like- lihood Detection (Trees, 1968) to examine the PSD of the aggregate traffic and detect bottleneck flows using the prob- ability density functions (PDFs) estimated from training data (a step that must be performed infrequently, when traffic changes drastically – we will describe this shortly) Next, we briefly describe capturing network traffic|,Non-data,117
| The remaining steps are covered in Sections 4 and 6 3 et al, 2003) with minor modifications, to obtain the spec- tral representation of network traffic Our approach has three main steps|,Non-data,117
| First, we capture packet traces from the network (see top box, Figure 1) us- ing tcpdump or other tools The only information we need from the trace is the packet arrival time We divide the cap- tured trace into segments of l-second long before further processing The length of each segment l is a configurable parameter; we discuss its selection in the next subsection|,Non-data,117
| Second, we sample each segment with a sampling rate p (see second box, Figure 1; we discuss in Section 41 how to select a proper p) to obtain a time series X, where X(i) is the number of packets that arrive in the time period [ i p , i+1 p ) Time is relative to the start of a segment, and i varies from 0 to l× p− 1 This results in N = l× p number of samples for each segment|,Non-data,117
| We then subtract the mean arrival rate before proceeding with spectral transformation in the next step, since the mean value results in a DC com- ponent in the spectrum that does not provide useful infor- mation for our purposes Third, the Power Spectral Density (PSD) is computed as the discrete Fourier transform of the auto-covariance func- tion (ACF) of the time series data (see third box, Figure 1) Auto-covariance is a measure of how similar the stream is to itself shifted in time by offset k (Box et al, 1994; Bracewell, 1986)|,Non-data,117
| When k = 0 we compare the packet stream to itself, the auto-covariance is maximum and equals to the variance of the packet stream When k > 0 we compare the packet stream with a version of itself shifted by lag k The auto- covariance sequence c(k) at lag k is N −k−1 c(k) = X t=0 (X(t) − ̄X)(X(t + k) − ̄X); (1) where ̄X is the mean of X(t), N is the number of samples, and k varies from −N to N  The PSD is obtained by applying discrete-time Fourier transform to the auto-covariance sequence of length M |,Non-data,117
| While the PSD contains both phase information and am- plitude information, we are mostly interested in the ampli- tude information calculated as follows S(f ) = M −1 X k=0 (cid:12)(cid:12)(cid:12)(cid:12)(cid:12) c(k)e−ı2πf k(cid:12)(cid:12)(cid:12)(cid:12)(cid:12) (2) The spectrum amplitude S(f ) captures the power, or strength, of the individual observable frequencies embed- ded in the time series The overall computational complex- ity of calculating PSD for a segment is O(N + N 2 + N ∗ log(N )) = O(N 2) 4|,Non-data,117
|1 Parameter Selection There are two important parameters to be selected for PSD calculation The first one is the trace segment length l If the segment length l is too short, we may not have enough samples to reveal interesting patterns inside the Fig|,Non-data,117
 2 Processing Steps 31 Packet Capture Packet capture is typically done by capture machines ex- posed to network traffic via port mirroring or in-line tap- ping,Non-data,117
| Port mirroring is commonly available in most enterprise level routers and switches Here routers forward a copy of the traffic through one or more ports to a mirror port con- nected to the capture machine While this method is com- mon, it adds a burden to the router and may add jitter, caused by queuing at the router In-line tapping uses a network tap physically attached to the monitored link|,Non-data,117
| In-line tapping does not affect network operation, except for a brief interruption when it is first installed It works at line speed and does not distort packet timing A disadvantage is the need for additional hardware Once packets reach the capture machine, they can be cap- tured with normal network cards and commonly available sniffing tools (e|,Non-data,117
|g, tcpdump) This inexpensive approach, however, may drop packets at high speeds and suffer from inaccurate timestamps due to interrupt coalescing More expensive specialized devices such as the Endace DAG net- work monitoring cards (Endace, 2005), support line speed capture and nanosecond timestamp resolution, as well as GPS synchronized clocks|,Non-data,117
| 4 Spectral Representation of Network Traffic While there are many different methods to analyze net- work traffic once it is captured, ours differs from most in that our analysis is in the spectral domain This section briefly reviews the techniques used by our system for calcu- lating the spectral representation of network traffic In Sec- tion 5 we use our techniques to visually observe the spectral characteristics of bottleneck links to build intuition|,Non-data,117
| Other researchers have explored spectral representations of network traffic (Barford et al, 2002; Partridge et al, 2002; Cheng et al, 2002; Hussain et al|,Non-data,117
|, 2003) Here we adopt the technique proposed by Hussain et al (Hussain 4 packet trace from the spectrum What it shows may be tem- porary or transient phenomena on the network|,Non-data,117
