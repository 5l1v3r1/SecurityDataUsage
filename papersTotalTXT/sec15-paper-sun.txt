RAPTOR: Routing Attacks on Privacy in Tor

Yixin Sun and Anne Edmundson, Princeton University; Laurent Vanbever, ETH Zürich;  

Oscar Li, Jennifer Rexford, Mung Chiang, and Prateek Mittal, Princeton University

https://www.usenix.org/conference/usenixsecurity15/technical-sessions/presentation/sun

This paper is included in the Proceedings of the 24th USENIX Security SymposiumAugust 12–14, 2015 • Washington, D.C.ISBN 978-1-931971-232Open access to the Proceedings of  the 24th USENIX Security Symposium is sponsored by USENIXRAPTOR: Routing Attacks on Privacy in Tor

Yixin Sun

Princeton University

Anne Edmundson
Princeton University

Laurent Vanbever

ETH Zurich

Oscar Li

Princeton University

Jennifer Rexford

Princeton University

Mung Chiang

Princeton University

Prateek Mittal

Princeton University

Abstract
The Tor network is a widely used system for anony-
mous communication. However, Tor is known to be
vulnerable to attackers who can observe trafﬁc at both
ends of the communication path. In this paper, we show
that prior attacks are just the tip of the iceberg. We
present a suite of new attacks, called Raptor, that can
be launched by Autonomous Systems (ASes) to com-
promise user anonymity. First, AS-level adversaries can
exploit the asymmetric nature of Internet routing to in-
crease the chance of observing at least one direction of
user trafﬁc at both ends of the communication. Second,
AS-level adversaries can exploit natural churn in Inter-
net routing to lie on the BGP paths for more users over
time. Third, strategic adversaries can manipulate Inter-
net routing via BGP hijacks (to discover the users using
speciﬁc Tor guard nodes) and interceptions (to perform
trafﬁc analysis). We demonstrate the feasibility of Rap-
tor attacks by analyzing historical BGP data and Tracer-
oute data as well as performing real-world attacks on the
live Tor network, while ensuring that we do not harm real
users. In addition, we outline the design of two monitor-
ing frameworks to counter these attacks: BGP monitor-
ing to detect control-plane attacks, and Traceroute moni-
toring to detect data-plane anomalies. Overall, our work
motivates the design of anonymity systems that are aware
of the dynamics of Internet routing.

1

Introduction

Anonymity systems aim to protect user identities from
untrusted destinations and third parties on the Internet.
Among all of them, the Tor network [25] is the most
widely used. As of February 2015, the Tor network com-
prises of 7,000 relays or proxies which together carry
terabytes of trafﬁc every day [8]. Tor serves millions
of users and is often publicized by political dissidents,
whistle-blowers, law-enforcement, intelligence agencies,

journalists, businesses and ordinary citizens concerned
about the privacy of their online communications [9].

Along with anonymity, Tor aims to provide low la-
tency and, as such, does not obfuscate packet timings
or sizes. Consequently, an adversary who is able to ob-
serve trafﬁc on both segments of the Tor communication
channel (i.e., between the server and the Tor network,
and between the Tor network and the client) can corre-
late packet sizes and packet timings to deanonymize Tor
clients [45, 46].

There are essentially two ways for an adversary to
gain visibility into Tor trafﬁc, either by compromising
(or owning enough) Tor relays or by manipulating the
underlying network communications so as to put herself
on the forwarding path for Tor trafﬁc. Regarding net-
work threats, large Autonomous Systems (ASes) such as
Internet Service Providers (ISPs) can easily eavesdrop on
a portion of all links, and observe any unencrypted infor-
mation, packet headers, packet timing, and packet size.
Recent declarations by Edward Snowden have conﬁrmed
that ASes poses a real threat. Among others, the NSA has
a program called Marina which stores meta information
about user communications for up to a year [15], while
the GCHQ has a program called Tempora that stores
meta-information for 30 days and buffers data for three
days [36]. Also, and maybe more importantly, it has been
shown that Tor was targeted by such adversaries in col-
lusion with ASes [10, 12, 11].

In this paper, we present Raptor, a suite of novel trafﬁc
analysis attacks that deanonymize Tor users more effec-
tively than previously thought possible. To do so, and
unlike previous studies on AS-level adversaries [28, 26,
40], Raptor leverages the dynamic aspects of the Inter-
net routing protocol, i.e.
the Border Gateway Protocol
(BGP).

Raptor attacks are composed of three individual at-
tacks whose effects are compounded (§2). First, Raptor
exploits the asymmetric nature of Internet routing: the
BGP path from a sender to a receiver can be different

USENIX Association  

24th USENIX Security Symposium  271

Trafﬁc Analysis

BGP Churn

BGP Hijack

BGP Interception

Symmetric
Asymmetric

Known [45, 46]

Novel (§3)

Novel (§4)

Novel (§5)

Novel (§5)

Table 1: This paper describes Raptor, a suite of previously unknown attacks on the Tor Network

than the BGP path from the receiver to the sender. In-
ternet routing asymmetry increases the chance of an AS-
level adversary observing at least one direction of both
communication endpoints, enabling a novel asymmetric
trafﬁc analysis attack. Second, Raptor exploits natural
churn in Internet routing: BGP paths change over time
due to link or router failures, setup of new Internet links
or peering relationships, or changes in AS routing poli-
cies. Changes in BGP paths allow ASes to observe ad-
ditional Tor trafﬁc, enabling them to deanonymize an in-
creasing number of Tor clients over time. Third, Rap-
tor exploits the inherent insecurity of Internet routing:
strategic adversaries can manipulate Internet routing via
BGP hijack and BGP interception attacks against the Tor
network. These attacks enable the adversary to observe
user communications, and to deanonymize clients via
trafﬁc analysis.

Raptor attacks were brieﬂy discussed in a preliminary
and short workshop paper [48]. In this paper, we go fur-
ther by measuring the importance of the attacks using
real-world Internet control- and data-plane data. We also
demonstrate the attacks feasibility by performing them
on the live Tor network—with success. No real Tor users
were harmed in our experiments (§7). Finally, we also
describe efﬁcient countermeasures to restore a good level
of anonymity. To summarize, we make the following key
contributions:
Asymmetric Trafﬁc Analysis and BGP Churn: Us-
ing live experiments on the Tor network, we showed
that Raptor’s asymmetric trafﬁc analysis attacks can
deanonymize a user with a 95% accuracy, without any
false positives (§3). Using historical BGP and Tracer-
oute data, we showed that by considering routing asym-
metry and routing churn, the threat of AS-level attacks
increases by 50% and 100%, respectively (§4).
BGP Hijacks and Interceptions: We analyzed known
BGP hijacks and interception attacks on the Internet and
show multiple instances where Tor relays were among
the target preﬁxes (§5). As an illustration, the recent Bit-
coin Hijack attack [1] in 2014, as well as Indosat Hijack
attacks [3, 2] in 2014 and 2011 involved multiple Tor re-
lays. To demonstrate the feasibility of such attacks for
the purpose of deanonymizing Tor clients, we success-
fully performed an interception attack against a live Tor
relay. Overall, we found that more than 90% of Tor re-
lays are vulnerable to our attacks.

Countermeasures: We present a comprehensive taxon-
omy of countermeasures against Raptor attacks (§6). In
particular, we outline the design of a monitoring frame-
work for the Tor network that aims to detect suspicious
AS-level path changes towards Tor preﬁxes using both
BGP and Traceroute monitoring.

2 Raptor Attacks

To communicate with a destination, Tor clients establish
layered circuits through three subsequent Tor relays. The
three relays are referred to as: entry (or guard) for the
ﬁrst one, middle for the second one, and exit relay for
the last one. To load balance its trafﬁc, Tor clients se-
lect relays with a probability that is proportional to their
network capacity. Encryption is used to ensure that each
relay learns the identity of only the previous hop and the
next hop in the communications, and no single relay can
link the client to the destination server.

It is well known that if an attacker can observe the
trafﬁc from the destination server to the exit relay as well
as from the entry relay to the client (or trafﬁc from the
client to the entry relay and from the exit relay to the
destination server), then it can leverage correlation be-
tween packet timing and sizes to infer the network iden-
tities of clients and servers (end-to-end timing analysis).
This timing analysis works even if the communication is
encrypted.

In the rest of the section, we present the three Raptor
attacks and how they contrast to conventional symmetric
trafﬁc analysis. We start by discussing how seeing just
one direction of the trafﬁc for each segment (between
the sender and the guard, and between the last relay and
the destination) is sufﬁcient for the adversary (§2.1). We
then explain how ASes can exploit natural BGP dynam-
ics (§2.2), or even launch active attacks (§2.3), to com-
promise the anonymity of Tor users.

2.1 Asymmetric Trafﬁc Analysis
We propose asymmetric trafﬁc analysis, a novel form of
end-to-end timing analysis that allows AS-level adver-
saries to compromise the anonymity of Tor users. Let
us suppose that a Tor client is uploading a large ﬁle to a
Web server. Conventional trafﬁc analysis considers only
one scenario where adversaries observe trafﬁc from the

272  24th USENIX Security Symposium 

USENIX Association

2

entry

AS2
entry-to-client

AS1

client-to-entry

client

dest-to-exit

dest

entry

dest

AS3

AS5

AS4

AS6

exit-to-dest
exit-to-dest

AS3

AS5

AS4

AS6

AS2

AS1

exit

client

exit

Figure 1: Asymmetric routing increases the power of
AS-level adversaries. When considering forward traf-
ﬁc, i.e., client-to-entry and exit-to-destination ﬂows, only
AS5 can compromise anonymity. When considering
both forward and backward trafﬁc though, AS3, AS4
and AS5 can compromise anonymity. Our measurements
conﬁrm that asymmetric trafﬁc analysis is feasible.

client to the entry relay, and from the exit relay to the
Web server (same direction as the ﬂow of trafﬁc)1.
However, Internet paths are often asymmetric:

the
path from the exit relay to the Web server may be dif-
ferent than the path from the Web server to the exit relay.
Thus it is possible that an adversary may not be able to
observe the data trafﬁc on the path from the exit relay
to the server, but it observes the TCP acknowledgment
trafﬁc on the path from the server to the exit relay.

We introduce an asymmetric trafﬁc analysis attack that
allows an adversary to deanonymize users as long as the
adversary is able to observe any direction of the trafﬁc, at
both ends of the communication. Note that we can view
the conventional end-to-end timing analysis as a special
case of our attack, in which the adversary is able to ob-
serve trafﬁc at both ends of the anonymous path, and in
the same direction as the ﬂow of trafﬁc. Routing asym-
metry increases the number of ASes who can observe at
least one direction of trafﬁc at both communication end-
points. We illustrate this scenario in Figure 1.

More concretely, our attack is applicable to four sce-
narios where an adversary observes (a) data trafﬁc from
the client to entry relay, and data trafﬁc from exit relay to
the server, or (b) data trafﬁc from the client to entry re-
lay, and TCP acknowledgment trafﬁc from the server to
exit relay, or (c) TCP acknowledgment trafﬁc from guard
relay to the client, and data trafﬁc from exit relay to the
server, or (d) TCP acknowledgment trafﬁc from guard re-
lay to the client, and TCP acknowledgment trafﬁc from
the server to the exit relay.

A key hurdle in asymmetric trafﬁc correlation is that
TCP acknowledgments are cumulative, and there is not
a one-to-one correspondence between data packets and

1If the trafﬁc is ﬂowing from the server to the client, then end-to-
end timing analysis considers a scenario where the adversary observes
trafﬁc from the Web server to the exit relay and from the entry relay to
the client.

the TCP acknowledgment packets. We overcome this
hurdle by observing that Tor (and other anonymity sys-
tems) use SSL/TLS for encryption, which leaves the TCP
header unencrypted. Our attack inspects TCP headers in
the observed trafﬁc to retrieve the TCP sequence number
ﬁeld and TCP acknowledgment number ﬁeld, and ana-
lyzes the correlation between these ﬁelds of both ends
over time. Our experimental results in Section 3 show
the feasibility of asymmetric trafﬁc analysis, with a de-
tection accuracy of 95%. Furthermore, asymmetric traf-
ﬁc analysis can be combined with other Raptor attacks,
such as exploiting natural churn and BGP interception
attack, which we discuss next.

2.2 Natural Churn

client-to-entry

connection

exit-to-server

connection

dest

entry

entry

dest

AS2

AS1

AS3

AS5

AS4

AS6

potentially

compromising AS

AS3

AS5

AS4

AS6

AS2

AS1

client

exit

client

exit

Figure 2: BGP churn increases the number of ASes that
can deanonymize Tor trafﬁc.
Initially, only AS5 can
deanonymize the client, seeing both direction of the traf-
ﬁc (left). After the failure of link (AS4, AS5), both AS5
and AS3 can deanonymize Tor trafﬁc (right).

When users communicate with recipients over multi-
ple time instances, then there is a potential for compro-
mise of anonymity at every communication instance [49,
42]. Thus anonymity can degrade over time. Tor consid-
ers this threat from the perspective of adversarial relays
(but not adversarial ASes).Tor clients use a ﬁxed entry
relay (guard relay) for a period of time (Dingledine et al.
recommend 9 months [24]) to mitigate this threat with
respect to adversarial relays. We note that the threat of
AS-level adversaries still persists, because even though
the entry relay is ﬁxed, the set of ASes on the path be-
tween the client and the guard relay may change over
time. Next, we discuss such attacks that rely on natural
churn in BGP paths.

The underlying Internet paths between a client and
guard relay vary over time due to changes in the phys-
ical topology (e.g., failures, recoveries, and the rollout
of new routers and links) and AS-level routing policies
(e.g., trafﬁc engineering and new business relationships).
These changes give a malicious AS surveillance power
that increases over time. For example, AS 3 in Figure 2
does not lie on the original path from the exit to the des-

USENIX Association  

24th USENIX Security Symposium  273

3

tination, but a BGP routing change can put AS 3 on the
path, allowing it to perform trafﬁc analysis.

In Section 4, we show that the surveillance capability
of an AS-level adversary can increase up to 50% when
considering BGP churn over a period of one month.

2.3 BGP Hijack
So far, we discussed Raptor attacks that were pas-
sive. Strategic AS-level adversaries are also capable of
launching active attacks, that deviate from honest routing
behavior. Internet routing is vulnerable to attacks which
enable an AS to manipulate inter-domain routing by ad-
vertising incorrect BGP control messages. While these
attacks are well known in the networking community, we
are the ﬁrst to apply these attacks to anonymity systems
such as Tor.

AS-level adversaries can hijack an IP preﬁx [51] by
advertising the preﬁx as its own. The attack causes a
fraction of Internet trafﬁc destined to the preﬁx to be
captured by the adversary. Tor relay nodes can ob-
serve a large amount of client trafﬁc. For example, a
Tor guard relay observes information about client IP ad-
dresses. Thus, the IP preﬁxes corresponding to Tor guard
relays presents an attractive target for BGP hijack.

As a concrete attack example, we consider a scenario
where an AS-level adversary aims to deanonymize the
user associated with a connection to a sensitive Web
server (say a whistleblowing website). The adversary can
ﬁrst use existing attacks on the Tor network to uncover
the identity of the client’s guard relay [39, 37, 31, 42].
Next,
the adversary can launch a BGP hijack attack
against the Tor relay. This allows the adversary to see
trafﬁc destined to the guard relay. BGP hijack thus en-
ables an adversary to learn the set of all client IP ad-
dresses (anonymity set) associated with a guard relay
(and the target connection to the sensitive Web server).

We note that in a preﬁx-hijack attack, the captured
trafﬁc is blackholed, and the client’s connection to the
guard is eventually dropped. Thus, it may not be pos-
sible to perform ﬁne-grained trafﬁc analysis to infer the
true client identity from this anonymity set. However, the
identiﬁcation of a reduced anonymity set (as opposed to
the entire set of Tor users) is already a signiﬁcant amount
of information leakage, and can be combined with other
contextual information to break user anonymity [18]. In
Section 5, we uncover several real-world BGP hijack at-
tacks in which Tor relays were among the target preﬁxes.

2.4 BGP Interception
Our BGP hijack attack discussed above allows adver-
saries to capture trafﬁc destined towards a target Tor
preﬁx, but the captured trafﬁc is blackholed, resulting

entry

client

AS2

AS1

dest

entry

AS3

AS5

AS4

AS6

10.0.0.0/16
 
Path: 6
 

10.0.0.1

exit

client

AS3

AS5

AS2

AS1

dest

10.0.0.0/16
Path: 3 2 5 6

 
 

AS4

10.0.0.0/16
 
Path: 6
 

AS6

10.0.0.1

exit

Figure 3: BGP interception attack enables ASes to selec-
tively put themselves on some path. Here, AS3 only sees
trafﬁc between the client and the entry relay (left). By
intercepting the preﬁx containing the exit relay (right),
AS3 also sees trafﬁc towards the exit relay, enabling it to
deanonymize the Tor communication.

in the connecting being dropped. Next, we discuss a
more sophisticated routing attack called BGP intercep-
tion attack [16], that allows adversaries to perform exact
deanonymization of Tor users.

A preﬁx interception attack allows the malicious AS to
become an intermediate AS in the path towards the guard
relay, i.e., after interception, the trafﬁc is routed back to
the actual guard relay. Such an interception attack al-
lows the connection to be kept alive, enabling the ma-
licious AS to exactly deanonymize the client via asym-
metric trafﬁc analysis.

Similar to the previous discussion, let us consider an
adversary trying to deanonymize the user connecting to
a sensitive website (the adversary already sees the traf-
ﬁc towards the website). The adversary can ﬁrst uncover
the identity of the guard relay using existing attacks [39]
(as before), and then launch a preﬁx interception attack
against the guard relay. Since the adversary routes the
trafﬁc back to the guard relay, the client’s connection is
kept alive, allowing the adversary to launch asymmetric
trafﬁc correlation attacks. Note that in contrast to BGP
hijack attacks, BGP interception attacks can perform ex-
act deanonymization of Tor clients.

These attacks enable malicious ASes to deanonymize
user identity corresponding to a monitored target connec-
tion. Similarly, ASes that already see the client’s trafﬁc
to its guard can position themselves to observe the trafﬁc
between the server and the exit relay by launching inter-
ception attacks against exit relays. Figure 3 illustrates
this attack scenario.

Finally, we note that a remote adversary can launch in-
terception attacks against both guard relays and exit re-
lays simultaneously, to perform general surveillance of
the Tor network. In Section 5, we demonstrate a real-
world BGP interception attack against a live Tor relay by
collaborating with autonomous system operators.

274  24th USENIX Security Symposium 

USENIX Association

4

3 Asymmetric Trafﬁc Analysis

In this section, we experimentally show that asymmet-
ric trafﬁc analysis attacks are feasible. We use the live
Tor network for our experiments. To protect the safety
of real Tor users, we generate our own trafﬁc through the
Tor network. Our goal is to investigate the accuracy of
asymmetric trafﬁc analysis in deanonymizing our gener-
ated trafﬁc.
Experimental Setup:
In order to generate our own
trafﬁc through the live Tor network, we use Planet-
Lab nodes as clients and Web servers. PlanetLab is an
open platform for networking research, that provides ac-
cess to hundreds of geographically distributed machines.
We randomly pick 100 machines on PlanetLab, located
across United States, Europe, and Asia. We installed Tor
clients on 50 of those machines, and used the Privoxy
tool (www.privoxy.org) to conﬁgure wget requests to
tunnel over Tor. The remaining 50 machines were setup
to be Web servers, each containing a 100MB image ﬁle.
We use the default Tor conﬁguration on the 50 client
machines. We launch wget requests on the 50 clients
at the same time, each requesting a 100MB image ﬁle
from one of the 50 web servers, respectively. We use
tcpdump to capture data for 300 seconds at the clients
and the servers during this process.
Asymmetric correlation analysis: In each packet trace,
we ﬁrst extract the TCP sequence number and TCP ac-
knowledgment number ﬁelds in the TCP header. Us-
ing the TCP sequence and acknowledgment numbers, we
next compute the number of transmitted data bytes per
unit time. For each pair of observed traces, we com-
pute the correlation between the vector of transmitted
data bytes over time. For our analysis, we use the Spear-
man’s rank correlation coefﬁcient (other correlation met-
rics could also be applicable). For each client, our asym-
metric trafﬁc analysis attack selects the server trace with
the highest correlation as the best match.
Results: Figure 4 illustrates our asymmetric analysis
computed between a client server pair that is commu-
nicating. We can see high correlation in all four ob-
servation scenarios discussed in Section 2. Figure 5 il-
lustrates our asymmetric analysis computed between a
client server pair that is not communicating with each
other. We can see that incorrectly matched pairs have
poor correlation in all four observation scenarios. Fig-
ure 6 illustrates the detection accuracy rate grows as the
duration of attack increases, especially in the ﬁrst 30 sec-
onds.

We computed the detection accuracy of our asymmet-
ric trafﬁc analysis attacks in all four scenarios after 300
seconds (by selecting the highest correlated pair), and
obtained an average accuracy of 95% (Table 2). The er-
ror matches are all false negatives, for which the client

client
server

)

B
M

(
 
a
t
a
D

4

3

2

1

0

client
server

)

B
M

(
 
a
t
a
D

4

3

2

1

0

0

50

100

150

200

250

300

0

50

100

150

200

250

300

Time (s)

Time (s)

(a) Client: ACK, Server: ACK

(b) Client: ACK, Server: Data

client
server

)

B
M

(
 
a
t
a
D

4

3

2

1

0

client
server

)

B
M

(
 
a
t
a
D

4

3

2

1

0

0

50

100

150

200

250

300

0

50

100

150

200

250

300

Time (s)

Time (s)

(c) Client: Data, Server: ACK

(d) Client: Data, Server: Data

Figure 4: Asymmetric trafﬁc analysis shows high corre-
lation between a matched client/server pair

has insigniﬁcant correlation coefﬁcients with all servers,
so it fails to be matched to any servers. We did not ob-
serve any false positives in our results.

Client ACK/
Server ACK

Client ACK/
Server Data

Client Data/
Server ACK

Client Data/
Server Data

Overall
False negative
False positive

96%
4%
0%

94%
6%
0%

96%
4%
0%

94%
6%
0%

Table 2: Asymmetric trafﬁc analysis accuracy rate

In addition to the actual observed error rate above, we
also performed a statistical tests to compute the 95% con-
ﬁdence interval on our error rate, given our sample size
of 50 client machines and 50 server machines. Table 3
illustrates the conﬁdence intervals on our error rates.

Client ACK/
Server ACK

Client ACK/
Server Data

Client Data/
Server ACK

Client Data/
Server Data

False negative

False positive

0.48% –
13.71%
0% –
0.15%

1.25% –
16.54%
0% –
0.15%

0.48% –
13.71%
0% –
0.15%

1.25% –
16.54%
0% –
0.15%

Table 3: Asymmetric trafﬁc analysis error rate conﬁ-
dence interval

4 Natural Churn

In this section, we study and evaluate how routing dy-
namics, or churn, increase the power of AS-level adver-
saries in anonymity systems such as Tor. We start with
an exhaustive control-plane analysis using collected BGP

USENIX Association  

24th USENIX Security Symposium  275

5

client
server

)

B
M

(
 
a
t
a
D

4

3

2

1

0

client
server

)

B
M

(
 
a
t
a
D

4

3

2

1

0

0

50

100

150

200

250

300

0

50

100

150

200

250

300

Time (s)

Time (s)

(a) Client: ACK, Server: ACK

(b) Client: ACK, Server: Data

client
server

)

B
M

(
 
a
t
a
D

4

3

2

1

0

client
server

)

B
M

(
 
a
t
a
D

4

3

2

1

0

0

50

100

150

200

250

300

0

50

100

150

200

250

300

Time (s)

Time (s)

(c) Client: Data, Server: ACK

(d) Client: Data, Server: Data

Figure 5: Asymmetric trafﬁc analysis shows low corre-
lation between an unmatched client/server pair

0

.

1

8
0

.

6

.

0

4
0

.

)

%

(
 
e

t

a
R
 
y
c
a
r
u
c
c
A

2

.

0

0

.

0

0

50

100

150

Time (s)

200

250

300

Figure 6: The accuracy of the attack quickly increases
with time, reaching 80% within a minute, 95% after ﬁve
minutes.

data (§4.1). Our results show that churn can increase the
amount of compromised Tor circuits by up to 50% over
a period of one month. We then conﬁrmed our results by
performing targeted data-plane measurements on the Tor
network (§4.2). Again, churn signiﬁcantly increased the
percentage of vulnerable Tor circuits, nearly tripling it.

4.1 Control-plane Evaluation
We quantiﬁed the impact of churn by measuring how it
increased the probability of a single AS (say AS X) to
end up simultaneously on the path between a client and
a guard relay and on the path between a destination and
an exit relay. When this happens, we considered AS X
as (potentially) compromising for the pair (client, desti-
nation) using the corresponding Tor circuit. Observe that
our analysis leverages asymmetric trafﬁc analysis (§3) as
it only requires X to be on-path for two publicly-known
preﬁxes, covering the guard and the exit relay.
Datasets We collected 612+ million BGP updates per-

taining to 550,000 IP preﬁxes collected by six RIPE-
maintained BGP Looking Glass (rrc00, rrc01, rrc03,
rrc04, rrc11, rrc14) [6] in January 2015 over 250+ BGP
sessions. We processed the dataset to remove any arti-
facts caused by session resets [20]. In parallel, we also
collected Tor-related data (IP address, ﬂags and band-
width) of about 6755 Tor relays active during the same
period of time [4]. Among all Tor relays, 1459 (resp.
1182) of them were listed as guards (resp. exits) and 338
relays were listed as both guard and exit.

We considered each BGP session as a proxy for Tor
clients and destinations. Note that analysis implicitly ac-
counts for any Internet host reachable directly or indi-
rectly through these BGP sessions. Our dataset contains
sessions belonging to major Internet transit providers
such as Level-3, ATT, NTT, etc.
that provide transit to
millions of hosts.
Static baseline. We computed a static baseline by con-
sidering the amount of compromising ASes at the be-
ginning of our dataset, without considering any updates.
On each BGP session si, we computed and maintained
the routing table used to forward Tor trafﬁc by consid-
ering all the BGP announcements and withdrawals re-
ceived over si. More precisely, we kept track of the most-
speciﬁc routing table entry that was used to forward traf-
ﬁc to any Tor guard or exit relays. We refer to those as
Tor preﬁxes. In this context, a routing table entry for a
relay r is a ﬁve-tuple (ti,t f , p,e,L) composed of: i) the
initial time ti at which the entry started to be used by
the router for forwarding trafﬁc to r; ii) the ﬁnal time t f
at which the entry stopped to be used by the router; iii)
the corresponding IP preﬁx p; iv) a boolean e denoting
whether the r is an entry or an exit relay; and v) the list
of all the ASes L that will see the trafﬁc en-route to reach
r (i.e., the AS-PATH).

“on-path” AS

ASX

…

s1
s2

sn

g1

g2

…

gk

e1

e2

el

ASX

s1
s2

…

…

ASY

sn

sources

(BGP sessions)

guard
relays

exit
relays

destinations
(BGP sessions)

Figure 7: Control-plane evaluation setup

Using the routing-table data, we accounted, for each
AS X, the number of pairs ((si, gi), (s j, e j)) for which it
appeared simultaneously in the AS-PATH. Here, si (resp.
s j) refers to a client (resp. destination) session, while gi
(resp. e j) refers to a Tor guard (resp. exit) relay. To
ensure meaningful results, we only considered cases in

6

276  24th USENIX Security Symposium 

USENIX Association

which si and s j are in different ASes to ensure enough
diversity in the paths seen. As illustration, in Fig. 7,
ASX is a compromising AS for the pair ((s1, g1), (s2,
e2)), meaning it can deanonymize any clients connected
beyond s1 and exchanging data with a destination con-
nected beyond s2 which uses g1 (resp. e2) as a guard
(resp. exit) relay.

100

80

F
D
C
C

60

40

20

0

100

F
D
C
C

80

60

40

20

0

0 
% of compromised Tor circuits per (src,dst) pairs

10 

30 

20 

40

1
5
ratio between the # of compromised circuits 

4

2

3

 when considering churn and without

(a) Static baseline

(b) Churn-induced increase

Figure 8: Without considering churn, more than 5% of
all the possible Tor circuits are compromised by at least
one AS in 20% of the cases (left). The amount of com-
promised circuits increase for the majority of the (src,
dest) pairs (60%) when considering churn, by up to 50%
in 20% of the cases (right).

Fig. 8a depicts the percentage of compromised Tor cir-
cuits for each source and destination as a Complemen-
tary Cumulative Distribution Function (CCDF). A point
(x,y) on the curve means that x% of all Tor circuits, i.e.
(guard,exit) pairs, are compromised for at least y%
of all the (src,dst) pairs. We see that, for 50% of all
the (src,dst) pairs, at least 0.75% of the Tor circuits
are compromised by at least one AS. This number grows
to 6% and 13% of the Tor circuits considering the 75th-
and 95th-percentile, respectively.
Measuring the effect of churn. We computed the num-
ber of extra Tor circuits that got compromised by at least
one AS over one month. To be fair, we only considered a
Tor circuit as compromised if it crossed the same AS for
at least 30 seconds as it is unlikely that a time-correlation
attack can be performed in shorter timescale. Fig. 8b
plots the ratio between the amount of compromised Tor
circuits for each (src,dst) pair at the end of the month
with respect to the static baseline amount. We see that
churn signiﬁcantly increases the probability of compro-
mise.
Indeed, the amount of compromised circuits in-
crease for 60% of the (src,dst). The increase reaches
50% (ratio of 1.5) in 20% of the cases.

In addition to increasing the number of compro-
mised Tor circuits, churn also increases the number of
compromisable (src,dst) pairs.
Indeed, while 5593
(src,dst) pairs could be compromised without up-
dates, that number increased to 5754 pairs when consid-
ering updates (an augmentation of nearly 3%).
Few powerful ASes see some trafﬁc for a large ma-

Name

NTT
IIJ
BroadbandONE
Inet7
Level3
Tinet
Cogent
Level3/GBLX
TATA AMERICA
TeliaSonera

ASN

2914
2497
19151
13030
3356
3257
174
3549
6453
1299

Tor circuits (%) seen

Country

91
91
91
91
88
86
63
58
53
50

US
Japan
US
CH
US
DE
US
US
US
SWE

Table 4: A few well-established ASes simultaneously see
some trafﬁc for up to 90% of all (entry, exit) relays pairs.

jority of the Tor circuits. Due to their central position
in the Internet, a few ASes naturally tend to see a lot of
Tor trafﬁc crossing them. To account for this effect, we
compute how many Tor circuits crossed each AS from
at least one (src,dst) pair. The top 10 ASes in terms
of compromised circuits are listed in Table 4. Large net-
works such as NTT or Level3 are able to see Tor trafﬁc
for up to 90% of Tor circuits.

4.2 Data-plane Evaluation
Next, we aim to quantify the impact of churn using data-
plane information collected via traceroute.
Datasets We ran traceroute between 70 RIPE Atlas
probes [5] to measure the actual forwarding path taken
by packets entering and exiting the Tor network. We se-
lected one probe in 70 different ASes, split in the follow-
ing four sets:
• S1 : 10 ASes that contain the most Tor clients [35];
• S2 : 25 ASes that cumulatively contained ∼50% of all
• S3 : 25 ASes that cumulatively contained ∼50% of all
• S4 : 10 ASes that contain the most Tor destina-

guard relay bandwidth;

exit relay bandwidth;

tions [35].

We then ran daily traceroutes over a 3 weeks period be-
tween all probes in S1 towards all probes in S2 (and vice-
versa), measuring the forwarding paths P1 between Tor
clients and guard relays, and the paths P2 between guard
relays and Tor clients. Similarly, we measured the for-
warding paths P3 between exit relays and Tor destina-
tions, and the paths P4 between Tor destinations and exit
relays. Overall, we measured 10×25×25×10 = 62500
possible Tor circuits.
Churn nearly tripled the amount of vulnerable Tor
circuits. If we use conventional methodology and only
look for common ASes between P1 and P3, we found
12.8% of Tor circuits to be vulnerable on the ﬁrst day
of the experiment (red line in Fig. 9).
In comparison,

USENIX Association  

24th USENIX Security Symposium  277

7

l

e
b
a
r
e
n
u
V
 
s
t
i

l

0
3

.

0

0
2

.

0

u
c
r
i

C

 
r
o
T

0
1

.

0

 
f

 

o
%

0
0

.

0

% relays % bw

10.5
6.30
4.78
3.04
2.04
1.69
28.35

23
13
7
4
14
9
70

Forward paths (day 1)
Bidirectional paths (day 1)
Bidirectional paths (day 21)

Total

Name
OVH
Hetzner
Online.net

# pfx
11.80
6.68
10.52
2.58 Wedos
4.27
3.86
39.71

Leaseweb
PlusServer

ASN
16276
24940
12876
197019
16265
8972

5

10

15

20

Time (Day)

Figure 9: Percentage of Tor circuits vulnerable to an AS
level adversary

if we also consider asymmetric paths (i.e., also look for
common ASes between P1 and P4, P2 and P3, and P2 and
P4), the percentage of vulnerable Tor circuits nearly dou-
bled to 21.3% on the ﬁrst day (blue line in Fig. 9), and
nearly tripled to 31.8% at the end of the three week pe-
riod (green line in Fig. 9).

5 BGP Attacks: Hijack and Interception

In this section, we study and evaluate the feasibility
of BGP hijack and interception attacks on the Tor net-
work. First, we show that Tor relays tend to be concen-
trated within few ASes and IP preﬁxes—making those
highly attractive targets for hijack and interception at-
tacks (§5.1). Second, we show that, in several real-
world BGP hijack attacks, Tor relays were among the
target preﬁxes (§5.2). Third, we perform a real-world
BGP interception attack against a live Tor guard relay,
with success, to demonstrate the ability to accurately
deanonymize Tor clients (§5.3).

5.1 Tor relays concentration

The amount of Tor trafﬁc attracted by a hijack or an in-
terception attack depends on the number of relays that
lie within the corresponding preﬁx. As such, preﬁxes
and ASes that host many relays of high bandwidth are an
interesting targets for attackers. To evaluate how vulner-
able the Tor network was to hijack and interceptions at-
tacks, we computed the number of relays present in each
AS and in each BGP preﬁx. Surprisingly, close to 30%
of all relays are hosted in only 6 ASes and 70 preﬁxes.
Together, these relays represent almost 40% of the band-
width in the entire Tor network (see Table 5). As such,
these few preﬁxes constitute extremely attractive targets.

Table 5: 6 ASes and 70 preﬁxes host ∼30% of all Tor
guard and exit relays as well as ∼40% of the entire Tor
network bandwidth. As such, these constitute extremely
attractive targets for hijacks and interceptions attacks.

5.2 Known Preﬁx Hijacking Attacks
While there have been numerous well-documented BGP
preﬁx hijacks and interceptions, it was unknown whether
Tor trafﬁc was intercepted or not. To this extent, we stud-
ied occurrences of well-known preﬁx hijacks and looked
for leaked preﬁxes covering at least a Tor relay. To do so,
we gathered BGP updates from Routeviews [7] around
the time of each attack and ﬁltered out the ones unre-
lated to Tor preﬁxes. Overall, we found that three well-
known hijacks affected Tor relays: two separate incidents
involving one of Indonesia’s largest telecommunication
networks, Indosat, as well as one malicious hijack attack
whose goal was to steal Bitcoins.

Event

# hijacked
relays

# hijacked
guards

# hijacked
exits

Indosat 2011
Indosat 2014

5 (0.24%)
44 (0.80%)

1 (0.15%)
38 (1.80%)

4 (0.44%)
17 (1.65%)

Table 6: Summary statistics for known Indosat preﬁx hi-
jacking events.

Indosat 2011. On January 14th, 2011, Indosat (AS4761)
originated 2,800 new preﬁxes, which covered 824 differ-
ent ASes [2]. 7 of these preﬁxes affected the Tor net-
work by covering 5 of the Tor relays. As discussed in
Section 2, Indosat could potentially have learned infor-
mation about the client IP addresses associated with each
of the guard relays (reduced anonymity set).
Indosat 2014. On April 3, 2014, Indosat originated
417,038 new preﬁxes;
it usually originates 300 pre-
ﬁxes [3]. This compromised 44 Tor relays, 38 of which
were guard relays and 17 of which were exit relays (11
hijacked relays were both guards and exits). Table 6
shows the summary statistics of both Indosat hijacking
incidents.
Canadian Bitcoin 2014.
From February 2014 to
May 2014, an attacker compromised 51 networks at

278  24th USENIX Security Symposium 

USENIX Association

8

Internet

traic

Internet

traic

announce 

184.164.244.0/23

GATECH
(AS 2637)

ISI

(AS 226)

VPN 

Tunneling

VPN 

Tunneling

Transit
Portal
Public AS
47065

Transit
Portal
Public AS
47065

client

guard relay

announce 

184.164.244.0/23

GATECH
(AS 2637)

announce 

184.164.244.0/24

ISI

(AS 226)

VPN 

Tunneling

VPN 

Tunneling

Transit
Portal
Public AS
47065

Transit
Portal
Public AS
47065

client

guard relay

Figure 10: Transit Portal setup

Figure 11: ISI performing interception attack

19 different ISPs, and resulted in the theft of ap-
proximately $83,000 in Bitcoin [1]. We found that
198.245.63.0/24 and 162.243.142.0/24 were hijacked,
and contained a Tor relay, 198.245.63.228. AS16276
(OVH) owns 198.245.63.0/24, but this preﬁx was hi-
jacked by AS21548 (MTO Telecom). The Tor relay that
consequently was hijacked, 198.245.63.228, was a guard
relay located in Montreal, Quebec.

While we do not make any claims about the intent of
the above hijacking ASes, our analysis shows the exis-
tential threat of real-world routing attacks on the Tor net-
work. Furthermore, the fact that the Tor and the research
community missed noticing the presence of Tor relays
among the hijacked preﬁxes is surprising.

5.3 BGP Preﬁx Interception Attack Exper-

iment

Methodology and setup. We now demonstrate the feasi-
bility of the interception attack by performing one, with
success, on the live Tor network. For that, we set up a
machine to run as a Tor guard relay and made it reachable
to the Internet by announcing a /23 preﬁx in BGP using
Transit Portal (TP) [43]. TP enables virtual ASes to es-
tablish full BGP connectivity with the rest of the Internet
by proxying their announcements via dozens of world-
wide deployments. Next, we conﬁgure the 50 Tor clients
in PlanetLab to use our Tor guard relay as the entry relay
to reach 50 web servers, also hosted in PlanetLab.

In order to perform the BGP preﬁx interception at-
tack, we used two TP deployments (GATECH and ISI),
located in different ASes. GATECH TP served the pur-
pose of the “good” AS through which Tor trafﬁc is nor-
mally routed, while ISI TP served as the “malicious”
AS which performed the interception attack. We con-
nected the two TPs to our Tor relay machine via VPN
tunnels. First, in order for our Tor guard relay (run-
ning on 184.164.244.1) to be reachable, we advertised

184.164.244.0/23 (run by us in its entirety for the dura-
tion of our research) via the GATECH TP, so that trafﬁc
destined for IP addresses within that range will be routed,
ﬁrst to the GATECH TP, and then sent to our machine
via the corresponding tunnel. We illustrate our setup in
Fig. 10.

Next, We advertise BGP preﬁx 184.164.244.0/24
via the ISI TP, which constitutes a more-speciﬁc preﬁx
attack against the original announcement announced by
the GATECH TP. Thus, after the new BGP preﬁx an-
nouncement gets propagated through the internet, Tor
client trafﬁc that is destined for our guard will be sent
to ISI instead. Since we conﬁgured the ISI TP to forward
trafﬁc to our guard machine, the Tor relay can still re-
ceive the trafﬁc and keep the Tor connection alive after
the attack. We illustrate the interception attack model in
Fig. 11.

Our setup constitutes a BGP interception attack. Ini-
tially, trafﬁc is routed via GATECH and arrives at our Tor
relay machine via GATECH tunnel. After the attack hap-
pens, trafﬁc drains from GATECH tunnel and gets routed
via ISI, and thus comes to our Tor relay machine via ISI
tunnel instead. Since the trafﬁc still arrives at the relay
machine, it is an interception attack and the connection
does not get interrupted. We use tcpdump on our relay
machine, listening to ISI tunnel, to capture client TCP ac-
knowledgment trafﬁc coming from that tunnel, which is
exactly the data that an adversary would get from launch-
ing such an interception attack.

In the experiment, we ﬁrst launch simultaneous HTTP
requests using wget at the 50 Tor clients for the 100MB
ﬁle at the 50 web servers. Then, 20 seconds after launch-
ing the wget requests, we start announcing the more-
speciﬁc preﬁx via ISI. We use tcpdump listening to ISI
tunnel to capture TCP acknowledgment trafﬁc sent from
the Tor clients during the interception attack. We also use
tcpdump to capture trafﬁc at the web servers during the
whole process. Finally, 300 seconds after launching the

USENIX Association  

24th USENIX Security Symposium  279

9

)

B
M

(
 
a
t
a
D

5
1

0
1

5

0

)

B
M

(
 
a
t
a
D

5
1

0
1

5

0

client
server

)

B
M

(
 
a
t
a
D

0
.
2

5
.
1

0
.
1

5
.
0

0
.
0

client
server

)

B
M

(
 
a
t
a
D

0
.
2

5
.
1

0
.
1

5
.
0

0
.
0

0

100

200

300

400

0

100

200

300

400

0

50

100

150

200

250

0

50

100

150

200

250

Time (s)

Time (s)

Time (s)

Time (s)

(a) Trafﬁc Flow via GATECH

(b) Trafﬁc Flow via ISI

(a) Client & Correlated Server

(b) Client & Uncorrelated Server

Figure 12: Trafﬁc Flow During the Experiment

Figure 13: Client ACK versus Server ACK analysis

attack, we send a withdrawal message via the ISI TP, so
the trafﬁc will be routed via GATECH again as normal.
Our interception attack successfully deanonymized
Tor sources with a 90% accuracy rate. In Fig. 12, we
plot the Tor trafﬁc ﬂow captured on our relay machine
from both GATECH tunnel and ISI tunnel. We can see
that all trafﬁc is routed via GATECH at the beginning.
At t = 20s, ISI starts advertising a more speciﬁc /24 pre-
ﬁx, which takes approximately 35 seconds for it to be
propagated through the internet and drain the trafﬁc from
GATECH. At t = 55s, trafﬁc starts showing up via ISI,
and GATECH does not receive trafﬁc any more. Then,
at t = 300s, ISI withdraws the IP preﬁx announcement,
which takes approximately 22 seconds for the trafﬁc to
appear back on GATECH again. During this interception
process, the connection stays alive.

The captured data from ISI tunnel is client TCP ac-
knowledgment trafﬁc. Thus, we will employ our Asym-
metric Trafﬁc Analysis approach, described in Section 3,
with sample size of 50 client machines and 50 server
machines to do the correlation analysis to deanonymize
users’ identity. We achieve 90% accuracy rate (see Ta-
ble 7).

Client ACK/Server ACK

Accuracy

Rate

90%

False

Negative

False
Positive

8%

2%

Table 7: Asymmetric Trafﬁc Analysis accuracy rate

Fig. 13 shows an example of a client with its correlated
server and an uncorrelated server, respectively. Note that
the time shown on the graph has been adjusted according
to the time that trafﬁc starts showing via ISI.

The detection accuracy rate in the interception attack
case decreases from the average 95% in static asymmet-
ric trafﬁc analysis to 90%. One main reason is that we
conﬁgure all 50 Tor clients to connect to the same Tor
guard relay, which leads to signiﬁcantly higher probabil-
ity that many of them will share the same Tor exit relay
(especially those clients which are in the same AS) as
well, and as a result, their bandwidths are highly likely
to be similar. And also, all the clients start requesting

)

%

(
 
y
c
n
e
u
q
e
r
f

20

15

10

5

0

8 10

16

13
19
prefix length

22

25

Figure 14: >90% of BGP preﬁxes hosting relays are
shorter than /24, making them vulnerable to our attack.

ﬁles from the web servers at the same time, so the band-
width they could achieve will be limited by the guard and
the exit relay, which leads to similar bandwidths due to
the guard/exit bottleneck. However, this scenario is an
extreme and very unlikely case in real Tor connections.
With fewer clients connecting to the same Tor guard re-
lay at the same time, the accuracy of the asymmetric traf-
ﬁc analysis should be higher.
The vast majority of Tor relays are vulnerable to our
attacks. Technically, only preﬁxes shorter than /24 can
be hijacked globally with a more-speciﬁc preﬁx attack
as longer preﬁxes tend to be ﬁltered by default by many
ISPs. To make sure of the feasibility of our attack, we
computed the preﬁx length distribution of Tor preﬁxes
(see Fig.14). We can see that more than 90% of BGP pre-
ﬁxes hosting relays have preﬁx length shorter than /24,
making them directly vulnerable to a more-speciﬁc pre-
ﬁx attack such as ours.

6 Countermeasures Sketch

In this section, we ﬁrst describe a taxonomy of counter-
measures against Raptor attacks. Second, we describe
a general approach for AS-aware anonymous communi-
cation in which Tor clients are aware of the dynamics
of Internet routing. Finally, we describe exploratory ap-
proaches for detecting and preventing BGP hijack and
interception attacks against Tor.

280  24th USENIX Security Symposium 

USENIX Association

10

6.1 Countermeasure Taxonomy
There are two main categories of countermeasures: (a)
approaches that reduce the chance of an AS-level adver-
sary observing both ends of the anonymous communica-
tion, and (b) approaches that aim to mitigate correlation
attacks even when an adversary observes both ends of
the anonymous communication. Figure 15 illustrates the
design space of potential countermeasures against Rap-
tor attacks. In this work, we advocate the former line of
defense – namely, to monitor both routing control-plane
and data-plane, and to strategically select Tor relays that
minimize the chance of compromise (§6.2). We also ad-
vocate defenses that aim to detect and prevent routing at-
tacks (§6.3). We do not focus on the class of approaches
that aim to mitigate correlation analysis by obfuscating
packet sizes and timings, as they are generally consid-
ered too costly to deploy (Appendix A).

Taxonomy	  of	  Countermeasures	  

1.	  Mi4ga4ng	  Traﬃc	  Intercep4on	  

2.	  Mi4ga4ng	  Correla4on	  A=acks	  

Sta4c	  	  
Routes	  

Rou4ng	  	  
Asymmetry	  

Rou4ng	  	  
Churn	  

Rou4ng	  	  
A=acks	  

Symmetric	  
Correla4on	  

Asymmetric	  	  
Correla4on	  

*Monitor	  AS-­‐Level	  	  
Paths	  

*Adver4se	  	  
/24	  preﬁxes	  

Obfuscate	  	  
Packet	  Timing	  

*AS-­‐Aware	  	  
Path	  Selec4on	  

Obfuscate	  	  
Packet	  Sizes	  

*Select	  closer	  	  
Guards	  

Secure	  BGP	  	  
Deployment	  

Encrypt	  TCP	  	  
Header	  	  
	  	  	  	  	  	  	  	  	  +	  

Randomize	  	  
TCP	  Ack	  protocol	  

Figure 15: Taxonomy of Countermeasures

6.2 AS-Aware Path Selection
To minimize opportunities for AS-level trafﬁc analysis,
the Tor network can monitor the path dynamics between
the clients and the guard relays, and between the exit re-
lays and the destinations. Information about path dynam-
ics can be obtained using data-plane (e.g., traceroute)
or control-plane (e.g., BGP feed) tools. For instance,
each relay could publish the list of any ASes it used to
reach each destination preﬁx in the last month. This in-
formation can be distributed to all Tor clients as part of
the Tor network consensus data. Tor clients can use this
data in relay selection, perhaps in combination with their
own traceroute measurements of the forward path to each
guard relay. For example, Tor clients should select relays
such that the same AS does not appear in both the ﬁrst
and the last segments, after taking path dynamics into
account.

6.3 Mitigating Routing Attacks in Tor
Next, we consider two approaches for mitigating Rap-
tor’s routing attacks: detection and prevention.

6.3.1 Monitoring Framework for Detection Routing

Attacks

We propose that the Tor network monitor the routing
control-plane and data-plane for robust detection of rout-
ing attacks. Detecting routing attacks serves two pur-
poses: (1) First, this serves to raise awareness about the
problem and hold attackers accountable. (2) Second, Tor
directory authorities can notify clients. Such notiﬁca-
tions allow the end-user to respond by either suspend-
ing its use of Tor (since most hijacks and interceptions
are short lived), or choose another Tor relay . Next, we
discuss two proof-of-concept monitoring frameworks,
based on BGP data and traceroute data respectively.
BGP Monitoring Framework. Our BGP monitor-
ing framework gathers BGP data from the Routeviews
project. The framework ﬁlters BGP updates to consider
data about preﬁxes that involve a Tor relay. Building
upon prior work in routing attack detection [16], we im-
plement the following heuristics. (1) Frequency heuris-
tic: routing attacks can be characterized by an AS an-
nouncing a path once (or extremely rarely) to a preﬁx that
it does not own. The frequency heuristic detects attacks
that exhibit this behavior. It measures the frequency of
each AS that originates a given preﬁx; if the frequency
is lower than a speciﬁed threshold, then it could be a po-
tential hijack attack. (2) Time Heuristic. Most known
attacks, including those discussed in § 5, last a relatively
short amount of time. The time heuristic measures the
amount of time each path to a preﬁx is announced for;
if the amount of time is extremely small (below a speci-
ﬁed threshold), then there is the possibility of it being a
routing attack.

Detection Capability: We tested our BGP monitoring
framework based on BGP data during known preﬁx hi-
jack attacks, that were discussed in § 5. As a preliminary
validation, the frequency and time heuristics were able
to detect all of the known attacks; the threshold used for
the frequency heuristic was .00001 (the fraction {# of an-
nouncements for preﬁx p originated by AS A}/{total # of
announcements for preﬁx p}), and the threshold used for
the time heuristic was .01 (the fraction {length of time
that preﬁx p is originated by AS A}/{total length of time
preﬁx p is announced by any AS}).
Traceroute Monitoring Framework. The BGP mon-
itoring framework provides measurements of actual AS-
level paths from BGP collector nodes. However, the in-
put data to the monitoring framework is limited to peers
who chose to participate in frameworks such as Route-
views, and BGP data is only a noisy indicator of the rout-

USENIX Association  

24th USENIX Security Symposium  281

11

ing control-plane. For robust detection of attacks, it is
also necessary to monitor the data-plane, which we do
via a Traceroute monitoring framework.

Traceroute is a network diagnostic tool that infers the
routers traversed by internet packets. To analyze both
attacks and changes in AS-level paths to the Tor net-
work, we have built a traceroute monitoring framework
that runs traceroutes from 450 PlanetLab machines to all
Tor entry and exit relays and stores the resulting tracer-
oute data. The set of all Tor entry and exit relays is
updated daily to accommodate new relays that have re-
ceived the guard and exit ﬂags. BGP hijack and inter-
ception attacks typically affect a variety of users from
different vantage points. Thus, traceroute measurements
from 450 geographically diverse PlanetLab have the abil-
ity to detect data-plane anomalies arising out of routing
attacks. The PlanetLab machines are distributed across
140 ASes. Meanwhile, the Tor entry relays are dis-
tributed across 982 ASes and the exit relays are dis-
tributed across 882 ASes. We use Team-Cymru (http:
//www.team-cymru.org/) to compute the mapping be-
tween an IP address and its autonomous system. We will
make the data collected by our Traceroute monitoring
framework available to the research community.

Detection Capability: As a preliminary validation, our
Traceroute monitoring framework was able to detect the
the BGP interception attack discussed in § 5. From the
traceroute data, we observed AS-level path changes from
every PlanetLab node to our Tor guard relay, indicating
an anomaly.

6.3.2 Preventing Routing Attacks in Tor

In addition to monitoring the routing control-plane and
data-plane with respect to the Tor network, the following
approaches can help prevent the threat of Raptor’s rout-
ing attacks.
Advertising /24 Tor preﬁxes: Our experimental mea-
surements indicate that over 90% of Tor relays have a
preﬁx length shorter than /24. This allows an AS-level
adversary to launch a BGP hijack or interception attack
against these Tor relays by advertising a more speciﬁc
preﬁx for them (globally). We advocate that the Tor re-
lay operators should be running Tor relays with a preﬁx
length of /24. Autonomous systems typically ﬁlter route
advertisements of preﬁx longer than /24, so AS-level ad-
versaries will not be able to launch a more speciﬁc hijack
or interception attack.
Favoring closer guard relays: Even if a Tor relay adver-
tises a /24 preﬁx, an AS-level adversary can launch an
equally speciﬁc preﬁx hijack or interception attack (by
advertising another /24). In this case, the impact of the
attack is localized around the attacker’s autonomous sys-
tem, since the route is not globally propagated. We advo-

cate that Tor clients select their guard relays by favoring
Tor relays with a shorter AS-level path between them.
Tor clients could either obtain AS-level path information
via the Tor network consensus download mechanism, or
they can perform traceroutes themselves. This further
mitigates the risk to Tor clients due to an equally speciﬁc
preﬁx attack. We note that by selecting guard relays that
are closer to the client in the AS topology, the risk of
asymmetric trafﬁc analysis and BGP churn is also miti-
gated. 2
Securing inter-domain routing: The research commu-
nity has proposed multiple protocols for securing inter-
domain routing [41, 32, 19, 29, 17]. Real-world deploy-
ment of these protocols would mitigate the BGP hijack
and interception attacks on Tor. However, this approach
requires buy-in from multiple stakeholders in the com-
plex ecosystem of the Internet, and progress on this front
has been slow. We hope that the concerns we raise about
the compromise of user anonymity in Tor can help accel-
erate the momentum for improving BGP security.

7 Discussion and Ethical Considerations

Colluding adversaries. In this paper, we quantiﬁed the
threat of Raptor attacks from the perspective of indi-
vidual autonomous systems.
In practice, autonomous
systems can collude with each other to increase their
capability of monitoring Tor trafﬁc. For example, au-
tonomous systems within the same legal jurisdiction may
be forced to monitor Tor trafﬁc and share it with a single
entity that may launch Raptor attacks.
Applicability to other anonymity systems. It is impor-
tant to note that our attacks merely consider Tor as an
example of a low-latency anonymity system. Raptor at-
tacks are broadly applicable to other deployed anonymity
systems such as I2P, Freenet and Tribler [47, 21, 50].
Ethical considerations. We introduce and evaluate sev-
eral novel attacks against the Tor network. The Tor net-
work has a userbase of several million users [9], and
these users are especially concerned about the privacy of
their communications. Thus, it is of utmost importance
that our real-world experiments on the Tor network do
not compromise the privacy and safety of Tor users. In
this paper, we take multiple precautions to safeguard the
privacy of Tor users:

• Attack our own trafﬁc. All of our attacks only exper-
iment with trafﬁc that we created ourselves, i.e., we
deanonymize our own trafﬁc. In fact, we do not store
or analyze trafﬁc of any real Tor user.

2We note that if clients select closer guards, then knowledge of the
guards reveals probabilistic information about the clients. We will in-
vestigate this trade-off in future work.

282  24th USENIX Security Symposium 

USENIX Association

12

• Attack our own relay. Similarly, to demonstrate the
threat of preﬁx interception attacks on the live Tor net-
work, we launch interception attacks against relays
that we already control, i.e., we hijack/intercept our
own preﬁx.

• Firewall our Tor relay. We also used network-level
ﬁrewalls to ensure that real Tor users will never use re-
lays that we control: trafﬁc from real users is dropped
by the ﬁrewall. Only authorized trafﬁc that we create
ourselves can bypass the ﬁrewall and use our Tor relay.

8 Related Work

AS-level adversaries: It is well known that an adversary
who can observe users’ communications at both ends
of the segment can deanonymize Tor clients [45, 54].
Feamster and Dingledine were the ﬁrst to consider the at-
tack from the perspective of an AS-level adversary [28].
Later, Edman and Syverson explored the impact of
Tor path selection strategies on the security of the net-
work [26]. Recently, Johnson et al. analyzed the secu-
rity of the Tor network against AS-level adversaries in
terms of user understandable metrics for anonymity [34],
and Akhoondi et al. [13] considered path selection algo-
rithms that minimize opportunities for AS-level end-to-
end trafﬁc analysis. Finally, Murdoch et al. [40] consid-
ered the analogous analysis with respect to Internet ex-
change level adversaries, which are also in a position to
observe a signiﬁcant fraction of Internet trafﬁc.

We build upon these works and introduce Raptor at-
tacks, that leverage routing asymmetry, routing churn,
and routing attacks to compromise user anonymity more
effectively than previously thought possible.

The attack observations in Raptor were brieﬂy dis-
cussed in a preliminary and short workshop paper [48].
In this paper, we go further by measuring the importance
of the attacks using real-world Internet control- and data-
plane data. We also demonstrate the attacks feasibility by
performing them on the live Tor network—with success.
Finally, we also describe efﬁcient countermeasures to re-
store a good level of anonymity.
Trafﬁc analysis of Tor: An important thread of re-
search aims to perform trafﬁc analysis of Tor commu-
nications via side-channel information about Tor relays.
Murdoch et al. [39], Evans et al. [27], and Jansen et
al. [33] have demonstrated attacks that use node con-
gestion and protocol-level details as a side channel to
uncover Tor relays involved in anonymous paths. Fur-
thermore, Mittal et al. [37] and Hopper et al. [30, 31]
proposed the use of network throughput and network la-
tency as a side channel to ﬁngerprint Tor relays involved
in anonymous paths. We note that most of these attacks
provide probabilistic information about Tor relays, and

may not deanonymize the Tor clients. In contrast, Raptor
attacks can completely deanonymize Tor clients.
BGP insecurity: The networking research community
has extensively studied attacks on inter-domain routing
protocols including BGP hijack [51, 52, 53, 44] and in-
terception attacks [16]. Similarly, there has been much
work on proposing secure routing protocols that resist the
above attacks [41, 32, 17, 19, 29]. However, we are the
ﬁrst to study the implications of these attacks on privacy
technologies such as the Tor network. Arnbak et al. [14]
discuss surveillance capabilities of autonomous systems
from a legal perspective, but do not discuss anonymity
systems.

9 Conclusion

Raptor attacks exploit the dynamics of Internet routing
(such as routing asymmetry, routing churn, and routing
attacks) to enable an AS-level adversary to effectively
compromise user anonymity.

Our experimental results show that Raptor attacks
present a serious threat to the security of anonymity sys-
tems. Our key results include (1) demonstration of asym-
metric trafﬁc correlation on the live Tor network, which
achieves 95% accuracy with no observed false positives,
(2) quantifying the impact of routing asymmetry and
routing churn on AS-level attacks – an increase of 50% to
100% respectively compared to conventional attacks, (3)
uncovering historical BGP hijacks involving Tor relays,
and (4) successful demonstration of a trafﬁc analysis at-
tack via BGP interception on the live Tor network. We
also outlined a taxonomy of countermeasures against our
attacks.

Our work highlights the dangers of abstracting net-
work routing from the analysis of anonymity systems
such as Tor, and motivates the design of next generation
anonymity systems that resist Raptor.

10 Acknowledgments

Thanks to Ethan Katz-Bassett for support on setting up
Transit Portal provided by the PEERING project. Thanks
to ATLAS project for donating credits for our experimen-
tal setup. Thanks to Matthew Wright, Nick Feamster,
Nikita Borisov and Roger Dingledine for helpful discus-
sions. This work was supported by the NSF under the
grant CNS-1423139.

References

[1] BGP
proﬁt.

13

hijacking

cryptocurrency
http://www.secureworks.com/

for

USENIX Association  

24th USENIX Security Symposium  283

cyber-threat-intelligence/threats/
bgp-hijacking-for-cryptocurrency-profit/.

[2] Bgpmon:

Hijack by AS4761 Indosat

- a
http://www.bgpmon.net/

quick
hijack-by-as4761-indosat-a-quick-report/.

report.

[3] BGPMon:

Hijack Event Today

In-
http://www.bgpmon.net/

by

dosat.
hijack-event-today-by-indosat/.

[4] CollecTor: Your friendly data-collecting service
https://collector.

in the Tor network.
torproject.org/.

[5] RIPE Atlas. https://atlas.ripe.net/.

[6] RIPE RIS Raw Data. https://www.ripe.net/

data-tools/stats/ris/ris-raw-data.

[7] Routeviews. http://www.routeviews.org/.

[8] Tor metrics portal. https://metrics.torproject.org.

Accessed, February 2015.

[9] Who uses Tor? https://www.torproject.org/
about/torusers.html.en. Accessed, February
2015.

[10] How the NSA attacks Tor/Firefox

with QUANTUM and FOXACID.
//www.schneier.com/blog/archives/2013/
10/how_the_nsa_att.html, Oct. 2013.

users
https:

[11] Peeling back the layers of Tor with Egotis-
http://www.theguardian.

ticalGiraffe.
com/world/interactive/2013/oct/04/
egotistical-giraffe-nsa-tor-document,
Oct. 2013.

[12] Tor

stinks.

http://www.theguardian.

com/world/interactive/2013/oct/04/
tor-stinks-nsa-presentation-document,
Oct. 2013.

[13] AKHOONDI, M., YU, C., AND MADHYASTHA,
H. V. Lastor: A low-latency AS-aware Tor client.
In Proceedings of the 2012 IEEE Symposium on Se-
curity and Privacy (Washington, DC, USA, 2012),
SP ’12, IEEE Computer Society, pp. 476–490.

[14] ARNBAK, A., AND GOLDBERG, S. Loopholes for
circumventing the constitution: Warrantless bulk
surveillance on americans by collecting network
trafﬁc abroad.
In HotPETs (2014). Available at
http://ssrn.com/abstract=2460462.

[15] BALL, J. NSA stores metadata of millions of web
users for up to a year, secret ﬁles show. http://
www.theguardian.com/world/2013/sep/30/
nsa-americans-metadata-year-documents,
Sep. 2013.

[16] BALLANI, H., FRANCIS, P., AND ZHANG, X. A
study of preﬁx hijacking and interception in the In-
ternet. In Proceedings of the 2007 Conference on
Applications, Technologies, Architectures, and Pro-
tocols for Computer Communications (New York,
NY, USA, 2007), SIGCOMM ’07, ACM, pp. 265–
276.

[17] BOLDYREVA, A., AND LYCHEV, R. Provable se-
curity of S-BGP and other path vector protocols:
Model, analysis and extensions. In Proceedings of
the 2012 ACM Conference on Computer and Com-
munications Security (New York, NY, USA, 2012),
CCS ’12, ACM, pp. 541–552.

[18] BRANDOM,

R.
bomb

FBI
threats

tracked
harvard
Tor.
http://www.theverge.com/2013/12/18/5224130/fbi-
agents-tracked-harvard-bomb-threats-across-tor.
Accessed, July 2014.

agents
despite

[19] CHAN, H., DASH, D., PERRIG, A., AND ZHANG,
H. Modeling adoptability of secure BGP proto-
col.
In Proceedings of the 2006 Conference on
Applications, Technologies, Architectures, and Pro-
tocols for Computer Communications (New York,
NY, USA, 2006), SIGCOMM ’06, ACM, pp. 279–
290.

[20] CHUN CHENG, P., ZHAO, X., ZHANG, B., AND
ZHANG, L. Longitudinal Study of BGP Monitor
Session Failures. ACM SIGCOMM Computer Com-
munication Review (CCR) (April 2010).

[21] CLARKE, I., SANDBERG, O., WILEY, B., AND
HONG, T. W. Freenet: A distributed anonymous
information storage and retrieval system.
In In-
ternational Workshop on Designing Privacy En-
hancing Technologies: Design Issues in Anonymity
and Unobservability (New York, NY, USA, 2001),
Springer-Verlag New York, Inc., pp. 46–66.

[22] DANEZIS, G. Mix-networks with restricted routes.
In Privacy Enhancing Technologies, R. Dingledine,
Ed., vol. 2760 of Lecture Notes in Computer Sci-
ence. Springer Berlin Heidelberg, 2003, pp. 1–17.

[23] DANEZIS, G., DINGLEDINE, R., AND MATHEW-
SON, N. Mixminion: Design of a type iii anony-
mous remailer protocol. In Proceedings of the 2003

284  24th USENIX Security Symposium 

USENIX Association

14

IEEE Symposium on Security and Privacy (Wash-
ington, DC, USA, 2003), SP ’03, IEEE Computer
Society, pp. 2–.

[24] DINGLEDINE, R., HOPPER, N., KADIANAKIS,
G., AND MATHEWSON, N. One fast guard for life
(or 9 months). In HotPETs (2014).

[25] DINGLEDINE, R., MATHEWSON, N., AND
SYVERSON, P. Tor: The second-generation onion
router. In Proceedings of the 13th Conference on
USENIX Security Symposium - Volume 13 (Berke-
ley, CA, USA, 2004), SSYM’04, USENIX Associ-
ation.

[26] EDMAN, M., AND SYVERSON, P. AS-awareness
in Tor path selection.
In Proceedings of the 16th
ACM Conference on Computer and Communica-
tions Security (New York, NY, USA, 2009), CCS
’09, ACM, pp. 380–389.

[27] EVANS, N. S., DINGLEDINE, R.,

AND
GROTHOFF, C. A practical congestion attack
on Tor using long paths.
In Proceedings of the
18th Conference on USENIX Security Symposium
(Berkeley, CA, USA, 2009), SSYM’09, USENIX
Association, pp. 33–50.

[28] FEAMSTER, N., AND DINGLEDINE, R. Location
diversity in anonymity networks. In Proceedings of
the 2004 ACM Workshop on Privacy in the Elec-
tronic Society (New York, NY, USA, 2004), WPES
’04, ACM, pp. 66–76.

[29] GILL, P., SCHAPIRA, M., AND GOLDBERG, S.
Let the market drive deployment: A strategy for
transitioning to BGP security.
In Proceedings of
the ACM SIGCOMM 2011 Conference (New York,
NY, USA, 2011), SIGCOMM ’11, ACM, pp. 14–
25.

[30] HOPPER, N., VASSERMAN, E. Y., AND CHAN-
TIN, E. How much anonymity does network la-
tency leak? In Proceedings of the 14th ACM Con-
ference on Computer and Communications Secu-
rity (New York, NY, USA, 2007), CCS ’07, ACM,
pp. 82–91.

[31] HOPPER, N., VASSERMAN, E. Y., AND CHAN-
TIN, E. How much anonymity does network la-
tency leak? ACM Trans. Inf. Syst. Secur. 13, 2 (Mar.
2010), 13:1–13:28.

[32] HU, Y.-C., PERRIG, A., AND SIRBU, M. Spv:
Secure path vector routing for securing BGP.
In
Proceedings of the 2004 Conference on Applica-
tions, Technologies, Architectures, and Protocols

for Computer Communications (New York, NY,
USA, 2004), SIGCOMM ’04, ACM, pp. 179–192.

[33] JANSEN, R., TSCHORSCH, F., JOHNSON, A.,
The sniper attack:
AND SCHEUERMANN, B.
Anonymously deanonymizing and disabling the
Tor network.
In Proceedings of the 21st Annual
Network and Distributed System Security Sympo-
sium (NDSS ’14) (2014), Internet Society.

[34] JOHNSON, A., WACEK, C., JANSEN, R., SHERR,
M., AND SYVERSON, P. Users get routed: Traf-
ﬁc correlation on Tor by realistic adversaries.
In
Proceedings of the 2013 ACM SIGSAC Conference
on Computer and Communications Security (New
York, NY, USA, 2013), CCS ’13, ACM, pp. 337–
348.

[35] JUEN, J. Protecting anonymity in the presence of
autonomous system and Internet exchange level ad-
versaries, 2012. MS Thesis, University of Illinois
at Urbana-Champaign.

[36] MACASKILL,

E.,

to world’s

BORGER,

J.,

AND BALL,

HOP-
KINS, N., DAVIES, N.,
J.
GCHQ taps ﬁbre-optic cables for secret ac-
cess
http:
//www.theguardian.com/uk/2013/jun/21/
gchq-cables-secret-world-communications-nsa,
June 2013.

communications.

[37] MITTAL, P., KHURSHID, A., JUEN, J., CAESAR,
M., AND BORISOV, N. Stealthy trafﬁc analysis
of low-latency anonymous communication using
throughput ﬁngerprinting.
In Proceedings of the
18th ACM Conference on Computer and Communi-
cations Security (New York, NY, USA, 2011), CCS
’11, ACM, pp. 215–226.

[38] M ¨OLLER, U., COTTRELL, L., PALFRADER, P.,
AND SASSAMAN, L. Mixmaster Protocol — Ver-
sion 2. IETF Internet Draft, July 2003.

[39] MURDOCH, S. J., AND DANEZIS, G. Low-cost
trafﬁc analysis of Tor. In Proceedings of the 2005
IEEE Symposium on Security and Privacy (Wash-
ington, DC, USA, 2005), SP ’05, IEEE Computer
Society, pp. 183–195.

[40] MURDOCH, S. J., AND ZIELI ´NSKI, P.

Sam-
pled trafﬁc analysis by Internet-exchange-level ad-
versaries.
the 7th Interna-
tional Conference on Privacy Enhancing Technolo-
gies (Berlin, Heidelberg, 2007), PET’07, Springer-
Verlag, pp. 167–183.

In Proceedings of

USENIX Association  

24th USENIX Security Symposium  285

15

[41] OORSCHOT, P. V., WAN, T., AND KRANAKIS, E.
On interdomain routing security and pretty secure
BGP (psBGP). ACM Trans. Inf. Syst. Secur. 10, 3
(July 2007).

[50] ZEILEMAKER, N., AND POUWELSE, J. Open
source column: Tribler: P2P search, share and
stream. SIGMultimedia Rec. 4, 1 (Mar. 2012), 20–
24.

[42] OVERLIER, L., AND SYVERSON, P. Locating hid-
In Security and Privacy, 2006 IEEE

den servers.
Symposium on (May 2006), pp. 100–114.

[43] SCHLINKER, B., ZARIFIS, K., CUNHA, I., FEAM-
STER, N., AND KATZ-BASSETT, E. PEERING:
An AS for us.
In Proceedings of the 13th ACM
Workshop on Hot Topics in Networks (New York,
NY, USA, 2014), HotNets-XIII, ACM, pp. 18:1–
18:7.

[44] SHI, X., XIANG, Y., WANG, Z., YIN, X., AND
WU, J. Detecting preﬁx hijackings in the Internet
with Argus. In Proceedings of the 2012 ACM Con-
ference on Internet Measurement Conference (New
York, NY, USA, 2012), IMC ’12, ACM, pp. 15–28.

[45] SHMATIKOV, V., AND WANG, M.-H. Timing anal-
ysis in low-latency mix networks: Attacks and de-
fenses. In Proceedings of the 11th European Con-
ference on Research in Computer Security (Berlin,
Heidelberg, 2006), ESORICS’06, Springer-Verlag,
pp. 18–33.

[46] SYVERSON, P., TSUDIK, G., REED, M., AND
LANDWEHR, C. Towards an analysis of onion rout-
ing security. In International Workshop on Design-
ing Privacy Enhancing Technologies: Design Is-
sues in Anonymity and Unobservability (New York,
NY, USA, 2001), Springer-Verlag New York, Inc.,
pp. 96–114.

[47] TIMPANARO, J. P., CHRISMENT, I., AND FES-
TOR, O. A bird’s eye view on the I2P anonymous
ﬁle-sharing environment.
In Proceedings of the
6th International Conference on Network and Sys-
tem Security (Berlin, Heidelberg, 2012), NSS’12,
Springer-Verlag, pp. 135–148.

[48] VANBEVER, L., LI, O., REXFORD, J., AND MIT-
TAL, P. Anonymity on quicksand: Using BGP to
compromise Tor. In Proceedings of the 13th ACM
Workshop on Hot Topics in Networks (New York,
NY, USA, 2014), HotNets-XIII, ACM, pp. 14:1–
14:7.

[49] WRIGHT, M., ADLER, M., LEVINE, B. N., AND
SHIELDS, C. Defending anonymous communica-
tions against passive logging attacks. In Proceed-
ings of the 2003 IEEE Symposium on Security and
Privacy (Washington, DC, USA, 2003), SP ’03,
IEEE Computer Society.

[51] ZHANG, Z., ZHANG, Y., HU, Y. C., AND MAO,
Z. M. Practical defenses against BGP preﬁx hi-
jacking. In Proceedings of the 2007 ACM CoNEXT
Conference (New York, NY, USA, 2007), CoNEXT
’07, ACM.

[52] ZHANG, Z., ZHANG, Y., HU, Y. C., MAO, Z. M.,
AND BUSH, R. iSPY: Detecting IP preﬁx hijacking
on my own. IEEE/ACM Trans. Netw. 18, 6 (Dec.
2010), 1815–1828.

[53] ZHENG, C., JI, L., PEI, D., WANG, J., AND
FRANCIS, P. A light-weight distributed scheme
for detecting IP preﬁx hijacks in real-time.
In
Proceedings of the 2007 Conference on Applica-
tions, Technologies, Architectures, and Protocols
for Computer Communications (New York, NY,
USA, 2007), SIGCOMM ’07, ACM, pp. 277–288.

[54] ZHU, Y., FU, X., GRAHAM, B., BETTATI, R.,
AND ZHAO, W. On ﬂow correlation attacks and
countermeasures in mix networks. In Proceedings
of the 4th International Conference on Privacy En-
hancing Technologies (Berlin, Heidelberg, 2005),
PET’04, Springer-Verlag, pp. 207–225.

A Appendix: Rejected Countermeasures

Obfuscating packet timings and sizes: While the use
of high latency mix networks [38, 23] and constant
rate cover trafﬁc [22] can mitigate timing analysis even
against an adversary that observes all communications,
these defenses are considered too costly to be deployed
in the Tor network.
Mitigating asymmetric attacks: Recall that our asym-
metric correlation attack leverages information in the
TCP header, namely the sequence number ﬁeld that in-
dicates the number of acknowledged bytes. One poten-
tial countermeasure would be to encrypt the TCP header,
by leveraging IP-layer encryption techniques such as IP-
Sec. However, this approach introduces several chal-
lenges. First, it would require a substantial engineer-
ing effort to migrate Tor towards IPSEC. Second, since
IPSEC is not widely used, this would make Tor trafﬁc
easy to distinguish from other encrypted trafﬁc, thwart-
ing its use for applications such as censorship resistance.
Finally, encrypting the TCP header may not complete
solve the attack. For example, an adversary could at-
tempt to correlate TCP data packets with simply the
number of TCP ACK packets, disregarding the sequence
number ﬁeld.

286  24th USENIX Security Symposium 

USENIX Association

16

