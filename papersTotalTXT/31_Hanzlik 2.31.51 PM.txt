A Short Paper on

Blind Signatures from Knowledge Assumptions

Lucjan Hanzlik, Kamil Kluczniak

Faculty of Fundamental Problems of Technology,

Wroc(cid:32)law University of Technology

{firstname.secondname}@pwr.edu.pl

Abstract. This paper concerns blind signature schemes. We focus on
two moves constructions, which imply concurrent security. There are
known eﬃcient blind signature schemes based on the random oracle
model and on the common reference string model. However, construct-
ing two move blind signatures in the standard model is a challenging
task, as shown by the impossibility results of Fischlin et al. The recent
construction by Garg et al. (Eurocrypt’14) bypasses this result by us-
ing complexity leveraging, but it is impractical due to the signature size
(≈ 100 kB). Fuchsbauer et al. (Crypto’15) presented a more practical
construction, but with a security argument based on interactive assump-
tions. We present a blind signature scheme that is two-move, setup-free
and comparable in terms of eﬃciency with the results of Fuchsbauer et
al. Its security is based on a knowledge assumption.

Keywords: blind signature, Okamoto-Uchiyama cryptosystem, knowl-
edge assumption

1

Introduction

A blind signature scheme is a cryptographic primitive that allows a user to
receive a signature under a message in such a way, that the signer does not learn
anything about the signed message (blindness). In addition, if the user receives
a number of signatures, he should not be able to create a signature under a
diﬀerent message (unforgeability).

The idea of blind signatures was ﬁrst introduced by David Chaum in the
paper [6]. He used blind signatures for protecting privacy of users in his e-cash
system. Thanks to blind signatures the bank cannot trace the usage of a signed e-
cash as the structure of a note is not known. From this point on, blind signatures
have been used as building blocks in numerous cryptographic schemes, e.g. in
e-voting and anonymous credential systems.

Solutions that are provably secure in the random oracle model are frequently
accepted by researchers and the industry, and are of great value due to their
eﬃciency. However, the random oracle model does not always yield a secure
real world instantiation. In order to bypass the random oracle model, authors
in [7,11,12] used the common reference string model in their constructions of

blind signatures. This model requires that the users perform a setup phase in
which they receive the common reference string (CRS) that must be computed
by a trusted third party in order to be useful and to ensure the security of the
scheme.

Fischlin et al. in [8] has shown a negative result on the existence of three-
move blind signature schemes with a black-box reduction in the standard model.
Surprisingly, recent results [10,11] present constructions which circumvent the
limitation from [8]. To be more speciﬁc, the authors present two-move blind
signature schemes which are provably secure without ROM or CRS, however use
a non-block-box technique called complexity leveraging. Both solutions are not
really practical with signature size of hundreds of kB. A more practical solution
was proposed by Fuchsbauer et al. in [9] at CRYPTO’15. The signature size of
their construction is not greater than 1kB. The security of the scheme is based
on interactive assumptions. However, the interactive assumption is required so
that blindness holds in the stronger malicious-signer model (where the signer’s
public key can be choosen in a malicious way). Blindness in the weaker honest-
signer model (where the signer’s public key is honestly generated), holds under
the standard Decisional Diﬃe-Hellman assumption.

Our Contribution. We propose a diﬀerent approach to bypass the impossibil-
ity results from [8]. We combine the partially homomorphic Okamoto-Uchiyama
cryptosystem, Pedersen commitments and BB signatures in order to get an eﬃ-
cient two-move, setup-free blind signature scheme.

Blindness of our solution is based on the semantic security of the encryption
scheme and unforgeability follows from the knowledge of factor assumption [1].
Under this assumption the Okamoto-Uchiyama cryptosystem is secret key aware.
Note that this strong extraction assumption implies non-black-box reductions.
Blindness of our scheme holds in the weaker honest-signer model. The proposed
construction is comparable, in terms of signature size and communication size,
with the one from [9]. However, since the security of our scheme is based on a
diﬀerent type of assumption, we feel that it is an interesting alternative.

2 Preliminaries
Deﬁnition 1 (Bilinear Groups). Let us consider cyclic groups (G1, +), (G2, +),
(GT ,·) of prime order q. Let P1, P2 be generators of respectively G1 and G2. A
mapping e : G1 × G2 → GT is called a bilinear map (pairing), if it is eﬃciently
computable and the following conditions hold:
bilinearity: ∀(S, T ) ∈ G1 × G2, ∀a, b ∈ Zq, we have e(aS, bT ) = e(S, T )a·b,
non-degeneracy: e(P1, P2) (cid:54)= 1 is a generator of group GT .

Deﬁnition 2 (Bilinear-group generator). A bilinear-group generator is a
polynomial-time algorithm BGGen that on input a security parameter λ returns
a bilinear group BG = (q, G1, G2, GT , e, P1, P2) such that G1 = (cid:104)P1(cid:105), G2 = (cid:104)P2(cid:105)
and GT are groups of order q with log2 q = λ and e : G1 ×G2 → GT is a bilinear

map. Similar to the authors of [9], we assume that BGGen is deterministic (which
is the case for BN-curves [2]).

2.1 Okamoto-Uchiyama Cryptosystem

In our construction we use the Okamoto-Uchiyama cryptosystem [13].
Key Generation: Choose two large primes p, q (|p| = |q| = k), and let n = p2q.
Choose g ∈ Z∗
n randomly such that the order of gp = gp−1 mod p2 is p. Let
h = gn mod n. The public key is the tuple pkEnc = (n, g, h). The secret key
is the tuple skEnc = (p, q).
Encryption: Let m ∈ Zp be a plaintext. Select r ←$ Zn and output C = gmhr
mod n. We will simply use Enc(m) to denote a ciphertext of message m, and
Enc(m, r) to additionally identify the randomness r used.

Decryption: Compute Cp = C p−1 mod p2, output message m = L(Cp)

L(gp) mod p,

where L(x) = x−1
p .

Okamoto-Uchiyama cryptosystem is semantically secure. In other words,
indistinguishability under chosen plaintext attack (IND-CPA) holds for this
scheme. It is partially homomorphic:

Enc(m1, r1) · Enc(m2, r2)m3 mod n = Enc(m1 + m2 · m3, r1 + r2 · m3).

Barbosa and Farshim [1] introduced a so- called knowledge of factor assump-
tion. It is similar to the well-known knowledge of exponent assumptions [3].
However, it states that one can output an integer of the form n = p2 · q only
if one knowns the primes p and q. It was shown by Barbosa and Farshim that
under the knowledge of factor assumption the Okamoto-Uchiyama cryptosystem
is secret-key-aware, i.e. it is possible to extract the secret key from an adversary
that has generated the public key for such a cryptosystem.

2.2 BB Signatures

We now recall the short signature scheme proposed by Boneh and Boyen [4].
Their signature scheme consists of the following PPT algorithms:
KeyGenBB(1λ): Select random generators P1 ∈ G1 and P2 ∈ G2, random integers
p. Compute u = [x]P2 and v = [y]P2. The public key is the tuple
SignBB(m, skBB): given the secret key skBB = (P1, x, y) and a message m ∈ Zp,
m+x+yr ]P1. Then σ =

x, y ∈ Z∗
pkBB = (P1, P2, u, v). The secret key is the triple skBB = (P1, x, y).
pick r ∈ Zp\{− x+m
(s, r) is a signature of m.
VerifyBB(m, σ, pkBB): given the public key pkBB = (P1, P2, u, v), a message m,
and a signature σ = (s, r), check whether e(s, u · [m]P2 · [r]v) = e(P1, P2). If
the equality holds, then output 1 and 0 otherwise.

y } at random and compute s = [

1

Under the q-SDH assumption the above signature scheme is secure against

strong existential forgery and an adaptive chosen message attack.

2.3 Pedersen Commitments

In contrary to the standard approach, where commitments are elements of
groups, we require that the commitments are elements of a subset of Zq. In
particular, one can easily transform Pedersen commitments deﬁned over elliptic
curves to have this property. Below we give a formal deﬁnition of this commit-
ment scheme.
Deﬁnition 3 (Pedersen Commitment with Commitments in Zq). Ped-
ersen commitments consist of the following algorithms:

SetupP(1λ, q):

Compute, using the security parameter 1λ, an ordinary elliptic curve
G = E(Fp) (where p < q) of a prime order qP. Let P be the generator
of G. Choose z ←$ Zq, compute Q = [z]P and output the commitment key
cpp = (G, P, Q, qP) (which is an implicit parameter to the below algorithms).
On input a message m ∈ ZqP and randomness r ∈ ZqP , compute Co =
(Cox, Coy) = [m]P + [r]Q, output commitment Cox and opening O = r.
On input a commitment Cox ∈ Fp, message m and opening O, compute
(Co∗

y) = [m]P + [r]Q and if Cox = Co∗

x output m, else output ⊥.

CommitP(m, r):

OpenP(Cox, m, O):

x, Co∗

This modiﬁed Pedersen commitment scheme is still perfectly hiding and com-
putationally binding under the DLP assumption in G. Note that it may happen
that an adversary breaks the binding property by returning (m0, r0) and (m1, r1)
such that (Cox, Coy) = [m0]P + [r0]Q and (Cox,−Coy) = [m1]P + [r1]Q. How-
ever, in such a case we can still compute the DLP of Q to base P because
m0 + z · r0 = −(m1 + z · r1), which yields z = −(m0 + m1)/(r0 + r1).

3 Blind Signatures

In this section we recall the syntax and security of blind signature schemes.

Deﬁnition 4. A blind signature scheme consists of the following PPT algo-
rithms BS = (KeyGenBS,UBS,SBS, VerifyBS) deﬁned as follows:

KeyGenBS(1λ): on input a security parameter, this algorithm outputs a pair of
public/secret key (pkBS, skBS) of the signer.
(cid:104)UBS(m, pkBS),SBS(skBS)(cid:105): are executed by a user and a signer. On input the
signer’s secret key skBS algorithm SBS interacts with algorithm UBS. On in-
put a message m, from message space M, and the signer public key pkBS,
algorithm UBS outputs a signature σ on m, or ⊥, if the interaction was not
successful.

VerifyBS(m, σ, pkBS): on input a message m, signature σ and the signer’s public
key pkBS, this algorithm outputs 1, if σ is a valid signature and 0 otherwise.

Correctness. A blind signature scheme BS is correct, if for all λ ∈ N, all (pkBS,
skBS) ← KeyGenBS(1λ), all messages m ∈ M and σ ← (cid:104)UBS(m, pkBS),SBS(skBS)(cid:105)
it holds that VerifyBS(m, σ, pkBS) = 1.

Unforgeability. A blind signature scheme BS is strongly unforgeable, if for all
PPT algorithms A having access to a signer oracle, we have:

(cid:104)

Pr

(pkBS, skBS) ← KeyGenBS(1λ), (m∗
(m∗
VerifyBS(m∗

i , pkBS) = 1 for i ∈ {1, . . . , k + 1}(cid:105) ≤ (λ),

for i, j ∈ {1, . . . , k + 1}, i (cid:54)= j

i ) (cid:54)= (m∗
i , σ∗

j , σ∗
j )

i , σ∗

i=1 ← A(pkBS)(cid:104)· ,SBS(skBS)(cid:105) :
i )k+1

i , σ∗

and

where k is the number of oracle queries.

Pr

(cid:104)

Blindness. A blind signature scheme BS is blind in the honest-signer model, if
for all PPT algorithms A with one-time access to two user oracles, we have:
b ←$ {0, 1}, (pkBS, skBS) ← KeyGenBS(1λ), (St1, m0, m1) ← A(pkBS, skBS),
(St2) ← A(St1)(cid:104)UBS(mb,pkBS), ·(cid:105)(1),(cid:104)UBS(m1−b,pkBS), ·(cid:105)(1)
Let σb and σ1−b be the resp. outputs of UBS,
If σ0 = ⊥ or σ1 = ⊥ then (σ0, σ1) = (⊥,⊥),

,

b∗ ← A(St2, σ0, σ1) : b = b∗(cid:105) − 1

2 ≤ (λ).

4 Construction

The core idea of our construction is to use the partially homomorphic properties
of the Okamoto-Uchiyama cryptosystem to perform certain parts of the signing
algorithm of BB signatures. However, for correctness the message space of the
encryption scheme must be large, so that the computations are performed in
Z. To ensure blindness the signed value is not the actual message m, but a
perfectly-hiding commitment (Deﬁnition 3) to m. Thus, the message space of
the scheme is the same as for the commitment scheme, i.e. M = ZqP . Finally,
the signed commitment and the opening information are given as part of the
blind signature. The details of our construction are given in Scheme 1.

Theorem 1 (Correctness). Scheme 1 is correct.

Proof. Let m be the message requested by the user, Co the commitment to it and
pkEnc = (n, gn, hn) the public key of the Okamoto-Uchiyama cryptosystem. In
order to answer the request of the user, the signer chooses random b, rS ←$ Zq and
uses the homomorphic property of the cryptosystem to compute the ciphertext
r · Enc((x + (rS · y)) mod q))b mod n. The ciphertext cσ, rS and
cσ = (cm · cy
[b]P1 are send to the user. The user deciphers cσ and receives: t = b · (Co +
rS · y + ((x + (rS · y)) mod q)) mod pn. However, since the Okamoto-Uchiyama

BG

group

bilinear

parameters

KeyGenBS(1λ): Generate

=
(q, G1, G2, GT , e, Q1, Q2) ← BGGen(1λ) and the
commitment key
cpp = (G, P, Q, qP) ← SetupP(1λ, q). Use parameters BG to compute
random elements P1 ←$ G1, P2 ←$ G2, x ←$ Zq y ←$ Zq, the secret key
skBB = (P1, x, y) and the public key pkBB = (P1, P2, u = [x]P2, v = [y]P2) for
the BB signature scheme. Return pkBS = (1λ, cpp, pkBB) and skBS = (skBB).
BS (m, pkBS): generate the parameters BG ← BGGen(1λ). Compute the com-
U (1)
mitment (Co, oCo) = CommitP(m, rCo) for a random rCo ∈ ZqP . Generate
the Okamoto-Uchiyama cryptosystem with public key pkEnc = (n, gn, hn)
and secret key skEnc = (pn, qn) (where pn > 3 · q2). Compute cm = Enc(Co),
choose random rU ←$ Zq and compute cr = Enc(rU ). Set ρ = (pkEnc, cm, cr)
and StBS = (ρ, (Co, oCo, rU ), skEnc). Send ρ to the signer.

SBS(ρ, skBS): Compute b ←$ Zq, cσ = (cm · cy

r · Enc((x + (rS · y)) mod q))b

mod n, for random rS ←$ Zq and send β = (cσ, rS, [b]P1) to the user.

U (2)
BS (β, StBS, pkBS): Decrypt ciphertext cσ receiving integer t = b · (Co +
(so
Co+x+(rS +rU )·y ]P1), r = rS + rU and set σBB = (s, r). Return ⊥

rS · y + ((x + (rS · y)) mod q)), compute s = ([t−1]([b]P1)
s = [
if VerifyBB(Co, σBB, pkBB) = 0 ; otherwise return σ = (Co, oCo, σBB).

1

VerifyBS(m, σ, pkBS): return 1 iﬀ VerifyBB(Co, σBB, pkBB) = 1 and m =

OpenP(Co, m, oCo).

Scheme 1: Our Blind Signature Scheme

cryptosystem was generated in such a way that pn > 3 · q2, we have that t =
b·(Co+rS·y+((x+(rS·y)) mod q)) over Z and t = b·(Co+rS·y+((x+(rS·y)) in
Zq. Thus, by computing ([t−1]([b]P1), the user receives s = [
Co+x+(rS +rU )·y ]P1).
It follows, that σBB = (s, r) (where r = rS +rU ) is a valid BB signature on Co and
VerifyBB(Co, σBB, pkBB) = 1. It remains to show that m = OpenP(Co, m, oCo) but
this follows from the correctness of Pedersen commitments.

1

Theorem 2 (Unforgeability). If BB signatures are secure against strong exis-
tential forgery under an adaptive chosen message attack, Pedersen commitments
from Deﬁnition 3 are computationally binding and the knowledge of factor as-
sumption holds, then Scheme 1 is strongly unforgeable.
Proof (Sketch). Let A be a PPT adversary that breaks the strong unforgeabil-
ity of Scheme 1. We now show that we can construct a reduction R that, us-
ing A as a procedure, either breaks the strong existential unforgeability of the
BB signature scheme or computational binding of the Pedersen commitment
scheme. To break strong unforgeability the adversary A will return k + 1 pairs
(m∗
i=1 , where k is the number of queries made

i=1 = (m∗
i )k+1

i , (Co∗

BB,i))k+1

i , σ∗

i , o∗

, σ∗

Coi

to the signing oracle. We now distinguish two cases leading to two diﬀerent
strategies followed by R and a diﬀerent target of the attack:
Case 1: all commitments Co∗
Case 2: there exist i, j ∈ {1, . . . , k + 1}, i (cid:54)= j for which Co∗

k+1 are distinct,

1, . . . , Co∗

i = Co∗
j .

In the ﬁrst option R aims to break the unforgeability of the BB signature
scheme hoping that all commitments created by A will be diﬀerent (if it turns to
be false, then the attack fails). R interacts with A simulating the environment
for the blind signature scheme; at the same time R uses a BB signing oracle.
First, R computes the commitment key cpp ← SetupP(1λ, q) but uses the public
key pkBB = (P1, P2, u = [x]P2, v = [y]P2) from the unforgeability game. It
outputs pkBS = (1λ, cpp, pkBB) as its public key for the blind signature scheme.
To perfectly simulate the signing queries for this public key, R extracts Co and
rU from the queries of A. Note that under the knowledge of factor assumption R
can extract the secret key and decrypt those values from cm and cr, respectively.
Then R queries Co to its signing oracle, receiving a BB signature (s, r) on
Co+x+r·y ]P1. The reduction computes rS = r − rU , chooses
Co, where s = [
t ←$ Z3·q2, computes s(cid:48) = [t]s and cσ = Enc(t). R answers the query by returning
(cσ, rS, s(cid:48)). Note that A will receive a valid signature under Co. Finally, R returns
i , σ∗
(Co∗
i=1 and breaks the strong existential unforgeability of BB signatures.
On the other hand, in order to perform an attack in Case 2, R breaks the
binding property of the Pedersen commitment scheme. The reduction uses the
commitment key cpp = (G, P, Q, qP) from the binding game but computes the
BB signature public key pkBB according to the protocol. Note that this time
the signing key is known to R and all signing queries of A can be answered
according to the protocol. However, at the end A outputs the above k + 1 pairs.
If Case 2 occurs, then there exist i, j ∈ {1, . . . , k +1}, i (cid:54)= j for which Co∗
i = Co∗
j .
) the reduction R breaks the
It follows, that by returning (m∗
computational binding of the Pedersen commitment scheme.

BB,i)k+1

), (m∗

j , o∗

1

i , o∗

Coi

Coj

Theorem 3 (Blindness). If the Okamoto-Uchiyama cryptosystem is indistin-
guishable under chosen plaintext attack and the Pedersen commitment is perfectly-
hiding, then Scheme 1 is blind in the honest-signer model.

Proof (Sketch). We commence with the observation that if the adversary re-
ceives (⊥,⊥), then due to perfect hiding property of Pedersen commitments the
adversaries advantage in the blindness experiment is 0. To have a non-negligible
advantage, the adversary must receive valid signatures (σ0, σ1). Thus, we assume
that the adversary always receives valid signatures in the blindness experiment.
We will show that advantage of adversary A in winning the blindness experiment
cannot be greater than the advantage of any adversary against CPA security of
the Okamoto-Uchiyama cryptosystem. The idea is that we construct a reduc-
tion R that plays the semantic security experiment and wins it with the same
probability as A wins the blindness experiment. The steps of R are the follow-
ing. First, it returns the bits 0 and 1 as the messages to be encrypted in the
CPA experiment. As a result, R receives the public key pkEnc = (n, gn, hn)

and a ciphertext Cb = Enc(b), for an unknown bit b. The adversary A re-
turns m0, m1. Using those values, the reduction computes two commitments
(Co0, oCo0) = CommitP(m0, rCo0 ), (Co1, oCo1) = CommitP(m1, rCo1 ) and two ci-
phertexts: C0 = Enc(Co0 · (1− b) + Co1 · b) and C1 = Enc(Co0 · b + Co1 · (1− b)).
Note that using the partially homomorphic property of the cryptosystem, R can
compute both values. Now depending on the bit b we have C0 = Enc(Co0), C1 =
Enc(Co1) if b = 0 and C0 = Enc(Co1), C1 = Enc(Co0) if b = 1. The reduction
then uses C0 as a ciphertext of the message cm in the ﬁrst and C1 in the sec-
ond interaction. However, instead of using the values ρ0 and ρ1 returned by A,
the reduction computes the signatures (on Co0 and Co1) itself as it knows the
signing key. Finally, R returns the bit outputted by A.

Remark 1. Note that if we would sign the actual message m, instead of a com-
mitment to it, then there exists an adversary that can win the blindness game
with non-negligible advantage. The adversary guesses the correct bit b and com-
putes (β0, β1) in such a way that procedure U (2)
BS aborts (with the adversary
receiving (⊥,⊥)) if the b is guessed wrong and returns a valid signature if bit b
was correct. Due to space reasons we omit the details of this oracle attack and
describe it in more detail in the full version of this article.

On the other hand, Scheme 1 prevents such an attack using perfectly-hiding
commitments. In particular, if the adversary does not receive the openings to
the commitments, then its advantage cannot be greater then 0 (as both events
are equally probable). This idea is used in the ﬁrst paragraph of the sketch of
the proof. Note that this idea also applies in case of blindness with selective-
failure attacks [5], where the adversary is given (,⊥) (or (⊥, )) in case one of
the execution succeeded and the second one failed.

Conclusions

We have proposed a fairly practical two-move blind signature without random
oracles and a common reference string. It is eﬃcient in terms of signature size
and communication complexity. For a future work we plan to extend blindness to
the malicious-signer model, where the adversary generates the signing key. One
promising approach is to use the knowledge of exponent assumption to extract
the signer’s secret key as it only consists of one public value P1 and two discrete
logarithms of the public values X and Y to the base P2. Moreover, we plan
to extend our construction to partially blind signatures, where the signer and
the user share some information (e.g. expiration date of the document) and this
information is included in the signature.

Acknowledgments. We would like to thank prof. Miros(cid:32)law Kuty(cid:32)lowski and
the FC’s anonymous reviewers for their valuable comments on this short paper.
This research was supported by the National Science Centre (Poland) based on
decision no 2014/15/N/ST6/04577.

References

1. Barbosa, M., Farshim, P.: Strong Knowledge Extractors for Public-Key Encryption
Schemes. In: Steinfeld, R., Hawkes, P. (eds.) ACISP. Lecture Notes in Computer
Science, vol. 6168, pp. 164–181. Springer (2010), http://dblp.uni-trier.de/db/
conf/acisp/acisp2010.html#BarbosaF10a

2. Barreto, P.S.L.M., Naehrig, M.: Pairing-Friendly Elliptic Curves of Prime Or-
der. In: Preneel, B., Tavares, S.E. (eds.) Selected Areas in Cryptography. Lec-
ture Notes in Computer Science, vol. 3897, pp. 319–331. Springer (2005), http:
//dblp.uni-trier.de/db/conf/sacrypt/sacrypt2005.html#BarretoN05

3. Bellare, M., Palacio, A.: The Knowledge-of-Exponent Assumptions and 3-Round
Zero-Knowledge Protocols. In: Advances in Cryptology - CRYPTO 2004, Santa
Barbara, California, USA, August 15-19, 2004, Proceedings. Lecture Notes in Com-
puter Science, vol. 3152, pp. 273–289. Springer (2004), http://www.iacr.org/
cryptodb/archive/2004/CRYPTO/961/961.pdf

4. Boneh, D., Boyen, X.: Short Signatures Without Random Oracles and the SDH
Assumption in Bilinear Groups. J. Cryptology 21(2), 149–177 (2008), http://
dblp.uni-trier.de/db/journals/joc/joc21.html#BonehB08

5. Camenisch, J., Neven, G., shelat, a.: Simulatable adaptive oblivious transfer. In:
Naor, M. (ed.) Advances in Cryptology - EUROCRYPT 2007, Lecture Notes in
Computer Science, vol. 4515, pp. 573–590. Springer Berlin Heidelberg (2007), http:
//dx.doi.org/10.1007/978-3-540-72540-4_33

6. Chaum, D.: Blind Signatures for Untraceable Payments. In: Advances in Cryptol-

ogy: Proceedings of CRYPTO ’82. pp. 199–203. Plenum (1982)

7. Fischlin, M.: Round-Optimal Composable Blind Signatures in the Common Refer-
ence String Model. In: Dwork, C. (ed.) Advances in Cryptology - CRYPTO 2006,
Lecture Notes in Computer Science, vol. 4117, pp. 60–77. Springer Berlin Heidel-
berg (2006), http://dx.doi.org/10.1007/11818175_4

8. Fischlin, M., Schrder, D.: On the Impossibility of Three-Move Blind Signature
Schemes. In: Gilbert, H. (ed.) Advances in Cryptology EUROCRYPT 2010, Lec-
ture Notes in Computer Science, vol. 6110, pp. 197–215. Springer Berlin Heidelberg
(2010), http://dx.doi.org/10.1007/978-3-642-13190-5_10

9. Fuchsbauer, G., Hanser, C., Slamanig, D.: Practical Round-Optimal Blind Signa-
tures in the Standard Model. Cryptology ePrint Archive, Report 2015/626 (2015),
http://eprint.iacr.org/

10. Garg, S., Gupta, D.: Eﬃcient Round Optimal Blind Signatures. In: Nguyen, P.,
Oswald, E. (eds.) Advances in Cryptology EUROCRYPT 2014, Lecture Notes
in Computer Science, vol. 8441, pp. 477–495. Springer Berlin Heidelberg (2014),
http://dx.doi.org/10.1007/978-3-642-55220-5_27

11. Garg, S., Rao, V., Sahai, A., Schrder, D., Unruh, D.: Round Optimal Blind Sig-
natures. In: Rogaway, P. (ed.) Advances in Cryptology CRYPTO 2011, Lecture
Notes in Computer Science, vol. 6841, pp. 630–648. Springer Berlin Heidelberg
(2011), http://dx.doi.org/10.1007/978-3-642-22792-9_36

12. Meiklejohn, S., Shacham, H., Freeman, D.: Limitations on Transformations from
Composite-Order to Prime-Order Groups: The Case of Round-Optimal Blind Sig-
natures. In: Abe, M. (ed.) Advances in Cryptology - ASIACRYPT 2010, Lecture
Notes in Computer Science, vol. 6477, pp. 519–538. Springer Berlin Heidelberg
(2010), http://dx.doi.org/10.1007/978-3-642-17373-8_30

13. Okamoto, T., Uchiyama, S.: A new public-key cryptosystem as secure as factoring.

In: Eurocrypt ’98, LNCS 1403. pp. 308–318. Springer-Verlag (1998)

