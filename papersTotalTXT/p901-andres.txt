Geo-Indistinguishability: Differential Privacy for

Location-Based Systems

Miguel E. Andrés
École Polytechnique

mandres@lix.polytechnique.fr
Konstantinos Chatzikokolakis
CNRS and École Polytechnique
kostas@lix.polytechnique.fr

Nicolás E. Bordenabe

INRIA and École Polytechnique

nbordenabe@lix.polytechnique.fr

Catuscia Palamidessi

INRIA and École Polytechnique
catuscia@lix.polytechnique.fr

ABSTRACT
The growing popularity of location-based systems, allowing un-
known/untrusted servers to easily collect huge amounts of informa-
tion regarding users’ location, has recently started raising serious
privacy concerns. In this paper we introduce geo-indistinguisha-
bility, a formal notion of privacy for location-based systems that
protects the user’s exact location, while allowing approximate in-
formation – typically needed to obtain a certain desired service – to
be released.

This privacy deﬁnition formalizes the intuitive notion of protect-
ing the user’s location within a radius r with a level of privacy that
depends on r, and corresponds to a generalized version of the well-
known concept of differential privacy. Furthermore, we present a
mechanism for achieving geo-indistinguishability by adding con-
trolled random noise to the user’s location.

We describe how to use our mechanism to enhance LBS appli-
cations with geo-indistinguishability guarantees without compro-
mising the quality of the application results. Finally, we compare
state-of-the-art mechanisms from the literature with ours. It turns
out that, among all mechanisms independent of the prior, our mech-
anism offers the best privacy guarantees.

Categories and Subject Descriptors
C.2.0 [Computer–Communication Networks]: General—Secu-
rity and protection; K.4.1 [Computers and Society]: Public Policy
Issues—Privacy

Keywords
Location-based services; Location privacy; Location obfuscation;
Differential privacy; Planar Laplace distribution

1.

INTRODUCTION

In recent years, the increasing availability of location informa-
tion about individuals has led to a growing use of systems that

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than the
authors must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
CCS’13, November 4–8, 2013, Berlin, Germany.
Copyright is held by the owner/author(s). Publication rights licensed to ACM.
ACM 978-1-4503-2477-9/13/11 ...$15.00.
http://dx.doi.org/10.1145/2508859.2516735.

record and process location data, generally referred to as “location-
based systems”. Such systems include (a) Location Based Services
(LBSs), in which a user obtains, typically in real-time, a service
related to his current location, and (b) location-data mining algo-
rithms, used to determine points of interest and trafﬁc patterns.

The use of LBSs, in particular, has been signiﬁcantly increased
by the growing popularity of mobile devices equipped with GPS
chips, in combination with the increasing availability of wireless
data connections. A resent study in the US shows that in 2012,
46% of the adult population of the country owns a smartphone and,
furthermore, that 74% of those owners use LBSs [1]. Examples
of LBSs include mapping applications (e.g., Google Maps), Points
of Interest (POI) retrieval (e.g., AroundMe), coupon/discount pro-
viders (e.g., GroupOn), GPS navigation (e.g., TomTom), and loca-
tion-aware social networks (e.g., Foursquare).

While location-based systems have demonstrated to provide enor-
mous beneﬁts to individuals and society, the growing exposure of
users’ location information raises important privacy issues. First of
all, location information itself may be considered as sensitive. Fur-
thermore, it can be easily linked to a variety of other information
that an individual usually wishes to protect: by collecting and pro-
cessing accurate location data on a regular basis, it is possible to
infer an individual’s home or work location, sexual preferences,
political views, religious inclinations, etc.
In its extreme form,
monitoring and control of an individual’s location has been even
described as a form of slavery [12].

Several notions of privacy for location-based systems have been
proposed in the literature.
In Section 2 we give an overview of
such notions, and we discuss their shortcomings in relation to our
motivating LBS application. Aiming at addressing these shortcom-
ings, we propose a formal privacy deﬁnition for LBSs, as well as
a randomized technique that allows a user to disclose enough loca-
tion information to obtain the desired service, while satisfying the
aforementioned privacy notion. Our proposal is based on a gen-
eralization of differential privacy [14] developed in [8]. Like dif-
ferential privacy, our notion and technique abstract from the side
information of the adversary, such as any prior probabilistic knowl-
edge about the user’s actual location.

As a running example, we consider a user located in Paris who
wishes to query an LBS provider for nearby restaurants in a private
way, i.e., by disclosing some approximate information z instead of
his exact location x. A crucial question is: what kind of privacy
guarantee can the user expect in this scenario? To formalize this
notion, we consider the level of privacy within a radius. We say
that the user enjoys (cid:96)-privacy within r if, any two locations at dis-
tance at most r produce observations with “similar” distributions,
where the “level of similarity” depends on (cid:96). The idea is that (cid:96) rep-

901adversary. The advantages of the independence from the prior are
obvious: ﬁrst, the mechanism is designed once and for all (i.e. it
does not need to be recomputed every time the adversary changes, it
works also in simultaneous presence of different adversaries, etc.).
Second, and even more important, it is applicable also when we do
not know the prior.

Contribution.

This paper contributes to the state-of-the-art as follows:
• We show that our generalized notion of differential privacy
[8], instantiated with the Euclidean metric, can be naturally
applied to location privacy, and we discuss the privacy guar-
antees that this deﬁnition provides. (Location privacy was
only brieﬂy mentioned in [8] as a possible application.)

• We also extend it to location traces, using the d∞ metric, and

show how privacy degrades when traces become longer.

• We propose a mechanism to efﬁciently draw noise from a
planar Laplace distribution, which is not trivial. Laplacians
on general metric spaces were brieﬂy discussed in [8], but no
efﬁcient method to draw from them was given. Furthermore,
we cope with the crucial problems of discretization and trun-
cation, which have been shown to pose signiﬁcant threats to
mechanism implementations [29].

• We describe how to use our mechanism to enhance LBS ap-

plications with geo-indistinguishability guarantees.

• We compare our mechanism to a state-of-the-art mechanism
from the literature [36] as well as a simple cloaking mecha-
nism, obtaining favorable results.

Road Map.

In Section 2 we discuss notions of location privacy from the lit-
erature and point out their weaknesses and strengths. In Section 3
we formalize the notion of geo-indistinguishability in three equiva-
lent ways. We then proceed to describe a mechanism that provides
geo-indistinguishability in Section 4. In Section 5 we show how
to enhance LBS applications with geo-indistinguishability guaran-
tees. In Section 6 we compare the privacy guarantees of our meth-
ods with those of two other methods from the literature. Section 7
discusses related work and Section 8 concludes.

The interested reader can ﬁnd the proofs in the report version of

this paper [4], which is available online.

2. EXISTING NOTIONS OF PRIVACY

In this section, we examine various notions of location privacy
from the literature, as well as techniques to achieve them. We con-
sider the motivating example from the introduction, of a user in
Paris wishing to ﬁnd nearby restaurants with good reviews. To
achieve this goal, he uses a handheld device (e.g.. a smartphone)
to query a public LBS provider. However, the user expects his lo-
cation to be kept private: informally speaking, the information sent
to the provider should not allow him to accurately infer the user’s
location. Our goal is to provide a formal notion of privacy that ad-
equately captures the user’s expected privacy. From the point of
view of the employed mechanism, we require a technique that can
be performed in real-time by a handheld device, without the need
of any trusted anonymization party.

Figure 1: Geo-indistinguishability: privacy varying with r.

resents the user’s level of privacy for that radius: the smaller (cid:96) is,
the higher is the privacy.

In order to allow the LBS to provide a useful service, we require
that the (inverse of the) level of privacy (cid:96) depend on the radius r.
In particular, we require that it is proportional to r, which brings us
to our deﬁnition of geo-indistinguishability:

A mechanism satisﬁes -geo-indistinguishability iff for
any radius r > 0, the user enjoys r-privacy within r.

This deﬁnition implies that the user is protected within any radius
r, but with a level (cid:96) = r that increases with the distance. Within
a short radius, for instance r = 1 km, (cid:96) is small, guaranteeing that
the provider cannot infer the user’s location within, say, the 7th ar-
rondissement of Paris. Farther away from the user, for instance for
r = 1000 km, (cid:96) becomes large, allowing the LBS provider to infer
that with high probability the user is located in Paris instead of, say,
London. Figure 1 illustrates the idea of privacy levels decreasing
with the radius.

We develop a mechanism to achieve geo-indistinguishability by
perturbating the user’s location x. The inspiration comes from one
of the most popular approaches for differential privacy, namely the
Laplacian noise. We adopt a speciﬁc planar version of the Laplace
distribution, allowing to draw points in a geo-indistinguishable way;
moreover, we are able to do so efﬁciently, via a transformation to
polar coordinates. However, as standard (digital) applications re-
quire a ﬁnite representation of locations, it is necessary to add a
discretization step. Such operation jeopardizes the privacy guaran-
tees, for reasons similar to the rounding effects of ﬁnite-precision
operations [29]. We show how to preserve geo-indistinguishability,
at the price of a degradation of the privacy level, and how to adjust
the privacy parameters in order to obtain a desired level of privacy.
We then describe how to use our mechanism to enhance LBS ap-
plications with geo-indistinguishability guarantees. Our proposal
results in highly conﬁgurable LBS applications, both in terms of
privacy and accuracy (a notion of utility/quality-of-service for LBS
applications providing privacy via location perturbation techniques).
Enhanced LBS applications require extra bandwidth consumption
in order to provide both privacy and accuracy guarantees, thus we
study how the different conﬁgurations affect the bandwidth over-
head using the Google Places API [2] as reference to measure band-
width consumption. Our experiments showed that the bandwidth
overhead necessary to enhance LBS applications with very high
levels of privacy and accuracy is not-prohibitive and, in most cases,
negligible for modern applications.

Finally, we compare our mechanism with other ones in the litera-
ture, using the privacy metric proposed in [36]. It turns our that our
mechanism offers the best privacy guarantees, for the same utility,
among all those which do not depend on the prior knowledge of the

902Expected Distance Error.

Expectation of distance error [35, 36, 23] is a natural way to
quantify the privacy offered by a location-obfuscation mechanism.
Intuitively, it reﬂects the degree of accuracy by which an adversary
can guess the real location of the user by observing the obfuscated
location, and using the side-information available to him.

There are several works relying on this notion. In [23], a pertur-
bation mechanism is used to confuse the attacker by crossing paths
of individual users, rendering the task of tracking individual paths
challenging. In [36], an optimal location-obfuscation mechanism
(i.e., achieving maximum level of privacy for the user) is obtained
by solving a linear program in which the contraints are determined
by the quality of service and by the user’s proﬁle.

It is worth noting that this privacy notion and the obfuscation
mechanisms based on it are explicitly deﬁned in terms of the adver-
sary’s side information. In contrast, our notion of geo-indistingui-
shability abstracts from the attacker’s prior knowledge, and is there-
fore suitable for scenarios where the prior is unknown, or the same
mechanism must be used for multiple users. A detailed comparison
with the mechanism of [36] is provided in Section 6.

k-anonymity.

The notion of k-anonymity is the most widely used deﬁnition of
privacy for location-based systems in the literature. Many systems
in this category [21, 19, 30] aim at protecting the user’s identity,
requiring that the attacker cannot infer which user is executing the
query, among a set of k different users. Such systems are outside
the scope of our problem, since we are interested in protecting the
user’s location.

On the other hand, k-anonymity has also been used to protect
the user’s location (sometimes called l-diversity in this context),
requiring that it is indistinguishable among a set of k points (often
required to share some semantic property). One way to achieve
this is through the use of dummy locations [25, 33]. This technique
involves generating k − 1 properly selected dummy points, and
performing k queries to the service provider, using the real and
dummy locations. Another method for achieving k-anonymity is
through cloaking [6, 13, 38]. This involves creating a cloaking
region that includes k points sharing some property of interest, and
then querying the service provider for this cloaking region.

Even when side knowledge does not explicitly appear in the def-
inition of k-anonymity, a system cannot be proven to satisfy this
notion unless assumptions are made about the attacker’s side infor-
mation. For example, dummy locations are only useful if they look
equally likely to be the real location from the point of view of the
attacker. Any side information that allows to rule out any of those
points, as having low probability of being the real location, would
immediately violate the deﬁnition.

Counter-measures are often employed to avoid this issue: for
instance, [25] takes into account concepts such as ubiquity, con-
gestion and uniformity for generating dummy points, in an effort
to make them look realistic. Similarly, [38] takes into account
the user’s side information to construct a cloaking region. Such
counter-measures have their own drawbacks: ﬁrst, they compli-
cate the employed techniques, also requiring additional data to be
taken into account (for instance, precise information about the envi-
ronment or the location of nearby users), making their application
in real-time by a handheld device challenging. Moreover, the at-
tacker’s actual side information might simply be inconsistent with
the assumptions being made.

As a result, notions that abstract from the attacker’s side informa-
tion, such as differential privacy, have been growing in popularity
in recent years, compared to k-anonymity-based approaches.

Differential Privacy.

Differential Privacy [14] is a notion of privacy from the area of
statistical databases. Its goal is to protect an individual’s data while
publishing aggregate information about the database. Differential
privacy requires that modifying a single user’s data should have a
negligible effect on the query outcome. More precisely, it requires
that the probability that a query returns a value v when applied to
a database D, compared to the probability to report the same value
when applied to an adjacent database D(cid:48) – meaning that D, D(cid:48) dif-
fer in the value of a single individual – should be within a bound
of e. A typical way to achieve this notion is to add controlled ran-
dom noise to the query output, for example drawn from a Laplace
distribution. An advantage of this notion is that a mechanism can
be shown to be differentially private independently from any side
information that the attacker might possess.

Differential privacy has also been used in the context of loca-
tion privacy. In [28], it is shown that a synthetic data generation
technique can be used to publish statistical information about com-
muting patterns in a differentially private way. In [22], a quadtree
spatial decomposition technique is used to ensure differential pri-
vacy in a database with location pattern mining capabilities.

As shown in the aforementioned works, differential privacy can
be successfully applied in cases where aggregate information about
several users is published. On the other hand, the nature of this
notion makes it poorly suitable for applications in which only a
single individual is involved, such as our motivating scenario. The
secret in this case is the location of a single user. Thus, differential
privacy would require that any change in that location should have
negligible effect on the published output, making it impossible to
communicate any useful information to the service provider.

To overcome this issue, Dewri [11] proposes a mix of differential
privacy and k-anonymity, by ﬁxing an anonymity set of k locations
and requiring that the probability to report the same obfuscated lo-
cation z from any of these k locations should be similar (up to e).
This property is achieved by adding Laplace noise to each Carte-
sian coordinate independently. There are however two problems
with this deﬁnition: ﬁrst, the choice of the anonymity set crucially
affects the resulting privacy; outside this set no privacy is guaran-
teed at all. Second, the property itself is rather weak; reporting the
geometric median (or any deterministic function) of the k locations
would satisfy the same deﬁnition, although the privacy guarantee
would be substantially lower than using Laplace noise.

Nevertheless, Dewri’s intuition of using Laplace noise1 for loca-
tion privacy is valid, and [11] provides extensive experimental anal-
ysis supporting this claim. Our notion of geo-indistinguishability
provides the formal background for justifying the use of Laplace
noise, while avoiding the need to ﬁx an anonymity set by using the
generalized variant of differential privacy from [8].

Other location-privacy metrics.

[10] proposes a location cloaking mechanism, and focuses on the
evaluation of Location-based Range Queries. The degree of privacy
is measured by the size of the cloak (also called uncertainty region),
and by the coverage of sensitive regions, which is the ratio between
the area of the cloak and the area of the regions inside the cloak
that the user considers to be sensitive. In order to deal with the
side-information that the attacker may have, ad-hoc solutions are
proposed, like patching cloaks to enlarge the uncertainty region or

1The planar Laplace distribution that we use in our work, how-
ever, is different from the distribution obtained by adding Laplace
noise to each Cartesian coordinate, and has better differential pri-
vacy properties (c.f. Section 4.1).

903delaying requests. Both solutions may cause a degradation in the
quality of service.

In [5], the real location of the user is assumed to have some level
of inaccuracy, due to the speciﬁc sensing technology or to the en-
vironmental conditions. Different obfuscation techniques are then
used to increase this inaccuracy in order to achieve a certain level
of privacy. This level of privacy is deﬁned as the ratio between the
accuracy before and after the application of the obfuscation tech-
niques.

Similar to the case of k-anonymity, both privacy metrics men-
tioned above make implicit assumptions about the adversary’s side
information. This may imply a violation of the privacy deﬁnition
in a scenario where the adversary has some knowledge about the
user’s real location.

Transformation-based approaches.

A number of approaches for location privacy are radically differ-
ent from the ones mentioned so far. Instead of cloaking the user’s
location, they aim at making it completely invisible to the service
provider. This is achieved by transforming all data to a different
space, usually employing cryptographic techniques, so that they
can be mapped back to spatial information only by the user [24,
20]. The data stored in the provider, as well as the location send
by the user are encrypted. Then, using techniques from private in-
formation retrieval, the provider can return information about the
encrypted location, without ever discovering which actual location
it corresponds to.

A drawback of these techniques is that they are computation-
ally demanding, making it difﬁcult to implement them in a hand-
held device. Moreover, they require the provider’s data to be en-
crypted, making it impossible to use existing providers, such as
Google Maps, which have access to the real data.

3. GEO-INDISTINGUISHABILITY

In this section we formalize our notion of geo-indistinguisha-
bility. As already discussed in the introduction, the main idea be-
hind this notion is that, for any radius r > 0, the user enjoys r-
privacy within r, i.e. the level of privacy is proportional to the ra-
dius. Note that the parameter  corresponds to the level of privacy
at one unit of distance. For the user, a simple way to specify his
privacy requirements is by a tuple ((cid:96), r), where r is the radius he is
mostly concerned with and (cid:96) is the privacy level he wishes for that
radius. In this case, it is sufﬁcient to require -geo-indistinguisha-
bility for  = (cid:96)/r; this will ensure a level of privacy (cid:96) within r, and
a proportionally selected level for all other radii.

So far we kept the discussion on an informal level by avoiding to
explicitly deﬁne what (cid:96)-privacy within r means. In the remaining
of this section we give a formal deﬁnition, as well as two charac-
terizations which clarify the privacy guarantees provided by geo-
indistinguishability.

Probabilistic model.
We ﬁrst introduce a simple model used in the rest of the paper.
We start with a set X of points of interest, typically the user’s possi-
ble locations. Moreover, let Z be a set of possible reported values,
which in general can be arbitrary, allowing to report obfuscated
locations, cloaking regions, sets of locations, etc. However, to sim-
plify the discussion, we sometimes consider Z to also contain spa-
tial points, assuming an operational scenario of a user located at
x ∈ X and communicating to the attacker a randomly selected lo-
cation z ∈ Z (e.g. an obfuscated point).

Probabilities come into place in two ways. First, the attacker
might have side information about the user’s location, knowing,
for example, that he is likely to be visiting the Eiffel Tower, while
unlikely to be swimming in the Seine river. The attacker’s side
information can be modeled by a prior distribution π on X , where
π(x) is the probability assigned to the location x.
Second, the selection of a reported value in Z is itself probabilis-
tic; for instance, z can be obtained by adding random noise to the
actual location x (a technique used in Section 4). A mechanism K
is a probabilistic function for selecting a reported value; i.e. K is
a function assigning to each location x ∈ X a probability distribu-
tion on Z, where K(x)(Z) is the probability that the reported point
belongs to the set Z ⊆ Z, when the user’s location is x.2 Starting
from π and using Bayes’ rule, each observation Z ⊆ Z of a mech-
anism K induces a posterior distribution σ = Bayes(π, K, Z) on
X , deﬁned as σ(x) = K(x)(Z)π(x)
σ1, σ2 on some set S as dP (σ1, σ2) = supS⊆S | ln σ1(S)
the convention that | ln σ1(S)
and ∞ if only one of them is zero.
3.1 Deﬁnition

We deﬁne the multiplicative distance between two distributions
σ2(S)|, with
σ2(S)| = 0 if both σ1(S), σ2(S) are zero

(cid:80)
x(cid:48) K(x(cid:48))(Z)π(x(cid:48)) .

We are now ready to state our deﬁnition of geo-indistinguisha-
bility. Intuitively, a privacy requirement is a constraint on the dis-
tributions K(x), K(x(cid:48)) produced by two different points x, x(cid:48). Let
d(·,·) denote the Euclidean metric. Enjoying (cid:96)-privacy within r
means that for any x, x(cid:48) s.t. d(x, x(cid:48)) ≤ r, the distance dP (K(x),
K(x(cid:48))) between the corresponding distributions should be at most
l. Then, requiring r-privacy for all radii r, forces the two distribu-
tions to be similar for locations close to each other, while relaxing
the constraint for those far away from each other, allowing a service
provider to distinguish points in Paris from those in London.

DEFINITION 3.1

(GEO-INDISTINGUISHABILITY). A mecha-

nism K satisﬁes -geo-indistinguishability iff for all x, x(cid:48):

(cid:48)
dP (K(x), K(x

)) ≤ d(x, x

(cid:48)

)

Equivalently, the deﬁnition can be formulated as K(x)(Z) ≤
ed(x,x(cid:48))K(x(cid:48))(Z) for all x, x(cid:48) ∈ X , Z ⊆ Z. Note that for all
points x(cid:48) within a radius r from x, the deﬁnition forces the corre-
sponding distributions to be at most r distant.
The above deﬁnition is very similar to the one of differential pri-
vacy, which requires dP (K(x), K(x(cid:48))) ≤ dh(x, x(cid:48)), where dh
is the Hamming distance between databases x, x(cid:48), i.e. the number
of individuals in which they differ. In fact, geo-indistinguishability
is an instance of a generalized variant of differential privacy, using
an arbitrary metric between secrets. This generalized formulation
has been known for some time: for instance, [31] uses it to per-
form a compositional analysis of standard differential privacy for
functional programs, while [16] uses metrics between individuals
to deﬁne “fairness” in classiﬁcation. On the other hand, the use-
fulness of using different metrics to achieve different privacy goals
and the semantics of the privacy deﬁnition obtained by different
metrics have only recently started to be studied [8]. This paper fo-
cuses on location-based systems and is, to our knowledge, the ﬁrst
work considering privacy under the Euclidean metric, which is a
natural choice for spatial data.

Note that in our scenario, using the Hamming metric of stan-
dard differential privacy – which aims at completely protecting the
2For simplicity we assume distributions on X to be discrete, but
allow those on Z to be continuous (c.f. Section 4). All sets to which
probability is assigned are implicitly assumed to be measurable.

904value of an individual – would be too strong, since the only infor-
mation is the location of a single individual. Nevertheless, we are
not interested in completely hiding the user’s location, since some
approximate information needs to be revealed in order to obtain the
required service. Hence, using a privacy level that depends on the
Euclidean distance between locations is a natural choice.

A note on the unit of measurement.

It is worth noting that, since  corresponds to the privacy level
for one unit of distance, it is affected by the unit in which distances
are measured. For instance, assume that  = 0.1 and distances are
measured in meters. The level of privacy for points one kilometer
away is 1000, hence changing the unit to kilometers requires to
set  = 100 in order for the deﬁnition to remain unaffected. In
other words, if r is a physical quantity expressed in some unit of
measurement, then  has to be expressed in the inverse unit.
3.2 Characterizations

In this section we state two characterizations of geo-indistingui-
shability, obtained from the corresponding results of [8] (for gen-
eral metrics), which provide intuitive interpretations of the privacy
guarantees offered by geo-indistinguishability.

Adversary’s conclusions under hiding.
The ﬁrst characterization uses the concept of a hiding function
φ : X → X . The idea is that φ can be applied to the user’s actual
location before the mechanism K, so that the latter has only access
to a hidden version φ(x), instead of the real location x. A mecha-
nism K with hiding applied is simply the composition K ◦ φ. In-
tuitively, a location remains private if, regardless of his side knowl-
edge (captured by his prior distribution), an adversary draws the
same conclusions (captured by his posterior distribution), regard-
less of whether hiding has been applied or not. However, if φ
replaces locations in Paris with those in London, then clearly the
adversary’s conclusions will be greatly affected. Hence, we require
that the effect on the conclusions depends on the maximum distance
d(φ) = supx∈X d(x, φ(x)) between the real and hidden location.

THEOREM 3.1. A mechanism K satisﬁes -geo-indistinguisha-

bility iff for all φ : X → X , all priors π on X , and all Z ⊆ Z:
dP (σ1, σ2) ≤ 2d(φ) where

σ1 = Bayes(π, K, Z)
σ2 = Bayes(π, K ◦ φ, Z)

Note that this is a natural adaptation of a well-known interpreta-
tion of standard differential privacy, stating that the attacker’s con-
clusions are similar, regardless of his side knowledge, and regard-
less of whether an individual’s real value has been used in the query
or not. This corresponds to a hiding function φ removing the value
of an individual.

Note also that the above characterization compares two poste-
rior distributions. Both σ1, σ2 can be substantially different than
the initial knowledge π, which means that an adversary does learn
some information about the user’s location.

Knowledge of an informed attacker.

A different approach is to measure how much the adversary learns
about the user’s location, by comparing his prior and posterior dis-
tributions. However, since some information is allowed to be re-
vealed by design, these distributions can be far apart. Still, we can
consider an informed adversary who already knows that the user is
located within a set N ⊆ X . Let d(N ) = supx,x(cid:48)∈N d(x, x(cid:48))
Intuitively, the
be the maximum distance between points in x.

user’s location remains private if, regardless of his prior knowl-
edge within N, the knowledge obtained by such an informed ad-
versary should be limited by a factor depending on d(N ). This
means that if d(N ) is small, i.e. the adversary already knows the
location with some accuracy, then the information that he obtains is
also small, meaning that he cannot improve his accuracy. Denoting
by π|N the distribution obtained from π by restricting to N (i.e.
π|N (x) = π(x|N )), we obtain the following characterization:

THEOREM 3.2. A mechanism K satisﬁes -geo-indistinguisha-

bility iff for all N ⊆ X , all priors π on X , and all Z ⊆ Z:

dP (π|N , σ|N ) ≤ d(N ) where

σ = Bayes(π, K, Z)

Note that this is a natural adaptation of a well-known interpre-
tation of standard differential privacy, stating that in informed ad-
versary who already knows all values except individual’s i, gains
no extra knowledge from the reported answer, regardless of side
knowledge about i’s value [17].

Abstracting from side information.

A major difference of geo-indistinguishability, compared to sim-
ilar approaches from the literature, is that it abstracts from the side
information available to the adversary, i.e. from the prior distribu-
tion. This is a subtle issue, and often a source of confusion, thus we
would like to clarify what “abstracting from the prior” means. The
goal of a privacy deﬁnition is to restrict the information leakage
caused by the observation. Note that the lack of leakage does not
mean that the user’s location cannot be inferred (it could be inferred
by the prior alone), but instead that the adversary’s knowledge does
not increase due to the observation.

However, in the context of LBSs, no privacy deﬁnition can en-
sure a small leakage under any prior, and at the same time allow
reasonable utility. Consider, for instance, an attacker who knows
that the user is located at some airport, but not which one. The at-
tacker’s prior knowledge is very limited, still any useful LBS query
should reveal at least the user’s city, from which the exact location
(i.e.
the city’s airport) can be inferred. Clearly, due to the side
information, the leakage caused by the observation is high.

So, since we cannot eliminate leakage under any prior, how can
we give a reasonable privacy deﬁnition without restricting to a par-
ticular one? First, we give a formulation (Deﬁnition 3.1) which
does not involve the prior at all, allowing to verify it without know-
ing the prior. At the same time, we give two characterizations
which explicitly quantify over all priors, shedding light on how the
prior affects the privacy guarantees.

Finally, we should point out that differential privacy abstracts
from the prior in exactly the same way. Contrary to what is some-
times believed, the user’s value is not protected under any prior
information. Recalling the well-known example from [14], if the
adversary knows that Terry Gross is two inches shorter than the av-
erage Lithuanian woman, then he can accurately infer the height,
even if the average is release in a differentially private way (in fact
no useful mechanism can prevent this leakage). Differential pri-
vacy does ensure that her risk is the same whether she participates
in the database or not, but this might me misleading: it does not
imply the lack of leakage, only that it will happen anyway, whether
she participates or not!
3.3 Protecting location sets

So far, we have assumed that the user has a single location that
he wishes to communicate to a service provider in a private way
(typically his current location). In practice, however, it is common
for a user to have multiple points of interest, for instance a set of

905past locations or a set of locations he frequently visits. In this case,
the user might wish to communicate to the provider some informa-
tion that depends on all points; this could be either the whole set of
points itself, or some aggregate information, for instance their cen-
troid. As in the case of a single location, privacy is still a require-
ment; the provider is allowed to obtain only approximate informa-
tion about the locations, their exact value should be kept private. In
this section, we discuss how -geo-indistinguishability extends to
the case where the secret is a tuple of points x = (x1, . . . , xn).

Similarly to the case of a single point, the notion of distance
is crucial for our deﬁnition. We deﬁne the distance between two
tuples of points x = (x1, . . . , xn), x(cid:48) = (x(cid:48)

1, . . . , x(cid:48)

n) as:

d∞(x, x

(cid:48)

) = maxi d(xi, x(cid:48)
i)

Intuitively, the choice of metric follows the idea of reasoning within
a radius r: when d∞(x, x(cid:48)) ≤ r, it means that all xi, x(cid:48)
i are within
distance r from each other. All deﬁnitions and results of this section
can be then directly applied to the case of multiple points, by using
d∞ as the underlying metric. Enjoying (cid:96)-privacy within a radius
r means that two tuples at most r away from each other, should
produce distributions at most r apart.

Reporting the whole set.

A natural question then to ask is how we can obfuscate a tuple
of points, by independently applying an existing mechanism K0
to each individual point, and report the obfuscated tuple. Starting
from a tuple x = (x1, . . . , xn), we independently apply K0 to
each xi obtaining a reported point zi, and then report the tuple z =
(z1, . . . , zn). Thus, the probability that the combined mechanism
K reports z, starting from x, is the product of the probabilities to
obtain each point zi, starting from the corresponding point xi, i.e.

K(x)(z) =(cid:81)

i K0(xi)(zi).

The next question is what level of privacy does K satisfy. For
simplicity, consider a tuple of only two points (x1, x2), and assume
that K0 satisﬁes -geo-indistinguishability. At ﬁrst look, one might
expect the combined mechanism K to also satisfy -geo-indistin-
guishability, however this is not the case. The problem is that the
two points might be correlated, thus an observation about x1 will
reveal information about x2 and vice versa. Consider, for instance,
the extreme case in which x1 = x2. Having two observations about
the same point reduces the level of privacy, thus we cannot expect
the combined mechanism to provide the same level of privacy.

Still, if K0 satisﬁes -geo-indistinguishability, then K can be
shown to satisfy n-geo-indistinguishability, i.e. a level of privacy
that scales linearly with n. Due to this scalability issue, the tech-
nique of independently applying a mechanism to each point is only
useful when the number of points is small. Still, this is sufﬁcient
for some applications, such as the case study of Section 5. Note,
however, that this technique is by no means the best we can hope
for: similarly to standard differential privacy [7, 32], better results
could be achieved by adding noise to the whole tuple x, instead
of each individual point. We believe that using such techniques
we can achieve geo-indistinguishability for a large number of lo-
cations with reasonable noise, leading to practical mechanisms for
highly mobile applications. We have already started exploring this
direction of future work.

Reporting an aggregate location.

Another interesting case is when we need to report some aggre-
gate information obtained by x, for instance the centroid of the
tuple.
In general we might need to report the result of a query
f : X n → X . Similarly to the case of standard differential privacy,
we can compute the real answer f (x) and the add noise by apply-

ing a mechanism K to it. If f is ∆-sensitive wrt d, d∞, meaning
that d(f (x), f (x(cid:48))) ≤ ∆d∞(x, x(cid:48)) for all x, x(cid:48), and K satisﬁes
geo-indistinguishability, then the composed mechanism K ◦ f can
be shown to satisfy ∆-geo-indistinguishability.

Note that when dealing with aggregate data, standard differen-
tial privacy becomes a viable option. However, one needs to also
examine the loss of utility caused by the added noise. This highly
depends on the application: differential privacy is suitable for pub-
lishing aggregate queries with low sensitivity, meaning that changes
in a single individual have a relatively small effect on the outcome.
On the other hand, location information often has high sensitiv-
ity. A trivial example is the case where we want to publish the
complete tuple of points. But sensitivity can be high even for ag-
gregate information: consider the case of publishing the centroid
of 5 users located anywhere in the world. Modifying a single user
can hugely affect their centroid, thus achieving differential privacy
would require so much noise that the result would be useless. For
geo-indistinguishability, on the other hand, one needs to consider
the distance between points when computing the sensitivity. In the
case of the centroid, a small (in terms of distance) change in the
tuple has a small effect on the result, thus geo-indistinguishability
can be achieved with much less noise.

4. A MECHANISM TO ACHIEVE GEO-IN-

DISTINGUISHABILITY

In this section we present a method to generate noise so to sat-
isfy geo-indistinguishability. We model the location domain as a
discrete3 Cartesian plane with the standard notion of Euclidean dis-
tance. This model can be considered a good approximation of the
Earth surface when the area of interest is not too large.

(a) First, we deﬁne a mechanism to achieve geo-indistinguishability

in the ideal case of the continuous plane.

(b) Then, we discretized the mechanism by remapping each point
generated according to (a) to the closest point in the discrete
domain.

(c) Finally, we truncate the mechanism, so to report only points

within the limits of the area of interest.

4.1 A mechanism for the continuous plane

Following the above plan, we start by deﬁning a mechanism for
geo-indistinguishability on the continuous plane. The idea is that
whenever the actual location is x0 ∈ R2, we report, instead, a point
x ∈ R2 generated randomly according to the noise function. The
latter needs to be such that the probabilities of reporting a point in a
certain (inﬁnitesimal) area around x, when the actual locations are
x0 and x(cid:48)
0 respectively, differs at most by a multiplicative factor
e− d(x0,x(cid:48)
0).

We can achieve this property by requiring that the probability
of generating a point in the area around x decreases exponentially
with the distance from the actual location x0. In a linear space this
is exactly the behavior of the Laplace distribution, whose proba-
bility density function (pdf) is /2 e− |x−µ|. This distribution has
been used in the literature to add noise to query results on statistical
databases, with µ set to be the actual answer, and it can be shown
to satisfy -differential privacy [15].

There are two possible deﬁnitions of Laplace distribution on high-
er dimensions (multivariate Laplacians). The ﬁrst one, investigated
3 For applications with digital interface the domain of interest is
discrete, since the representation of the coordinates of the points is
necessarily ﬁnite.

906Drawing a point (r, θ) from the polar Laplacian
1. draw θ uniformly in [0, 2π)
2. draw p uniformly in [0, 1) and set r = C−1

(p)



Figure 3: Method to generate Laplacian noise.

Thanks to the fact that R and Θ are independent, in order to draw
a point (r, θ) from D(r, θ) it is sufﬁcient to draw separately r and
θ from D,R(r) and D,Θ(θ) respectively.

Since D,Θ(θ) is constant, drawing θ is easy: it is sufﬁcient to
generate θ as a random number in the interval [0, 2π) with uniform
distribution.

We now show how to draw r. Following standard lines, we con-

sider the cumulative distribution function (cdf) C(r):
D,R(ρ)dρ = 1 − (1 +  r) e

C(r) =

− r

(cid:90) r

0

Intuitively, C(r) represents the probability that the radius of the
random point falls between 0 and r. Finally, we generate a random
number p with uniform probability in the interval [0, 1), and we set
r = C−1

(p). Note that



(cid:0)W−1( p−1

e ) + 1(cid:1)



−1


(p) = − 1

C

where W−1 is the Lambert W function (the −1 branch), which can
be computed efﬁciently and is implemented in several numerical
libraries (MATLAB, Maple, GSL, . . . ).
4.2 Discretization
We discuss now how to approximate the Laplace mechanism on
a grid G of discrete Cartesian coordinates. Let us recall the points
(a) and (b) of the plan, in light of the development so far: Given the
actual location x0, report the point x in G obtained as follows:
(a) ﬁrst, draw a point (r, θ) following the method in Figure 3,
(b) then, remap (r, θ) to the closest point x on G.

We will denote by K : G → P(G) the above mechanism. In
summary, K(x0)(x) represents the probability of reporting the
point x when the actual point is x0.

It is not obvious that the discretization preserves geo-indistingui-
shability, due to the following problem: In principle, each point x
in G should gather the probability of the set of points for which x
is the closest point in G, namely
R(x) = {y ∈ R2 |∀x

(cid:48) ∈ G. d(y, x

) ≤ d(y, x

)}

(cid:48)

(cid:48)

However, due to the ﬁnite precision of the machine, the noise gen-
erated according to (a) is already discretized in accordance with
the polar system. Let W denote the discrete set of points actually
generated in (a). Each of those points (r, θ) is drawn with the prob-
ability of the area between r, r + δr, θ and θ + δθ, where δr and δθ
denote the precision of the machine in representing the radius and
the angle respectively. Hence, step (b) generates a point x in G with
the probability of the set RW (x) = R(x) ∩ W. This introduces
some irregularity in the mechanism, because the region associated
to RW (x) has a different shape and area depending on the position
of x relatively to x0. The situation is illustrated in Figure 4 with
R0 = RW (x0) and R1 = RW (x1).

Geo-indistinguishability of the discretized mechanism.

We now analyze the privacy guarantees provided by our dis-
cretized mechanism. We show that the discretization preserves

Figure 2: The pdf of two planar Laplacians, centered at
(−2,−4) and at (5, 3) respectively, with  = 1/5.

in [27], and used also in [17], is obtained from the standard Lapla-
cian by replacing |x− µ| with d(x, µ). The second way consists in
generating each Cartesian coordinate independently, according to
a linear Laplacian. For reasons that will become clear in the next
paragraph, we adopt the ﬁrst approach.

The probability density function.
the pdf of our noise mechanism, on any other point x ∈ R2, is:

Given the parameter  ∈ R+, and the actual location x0 ∈ R2,

D(x0)(x) =

− d(x0,x)

2
2 π

e

(1)

where 2/2 π is a normalization factor. We call this function planar
Laplacian centered at x0. The corresponding distribution is illus-
trated in Figure 2. It is possible to show that (i) the projection of a
planar Laplacian on any vertical plane passing by the center gives
a (scaled) linear Laplacian, and (ii) the corresponding mechanism
satisﬁes -geo-indistinguishability. These two properties would not
be satisﬁed by the second approach to the multivariate Laplacian.

Drawing a random point.

We illustrate now how to draw a random point from the pdf de-
ﬁned in (1). First of all, we note that the pdf of the planar Laplacian
depends only on the distance from x0. It will be convenient, there-
fore, to switch to a system of polar coordinates with origin in x0. A
point x will be represented as a point (r, θ), where r is the distance
of x from x0, and θ is the angle that the line x x0 forms with re-
spect to the horizontal axis of the Cartesian system. Following the
standard transformation formula, the pdf of the polar Laplacian
centered at the origin (x0) is:

D(r, θ) =

− r

r e

2
2 π

(2)

We note now that the polar Laplacian deﬁned above enjoys a
property that is very convenient for drawing in an efﬁcient way: the
two random variables that represent the radius and the angle are
independent. Namely, the pdf can be expressed as the product of
the two marginals. In fact, let us denote these two random variables
by R (the radius) and Θ (the angle). The two marginals are:

D,R(r) = (cid:82) 2π
D,Θ(θ) = (cid:82) ∞

0 D(r, θ) dθ = 2 r e− r
0 D(r, θ) dr = 1

2 π

Hence we have D(r, θ) = D,R(r) D,Θ(θ). Note that D,R(r)
corresponds to the pdf of the gamma distribution with shape 2 and
scale 1/.

907Figure 4: Remapping the points in polar coordinates to points
in the grid.

geo-indistinguishability, at the price of a degradation of the privacy
parameter .
For the sake of generality we do not require the step units along
the two dimensions of G to be equal. We will call them grid units,
and will denote by u and v the smaller and the larger unit, respec-
tively. We recall that δθ and δr denote the precision of the machine
in representing θ and r, respectively. We assume that δr ≤ rmaxδθ.
The following theorem states the geo-indistinguishability guaran-
tees provided by our mechanism: K(cid:48) satisﬁes -geo-indistingui-
shability, within a range rmax, provided that (cid:48) is chosen in a suit-
able way that depends on , on the length of the step units of G, and
on the precision of the machine.

THEOREM 4.1. Assume rmax < u/δθ, and let q = u/rmaxδθ.

Let , (cid:48) ∈ R+ such that

(cid:48)


+

1
u

ln

q + 2 e(cid:48)u
q − 2 e(cid:48)u ≤ 
0, x) ≤ rmax then:

Then K(cid:48) provides -geo-indistinguishability within the range of
rmax. Namely, if d(x0, x), d(x(cid:48)

K(cid:48) (x0)(x) ≤ e d(x0,x(cid:48)

(cid:48)
0)K(cid:48) (x
0)(x).

The difference between (cid:48) and  represents the additional noise
needed to compensate the effect of discretization. Note that rmax,
which determines the area in which -geo-indistinguishability is
guaranteed, must be chosen in such a way that q > 2 e(cid:48)u. Further-
more there is a trade-off between (cid:48) and rmax: If we want (cid:48) to be
close to  then we need q to be large. Depending on the precision,
this may or may not imply a serious limit on rmax. Vice versa, if we
want rmax to be large then, depending on the precision, (cid:48) may need
to be signiﬁcantly smaller than , and furthermore we may have a
constraint on the minimum possible value for , which means that
we may not have the possibility of achieving an arbitrary level of
geo-indistinguishability.

Figure 5 shows how the additional noise varies depending on the
precision of the machine. In this ﬁgure, rmax is set to be 102 km,
and we consider the cases of double precision (16 signiﬁcant digits,
i.e., δθ = 10−16), single precision (7 signiﬁcant digits), and an
intermediate precision of 9 signiﬁcant digits. Note that with double
precision the additional noise is negligible.

Note that in Theorem 4.1 the restriction about rmax is crucial.
Namely, -geo-indistinguishability does not hold for arbitrary dis-
tances for any ﬁnite . Intuitively, this is because the step units of
W (see Figure 4) become larger with the distance r from x0. The
step units of G, on the other hand, remain the same. When the
steps in W become larger than those of G, some x’s have an empty
RW (x). Therefore when x is far away from x0 its probability may

Figure 5: The relation between  and (cid:48) for rmax = 102 km.

Input: x

u, v, δθ, δr
A

point to sanitize
privacy parameter
precision parameters
acceptable locations

Output: Sanitized version z of input x
1. (cid:48) ← max (cid:48) satisfying Thm 4.1 for rmax = diam(A)
2. draw θ unif. in [0, 2π)
3. draw p unif. in [0, 1), set r ← C−1
4. z ← x + (cid:104)r cos(θ), r sin(θ)(cid:105)
5. z ← closest(z, A)
6. return z

draw angle
draw radius
to cartesian, add vectors
truncation

(cid:48) (p)

Figure 6: The Planar Laplace mechanism PL

or may not be 0, depending on the position of x0 in G, which means
that geo-indistinguishability cannot be satisﬁed.
4.3 Truncation

The Laplace mechanisms described in the previous sections have
the potential to generate points everywhere in the plane, which
causes several issues: ﬁrst, digital applications have ﬁnite mem-
ory, hence these mechanisms are not implementable. Second, the
discretized mechanism of Section 4.2 satisﬁes geo-indistinguisha-
bility only within a certain range, not on the full plane. Finally, in
practical applications we are anyway interested in locations within
a ﬁnite region (the earth itself is ﬁnite), hence it is desirable that
the reported location lies within that region. For the above reasons,
we propose a truncated variant of the discretized mechanism which
generates points only within a speciﬁed region and fully satisﬁes
geo-indistinguishability. The full mechanism (with discretization
and truncation) is referred to as “Planar Laplace mechanism” and
denoted by PL.
We assume a ﬁnite set A ⊂ R2 of admissible locations, with
diameter diam(A) (maximum distance between points in A). This
set is ﬁxed, i.e. it does not depend on the actual location x0. Our
truncated mechanism PL : A → P(A ∩ G) works like the dis-
cretized Laplacian of the previous section, with the difference that
the point generated in step (a) is remapped to the closest point in
A ∩ G. The complete mechanism is shown in Figure 6; note that
step 1 assumes that diam(A) < u/δθ, otherwise no such (cid:48) exists.

THEOREM 4.2. PL satisﬁes -geo-indistinguishability.

5. ENHANCING LBSS WITH PRIVACY

In this section we present a case study of our privacy mecha-
nism in the context of LBSs. We assume a simple client-server
architecture where users communicate via a trusted mobile appli-
cation (the client – typically installed in a smart-phone) with an
unknown/untrusted LBS provider (the server – typically running
on the cloud). Hence, in contrast to other solutions proposed in the
literature, our approach does not rely on trusted third-party servers.
In the following we distinguish between mildly-location-sensitive
and highly-location-sensitive LBS applications. The former cate-

908Since we cannot guarantee that the AOI is fully contained in the
AOR, we introduce the notion of accuracy, which measures the
probability of such event. In the following, we will refer to an LBS
application in abstract terms, as characterized by a location pertur-
bation mechanism K and a ﬁxed AOR radius. We use rad R and
rad I to denote the radius of the AOR and the AOI, respectively,
and B(x, r) to denote the circle with center x and radius r.
5.1 On the accuracy of LBSS

Intuitively, an LBS application is (c, radI )-accurate if the prob-
ability of the AOI to be fully contained in the AOR is bounded from
below by a conﬁdence factor c. Formally:

DEFINITION 5.1

(LBS APPLICATION ACCURACY). An LBS
application (K, rad R) is (c, rad I )-accurate iff for all locations x
we have that B(x, rad I ) is fully contained in B(K(x), rad R) with
probability at least c.

Given a privacy parameter  and accuracy parameters (c, rad I),
our goal is to obtain an LBS application (K, rad R) satisfying both
-geo-indistinguishability and (c, rad I)-accuracy. As a perturba-
tion mechanism, we use the Planar Laplace PL (Figure 6), which
satisﬁes -geo-indistinguishability. As for rad R, we aim at ﬁnding
the minimum value validating the accuracy condition. Finding such
minimum value is crucial to minimize the bandwidth overhead in-
herent to our proposal. In the following we will investigate how to
achieve this goal by statically deﬁning rad R as a function of the
mechanism and the accuracy parameters c and rad I.

For our purpose, it will be convenient to use the notion of (α, δ)-
usefulness, which was introduced in [7]. A location perturbation
mechanism K is (α, δ)-useful if for every location x the reported
location z = K(x) satisﬁes d(x, z) ≤ α with probability at least δ.
In the case of the Planar Laplace, it is easy to see that, by deﬁnition,
4,
the α and δ values which express its usefulness are related by C
the cdf of the Gamma distribution:

OBSERVATION 5.1. For any α > 0, PL is (α, δ)-useful if α ≤
(δ).

C−1



Figure 8 illustrates the (α, δ)-usefulness of PL for r = 0.2 (as in
our running example) and various values of (cid:96) (recall that (cid:96) =  r).
It follows from the ﬁgure that a mechanism providing the privacy
guarantees speciﬁed in our running example (-geo-indistinguisha-
bility, with (cid:96) = ln(4) and r = 0.2) generates an approximate loca-
tion z falling within 1 km of the user’s location x with probabil-
ity 0.992, falling within 690 meters with probability 0.95, falling
within 560 meters with probability 0.9, and falling within 390 me-
ters with probability 0.75.

We now have all the necessary ingredients to determine the de-
sired rad R: By deﬁnition of usefulness, if PL is (α, δ)-useful
then the LBS application (PL, rad R) is (δ, rad I )-accurate if α ≤
rad R − rad I. The converse also holds if δ is maximal. By Obser-
vation 5.1, we then have:

PROPOSITION 5.2. The LBS application (PL, rad R) is (c, rad I )-

accurate if rad R ≥ rad I + C−1
Therefore, it is sufﬁcient to set rad R = rad I + C−1

(c).





(c).

Coming back to our running example ( = ln(4)/0.2 and rad I =
0.3), taking a conﬁdence factor c of, say, 0.95, leads to a (0.69, 0.95)-
useful mechanism (because C−1
both ln(4)/0.2-geo-indistinguishable and (0.95, 0.3)-accurate.
4For simplicity we assume that (cid:48) =  (see Figure 6), since their
difference is negligible under double precision.

(c) = 0.69). Thus, (PL, 0.99) is



Figure 7: AOI and AOR of 300 m and 1 km radius respectively.

gory corresponds to LBS applications offering a service that does
not heavily rely on the precision of the location information pro-
vided by the user. Examples of such applications are weather fore-
cast applications and LBS applications for retrieval of certain kind
of POI (like gas stations). Enhancing this kind of LBSs with geo-
indistinguishability is relatively straightforward as it only requires
to obfuscate the user’s location using the Planar Laplace mecha-
nism (Figure 6).

Our running example lies within the second category: For the
user sitting at Café Les Deux Magots, information about restau-
rants nearby Champs Élysées is considerably less valuable than in-
formation about restaurants around his location. Enhancing highly-
location-sensitive LBSs with privacy guarantees is more challeng-
ing. Our approach consists on implementing the following three
steps:

1. Implement the Planar Laplace mechanism (Figure 6) on the
client application in order to report to the LBS server the
user’s obfuscated location z rather than his real location x.

2. Due to the fact that the information retrieved from the server
is about POI nearby z, the area of POI information retrieval
should be increased. In this way, if the user wishes to obtain
information about POI within, say, 300 m of x, the client ap-
plication should request information about POI within, say,
1 km of z. Figure 7 illustrates this situation. We will refer to
the blue circle as area of interest (AOI) and to the grey circle
as area of retrieval (AOR).

3. Finally, the client application should ﬁlter the retrieved POI
information (depicted by the pins within the area of retrieval
in Figure 7) in order to provide to the user with the desired
information (depicted by pins within the user’s area of inter-
est in Figure 7).

Ideally, the AOI should always be fully contained in the AOR.
Unfortunately, due to the probabilistic nature of our perturbation
mechanism, this condition cannot be guaranteed (note that the AOR
is centered on a randomly generated location that can be arbitrarily
distant from the real location). It is also worth noting that the client
application cannot dynamically adjust the radius of the AOR in or-
der to ensure that it always contains the AOI as this approach would
completely jeopardize the privacy guarantees: on the one hand, the
size of the AOR would leak information about the user’s real lo-
cation and, on the other hand, the LBS provider would know with
certainty that the user is located within the retrieval area. Thus,
in order to provide geo-indistinguishability, the AOR has to be de-
ﬁned independently from the randomly generated location.

909Restaurants

in Paris

Privacy
r = 0.2

(cid:96) = log(6)
(cid:96) = log(4)
(cid:96) = log(2)

Restaurants

in Buenos Aires

Privacy
r = 0.2

(cid:96) = log(6)
(cid:96) = log(4)
(cid:96) = log(2)

Accuracy
rad I = 0.3
c = 0.95
216 KB
318 KB
974 KB

Accuracy
rad I = 0.3
c = 0.95
34 KB
51 KB
156 KB

c = 0.99
359 KB
539 KB
1.7 MB

c = 0.99
54 KB
86 KB
279 KB

c = 0.9
162 KB
235 KB
698 KB

c = 0.9
26 KB
38 KB
112 KB

Table 1: Bandwidth overhead for restaurants in Paris and in
Buenos Aires for various levels of privacy and accuracy.

returns information (in JSON format) including location, address,
name, rating, and opening times for all restaurants up to 300 meters
from the location (48.85412, 2.33316) – which corresponds to the
coordinates of Café Les Deux Magots in Paris.

We have used the APIs nearbysearch and radarsearch
to calculate the average number of POIs per km2 and the average
size of POIs’ information (in KB) respectively. We have considered
two queries: restaurants in Paris, and restaurants in Buenos Aires.
Our results show that there is an average of 137 restaurants per km2
in Paris and 22 in Buenos Aires, while the average size per POI is
0.84 KB.

Combining this information with the AOR overhead depicted
in Figure 9, we can derive the average bandwidth overhead for
each query and various combinations of privacy and accuracy lev-
els. For example, using the parameter combination of our run-
ning example (privacy level  = log(4)/0.2, and accuracy level
c = 0.95, rad I = 0.3) we have a 10.7 ratio for an average of
38 ((cid:119) (137/10002) × (3002 × π)) restaurants in the AOI. Thus
the estimated bandwidth overhead is 39 × (10.7 − 1) × 0.84KB
(cid:119) 318 KB.

Table 1 shows the bandwidth overhead for restaurants in Paris
and Buenos Aires for the various combinations of privacy and ac-
curacy levels. Looking at the worst case scenario, from a bandwidth
overhead perspective, our combination of highest levels of privacy
and accuracy (taking (cid:96) = log(2) and c = 0.99) with the query
for restaurants in Paris (which yields to a large number of POIs –
signiﬁcantly larger than average) results in a signiﬁcant bandwidth
overhead (up to 1.7MB). Such overhead reduces sharply when de-
creasing the level of privacy (e.g., from 1.7 MB to 557 KB when
using (cid:96) = log(4) instead of (cid:96) = log(2)). For more standard queries
yielding a lower number of POIs, in contrast, even the combina-
tion of highest privacy and accuracy levels results in a relatively
insigniﬁcant bandwidth overhead.

Concluding our bandwidth overhead analysis, we believe that
the overhead necessary to enhance an LBS application with geo-
indistinguishability guarantees is not prohibitive even for scenarios
resulting in high bandwidth overhead (i.e., when combining very
high privacy and accuracy levels with queries yielding a large num-
ber of POIs). Note that 1.7MB is comparable to 35 seconds of
Youtube streaming or 80 seconds of standard Facebook usage [3].
Nevertheless, for cases in which minimizing bandwidth consump-
tion is paramount, we believe that trading bandwidth consumption
for privacy (e.g., using (cid:96) = log(4) or even (cid:96) = log(6)) is an ac-
ceptable solution.

Figure 8: (α, δ)-usefulness for r = 0.2 and various values of (cid:96).

Figure 9: AOR vs AOI ratio for various levels of privacy and
accuracy (using ﬁxed r = 0.2 and radI = 0.3).

5.2 Bandwidth overhead analysis

As expressed by Proposition 5.2, in order to implement an LBS
application enhanced with geo-indistinguishability and accuracy it
sufﬁces to use the Planar Laplace mechanism and retrieve POIs for
an enlarged radius rad R. For each query made from a location x,
the application needs to (i) obtain z = PL(x), (ii) retrieve POIs
for AOR = B(z, rad R), and (iii) ﬁlter the results from AOR to AOI
(as explained in step 3 above). Such implementation is straight-
forward and computationally efﬁcient for modern smart-phone de-
vices. In addition, it provides great ﬂexibility to application devel-
oper and/or users to specify their desired/allowed level of privacy
and accuracy. This, however, comes at a cost: bandwidth overhead.
In the following we turn our attention to investigating the band-
width overhead yielded by our approach. We will do so in two
steps: ﬁrst we investigate how the AOR size increases for different
privacy and LBS-speciﬁc parameters, and then we investigate how
such increase translates into bandwidth overhead.

Figure 9 depicts the overhead of the AOR versus the AOI (repre-
sented as their ratio) when varying the level of conﬁdence (c) and
privacy ((cid:96)) and for ﬁxed values rad I = 0.3 and r = 0.2. The
overhead increases slowly for levels of conﬁdence up to 0.95 (re-
gardless of the level of privacy) and increases sharply thereafter,
yielding to a worst case scenario of a about 50 times increase for
the combination of highest privacy ((cid:96) = log(2)) and highest conﬁ-
dence (c = 0.99).

In order to understand how the AOR increase translates into band-
width overhead, we now investigate the density (in km2) and size
(in KB) of POIs by means of the Google Places API [2]. This
API allows to retrieve POIs’ information for a speciﬁc location,
radius around the location, and POI’s type (among many other
optional parameters). For instance, the HTTPS request:

https://maps.googleapis.com/maps/api/place/nearby
search/json?location=48.85412,2.33316 &
radius=300 & types=restaurant & key=myKey

9105.3 Further challenges: using an LBS multi-

ple times

As discussed in Section 3.3, geo-indistinguishability can be nat-
urally extended to multiple locations. In short, the idea of being
(cid:96)-private within r remains the same but for all locations simultane-
ously. In this way the locations, say, x1, x2 of a user employing
the LBS twice remain indistinguishable from all pair of locations
at (point-wise) distance at most r (i.e., from all pairs x(cid:48)
2 such
that d(x1, x(cid:48)

1) ≤ r and d(x2, x(cid:48)

2) ≤ r).

A simple way of obtaining geo-indistinguishability guarantees
when performing multiple queries is to employ our technique for
protecting single locations to independently generate approximate
locations for each of the user’s locations. In this way, a user per-
forming n queries via a mechanism providing -geo-indistinguisha-
bility enjoys n-geo-indistinguishability (see Section 3.3).

1, x(cid:48)

This solution might be satisfactory when the number of queries
to perform remains fairly low, but in other cases impractical, due to
the privacy degradation. It is worth noting that the canonical tech-
nique for achieving standard differential privacy (based on adding
noise according to the Laplace distribution) suffers of the same pri-
vacy degradation problem ( increases linearly on the number of
queries). Several articles in the literature focus on this problem
(see [32] for instance). We believe that the principles and tech-
niques used to deal with this problem for standard differential pri-
vacy could be adapted to our scenario (either directly or motiva-
tionally).

6. COMPARISON WITH OTHER METHODS

In this section we compare the performance of our mechanism
with that of other ones proposed in the literature. Of course it is not
interesting to make a comparison in terms of geo-indistinguisha-
bility, since other mechanisms usually do not satisfy this property.
We consider, instead, the (rather natural) Bayesian notion of pri-
vacy proposed in [36], and the trade-off with respect to the quality
of service measured according to [36], and also with respect to the
notion of accuracy illustrated in the previous section.

The mechanisms that we compare with ours are:
1. The obfuscation mechanism presented in [36]. This mech-
anism works on discrete locations, called regions, and, like
ours, it reports a location (region) selected randomly accord-
ing to a probability distribution that depends on the user’s
location. The distributions are generated automatically by a
tool which is designed to provide optimal privacy for a given
quality of service and a given adversary (i.e., a given prior,
representing the side knowledge of the adversary). It is im-
portant to note that in presence of a different adversary the
optimality is not guaranteed. This dependency on the prior
is a key difference with respect to our approach, which ab-
stracts from the adversary’s side information.

2. A simple cloaking mechanism.

In this approach, the area
of interest is assumed to be partitioned in zones, whose size
depends on the level of privacy we want yo achieve. The
mechanism then reports the zone in which the exact location
is situated. This method satisﬁes k-anonymity where k is the
number of locations within each zone.

In both cases we need to divide the area of interest into a ﬁnite
number of regions, representing the possible locations. We con-
sider for simplicity a grid, and, more precisely, a 9 × 9 grid con-
sisting of 81 square regions of 100 m of side length. In addition,
for the cloaking method, we overlay a grid of 3 × 3 = 9 zones.
Figure 10 illustrates the setting: the regions are the small squares

with black borders. In the cloaking method, the zones are the larger
squares with blue borders. For instance, any point situated in one
of the regions 1, 2, 3, 10, 11, 12, 19, 20 or 21, would be reported
as zone 1. We assume that each zone is represented by the central
region. Hence, in the above example, the reported region would
be 11.

Privacy and Quality of Service.

As already stated, we will use the metrics for privacy and for the

quality of service proposed in [36].

The ﬁrst metric is called Location Privacy (LP) in [36]. The
idea is to measure it in terms of the expected estimation error of a
“rational” Bayesian adversary. The adversary is assumed to have
some side knowledge, expressed in terms of a probability distribu-
tion on the regions, which represents the a priori probability that
the user’s location is situated in that region. The adversary tries to
make the best use of such prior information, and combines it with
the information provided by the mechanism (the reported region),
so to guess a location (remapped region) which is as close as pos-
sible to the one where the user really is. More precisely, the goal is
to infer a region that, in average, minimizes the distance from the
user’s exact location.

Formally, LP is deﬁned as:

(cid:88)

LP =

r,r(cid:48),ˆr∈R

π(r)K(r)(r

(cid:48)

)h(ˆr|r

(cid:48)

)d(ˆr, r)

where R is the set of all regions, π is the prior distribution over
the regions, K(r)(r(cid:48)) gives the probability that the real region r is
reported by the mechanism as r(cid:48), h(ˆr|r(cid:48)) represents the probability
that the reported region r(cid:48) is remapped into ˆr, in the optimal remap-
ping h, and d is the distance between regions. “Optimal” here
means that h is chosen so to minimize the above expression, which,
we recall, represents the expected distance between the user’s exact
location and the location guessed by the adversary.

As for the quality of service, the idea in [36] is to quantify its
opposite, the Service Quality Loss (SQL), in terms of the expected
distance between the reported location and the user’s exact location.
In other words, the service provider is supposed to offer a quality
proportional to the accuracy of the location that he receives. Unlike
the adversary, he is not expected to have any prior knowledge and
he is not expected to guess a location different from the reported
one. Formally:

SQL =

π(r)K(r)(r

(cid:48)

(cid:48)

, r)

)d(r

(cid:88)

r,r(cid:48)∈R

where π, K(r)(r(cid:48)) and d are as above.

It is worth noting that for the optimal mechanism in [36] SQL
and LP coincide (when the mechanism is used in presence of the
same adversary for which it has been designed), i.e. the adversary
does not need to make any remapping.

Comparing the LP for a given SQL.

In order to compare the three mechanisms, we set the parameters
of each mechanism in such a way that the SQL is the same for
all of them, and we compare their LP. As already noted, for the
optimal mechanism in [36] SQL and LP coincide, i.e. the optimal
remapping is the identity, when the mechanism is used in presence
of the same adversary for which it has been designed. It turns out
that, when the adversary’s prior is the uniform one, SQL and LP
coincide also for our mechanism and for the cloaking one.

We note that for the cloaking mechanism the SQL is ﬁxed and
it is 107.03 m. In our experiments we ﬁx the value of SQL to be

911Figure 10: The division of the map into regions and zones.

Figure 12: Location Privacy for SQL = 107.03 m.

AOR), and c so that the condition of accuracy is satisﬁed for both
methods, and then compute the respective LP measures. Let us ﬁx
rad I = 200 m, and let us choose a large conﬁdence factor, say,
c = 0.99. As for rad R, it will be determined by the cloaking
method.

√

Since the cloaking mechanism is deterministic, in order for the
condition to be satisﬁed the AOR for a given location x must extend
around the zone of x by at least rad I, In fact, x could be in the
border of the zone. Given that the cloaking method reports the
center of the zone, and that the distance between the center and
the border (which is equal to the distance between the center and
2 · 150 m, we derive that rad R must be at
√
any of the corners) is
2 · 150) m. Note that in the case of this method the
least (200 +
accuracy is independent from the value of c. It only depends on the
difference between rad R and rad I, which in turns depends on the
2·s/2,
length s of the side of the region: if the difference is at least
then the condition is satisﬁed (for every possible x) with probability
1. Otherwise, there will be some x for which the condition is not
satisﬁed (i.e., it is satisﬁed with probability 0).

√



In the case of our method, on the other hand, the accuracy con-
dition depends on c and on . More precisely, as we have seen in
(c) ≤
previous section, the condition is satisﬁed if and only if C−1
rad R − rad I. Therefore, for ﬁxed c, the maximum  only depends
on the difference between rad R and rad I and is determined by the
(c) = rad R − rad I. For the above values of rad I,
equation C−1
rad R, and c, it turns out that  = 0.016.

We can now compare the LP of the two mechanisms with respect
to the three priors above. Figure 13 illustrates the results. As we
can see, our mechanism outperforms the cloaking mechanism in all
the three cases.

√

For different values of rad I the situation does not change: as
explained above, the cloaking method always forces rad R to be
2 · 150 m, and  only depends
larger than rad I by (at least)
on this value. For smaller values of c, on the contrary, the situa-
tion changes, and becomes more favorable for our method. In fact,
as argued above, the situation remains the same for the cloacking
method (since its accuracy does not depend on c), while  decreases
(and consequently LP increases) as c decreases. In fact, for a ﬁxed
r = rad R − rad I, we have  = C−1
r (c). This follows from
r = C−1
(c) and from the fact that r and , in the expression that
deﬁnes C(r), are interchangeable.





7. RELATED WORK

Much of the related work has been already discussed in Sec-
tion 2, here we only mention the works that were not reported there.
There are excellent works and surveys [37, 26, 34] that summarize
the different threats, methods, and guarantees in the context of lo-
cation privacy.

LISA [9] provides location privacy by preventing an attacker
from relating any particular point of interest (POI) to the user’s lo-

Figure 11: Priors considered for the experiments.

that one for all the mechanisms. We ﬁnd that in order to obtain
such SQL for our mechanism we need to set  = 0.0162 (the dif-
ference with (cid:48) in this case is negligible). The mechanism of [36]
is generated by using the tool explained in the same paper.
Figure 11 illustrates the priors that we consider here:

in each
case, the probability distribution is accumulated in the regions in
the purple area, and distributed uniformly over them. Note that it is
not interesting to consider the uniform distribution over the whole
map, since, as explained before, on that prior all the mechanisms
under consideration give the same result.

Figure 12 illustrates the results we obtain in terms of LP, where
(a), (b) and (c) correspond to the priors in Figure 11. The optimal
mechanism is considered in two instances: the one designed ex-
actly for the prior for which it is used (“optimal-rp”, where “rp”
stands for real prior), and the one designed for the uniform dis-
tribution on all the map (“optimal-unif”, which is not necessarily
optimal for the priors considered here). As we can see, the Pla-
nar Laplace mechanism offers the best LP among the mechanisms
which do not depend on the prior, or, as in the case of optimal-unif,
are designed with a ﬁxed prior. When the prior has a more circular
symmetry the performance approaches the one of optimal-rp (the
optimal mechanism).

Comparing the LP for a given accuracy.

The SQL metric deﬁned above is a reasonable metric, but it does
not cover all natural notions of quality of service. In particular, in
the case of LBSs, an important criterion to take into account is the
additional bandwidth usage. Therefore, we make now a compari-
son using the notion of accuracy, which, as explained in previous
section, provides a good criterion to evaluate the performance in
terms of bandwidth. Unfortunately we cannot compare our mech-
anism to the one of [36] under this criterion, because the construc-
tion of the latter is tied to the SQL. Hence, we only compare our
mechanism with the cloaking one.

We recall that an LBS application (K, rad R) is (c, rad I )-accurate
if for every location x the probability that the area of interest (AOI)
is fully contained in the area of retrieval (AOR) is at least c. We
need to ﬁx rad I (the radius of the AOI), rad R (the radius of the

(a)(b)(c)CloakingOptimal-unifPlanar LaplaceOptimal-rp912by the INRIA Large Scale Initiative CAPPRIS. The work of Miguel
E. Andrés was supported by a QUALCOMM grant. The work of
Nicolás E. Bordenabe was partially funded by the French Defense
Procurement Agency (DGA) by a PhD grant.

10. REFERENCES

[1] Pew Internet & American Life Project.

http://pewinternet.org/Reports/2012/
Location-based-services.aspx.

[2] Google Places API. https://developers.google.

com/places/documentation/.

[3] Vodafone Mobile data usage Stats. http:

//www.vodafone.ie/internet-broadband/
internet-on-your-mobile/usage/.

[4] M. Andrés, N. Bordenabe, K. Chatzikokolakis, and

C. Palamidessi. Geo-indistinguishability: Differential
privacy for location-based systems. Technical report, 2012.
http://arxiv.org/abs/1212.1984.

[5] C. A. Ardagna, M. Cremonini, E. Damiani, S. D. C.

di Vimercati, and P. Samarati. Location privacy protection
through obfuscation-based techniques. In Proc. of DAS,
volume 4602 of LNCS, pages 47–60. Springer, 2007.
[6] B. Bamba, L. Liu, P. Pesti, and T. Wang. Supporting

anonymous location queries in mobile environments with
privacygrid. In Proc. of WWW, pages 237–246. ACM, 2008.
[7] A. Blum, K. Ligett, and A. Roth. A learning theory approach
to non-interactive database privacy. In Proc. of STOC, pages
609–618. ACM, 2008.

[8] K. Chatzikokolakis, E. Andrés, Miguel, E. Bordenabe,
Nicolás, and C. Palamidessi. Broadening the scope of
Differential Privacy using metrics. In Proc. of PETS, volume
7981 of LNCS, pages 82–102. Springer, 2013.

[9] Z. Chen. Energy-efﬁcient Information Collection and

Dissemination in Wireless Sensor Networks. PhD thesis,
University of Michigan, 2009.

[10] R. Cheng, Y. Zhang, E. Bertino, and S. Prabhakar. Preserving

user location privacy in mobile data management
infrastructures. In Proc. of PET, volume 4258 of LNCS,
pages 393–412. Springer, 2006.

[11] R. Dewri. Local differential perturbations: Location privacy

under approximate knowledge attackers. IEEE Trans. on
Mobile Computing, 99(PrePrints):1, 2012.

[12] J. E. Dobson and P. F. Fisher. Geoslavery. Technology and

Society Magazine, IEEE, 22(1):47–52, 2003.

[13] M. Duckham and L. Kulik. A formal model of obfuscation

and negotiation for location privacy. In Proc. of PERVASIVE,
volume 3468 of LNCS, pages 152–170. Springer, 2005.

[14] C. Dwork. Differential privacy. In Proc. of ICALP, volume

4052 of LNCS, pages 1–12. Springer, 2006.

[15] C. Dwork. A ﬁrm foundation for private data analysis.

Communications of the ACM, 54(1):86–96, 2011.

[16] C. Dwork, M. Hardt, T. Pitassi, O. Reingold, and R. S.

Zemel. Fairness through awareness. In Proc. of ITCS, pages
214–226. ACM, 2012.

[17] C. Dwork, F. Mcsherry, K. Nissim, and A. Smith. Calibrating
noise to sensitivity in private data analysis. In Proc. of TCC,
volume 3876 of LNCS, pages 265–284. Springer, 2006.

[18] I. Gazeau, D. Miller, and C. Palamidessi. Preserving

differential privacy under ﬁnite-precision semantics. In Proc.
of QAPL, volume 117 of EPTCS, pages 1–18. OPA, 2013.

√
2 · 150 + 200) m
Figure 13: Location Privacy for rad R = (
and c = 0.99.

cation. That way, the attacker cannot infer which POI the user will
visit next. The privacy metric used in this work is m-unobservability.
The method achieves m-unobservability if, with high probability,
the attacker cannot relate the estimated location to at least m dif-
ferent POIs in the proximity.

SpaceTwist [39] reports a fake location (called the “anchor”) and
queries the geolocation system server incrementally for the nearest
neighbors of this fake location until the k-nearest neighbors of the
real location are obtained.

In a recent paper [29] it has been shown that, due to ﬁnite preci-
sion and rounding effects of ﬂoating-point operations, the standard
implementations of the Laplacian mechanism result in an irregu-
lar distribution which causes the loss of the property of differential
privacy. In [18] the study has been extended to the planar Lapla-
cian, and to any kind of ﬁnite-precision semantics. The same paper
proposes a solutions for the truncated version of the planar lapla-
cian, based on a snapping meccanism, which maintains the level of
privacy at the cost of introducing an additional amount of noise.

8. CONCLUSION AND FUTURE WORK

In this paper we have presented a framework for achieving pri-
vacy in location-based applications, taking into account the desired
level of protection as well as the side-information that the attacker
might have. The core of our proposal is a new notion of privacy,
that we call geo-indistinguishability, and a method, based on a bi-
variate version of the Laplace function, to perturbate the actual
location. We have put a strong emphasis in the formal treatment
of the privacy guarantees, both in giving a rigorous deﬁnition of
geo-indistinguishability, and in providing a mathematical proof that
our method satisﬁes such property. We also have shown how geo-
indistinguishability relates to the popular notion of differential pri-
vacy. Finally, we have illustrated the applicability of our method on
a POI-retrieval service, and we have compared it with other mecha-
nisms in the literature, showing that it outperforms those which do
not depend on the prior.

In the future we aim at extending our method to cope with more
complex applications, possibly involving the sanitization of several
(potentially related) locations. One important aspect to consider
when generating noise on several data is the fact that their corre-
lation may degrade the level of protection. We aim at devising
techniques to control the possible loss of privacy and to allow the
composability of our method.

9. ACKNOWLEDGEMENTS

This work was partially supported by the European Union 7th FP
under the grant agreement no. 295261 (MEALS), by the projects
ANR-11-IS02-0002 LOCALI and ANR-12-IS02-001 PACE, and

(b)(a)(c)CloakingPlanar Laplace913[19] B. Gedik and L. Liu. Location privacy in mobile systems: A

personalized anonymization model. In Proc. of ICDCS,
pages 620–629. IEEE, 2005.

[20] G. Ghinita, P. Kalnis, A. Khoshgozaran, C. Shahabi, and

K.-L. Tan. Private queries in location based services:
anonymizers are not necessary. In Proc. of SIGMOD, pages
121–132. ACM, 2008.

[21] M. Gruteser and D. Grunwald. Anonymous usage of
location-based services through spatial and temporal
cloaking. In Proc. of MobiSys. USENIX, 2003.

[22] S.-S. Ho and S. Ruan. Differential privacy for location

pattern mining. In Proc. of SPRINGL, pages 17–24. ACM,
2011.

[23] B. Hoh and M. Gruteser. Protecting location privacy through

path confusion. In Proc. of SecureComm, pages 194–205.
IEEE, 2005.

[24] A. Khoshgozaran and C. Shahabi. Blind evaluation of
nearest neighbor queries using space transformation to
preserve location privacy. In Proc. of SSTD, volume 4605 of
LNCS, pages 239–257. Springer, 2007.

[25] H. Kido, Y. Yanagisawa, and T. Satoh. Protection of location
privacy using dummies for location-based services. In Proc.
of ICDE Workshops, page 1248, 2005.

[26] J. Krumm. A survey of computational location privacy.

Personal and Ubiquitous Computing, 13(6):391–399, 2009.

[27] K. Lange and J. S. Sinsheimer. Normal/independent

distributions and their applications in robust regression. J. of
Comp. and Graphical Statistics, 2(2):175–198, 1993.

[28] A. Machanavajjhala, D. Kifer, J. M. Abowd, J. Gehrke, and
L. Vilhuber. Privacy: Theory meets practice on the map. In
Proc. of ICDE, pages 277–286. IEEE, 2008.

[29] I. Mironov. On signiﬁcance of the least signiﬁcant bits for

differential privacy. In Proc. of CCS, pages 650–661. ACM,
2012.

[30] M. F. Mokbel, C.-Y. Chow, and W. G. Aref. The new casper:

Query processing for location services without
compromising privacy. In Proc. of VLDB, pages 763–774.
ACM, 2006.

[31] J. Reed and B. C. Pierce. Distance makes the types grow

stronger: a calculus for differential privacy. In Proc. of ICFP,
pages 157–168. ACM, 2010.

[32] A. Roth and T. Roughgarden. Interactive privacy via the

median mechanism. In Proc. of STOC, pages 765–774, 2010.

[33] P. Shankar, V. Ganapathy, and L. Iftode. Privately querying

location-based services with sybilquery. In Proc. of
UbiComp, pages 31–40. ACM, 2009.

[34] K. G. Shin, X. Ju, Z. Chen, and X. Hu. Privacy protection for

users of location-based services. IEEE Wireless Commun,
19(2):30–39, 2012.

[35] R. Shokri, G. Theodorakopoulos, J.-Y. L. Boudec, and J.-P.

Hubaux. Quantifying location privacy. In Proc. of S&P,
pages 247–262. IEEE, 2011.

[36] R. Shokri, G. Theodorakopoulos, C. Troncoso, J.-P. Hubaux,

and J.-Y. L. Boudec. Protecting location privacy: optimal
strategy against localization attacks. In Proc. of CCS, pages
617–627. ACM, 2012.

[37] M. Terrovitis. Privacy preservation in the dissemination of

location data. SIGKDD Explorations, 13(1):6–18, 2011.

[38] M. Xue, P. Kalnis, and H. Pung. Location diversity:

Enhanced privacy protection in location based services. In
Proc. of LoCA, volume 5561 of LNCS, pages 70–87.
Springer, 2009.

[39] M. L. Yiu, C. S. Jensen, X. Huang, and H. Lu. Spacetwist:

Managing the trade-offs among location privacy, query
performance, and query accuracy in mobile services. In Proc.
of ICDE, pages 366–375. IEEE, 2008.

914