GAME OF DECOYS:

Optimal Decoy Routing Through Game Theory

Milad Nasr

College of Information and Computer Sciences

University of Massachusetts Amherst

milad@cs.umass.edu

Amir Houmansadr

College of Information and Computer Sciences

University of Massachusetts Amherst

amir@cs.umass.edu

ABSTRACT
Decoy routing is a promising new approach for censorship
circumvention that relies on traﬃc re-direction by volun-
teer autonomous systems. Decoy routing is subject to a
fundamental censorship attack, called routing around decoy
(RAD), in which the censors re-route their clients’ Internet
traﬃc in order to evade decoy routing autonomous systems.
Recently, there has been a heated debate in the community
on the real-world feasibility of decoy routing in the pres-
ence of the RAD attack. Unfortunately, previous studies
rely their analysis on heuristic-based mechanisms for decoy
placement strategies as well as ad hoc strategies for the im-
plementation of the RAD attack by the censors.

In this paper, we perform the ﬁrst systematic analysis of
decoy routing in the presence of the RAD attack. We use
game theory to model the interactions between decoy router
deployers and the censors in various settings. Our game-
theoretic analysis ﬁnds the optimal decoy placement strate-
gies—as opposed to heuristic-based placements—in the pres-
ence of RAD censors who take their optimal censorship ac-
tions—as opposed to some ad hoc implementation of RAD.
That is, we investigate the best decoy placement given the
best RAD censorship.

We consider two business models for the real-world de-
ployment of decoy routers: a central deployment that re-
sembles that of Tor and a distributed deployment where au-
tonomous systems individually decide on decoy deployment
based on their economic interests. Through extensive sim-
ulation of Internet routes, we derive the optimal strategies
in the two models for various censoring countries and under
diﬀerent assumptions about the budget and preferences of
the censors and decoy deployers. We believe that our study
is a signiﬁcant step forward in understanding the practicality
of the decoy routing circumvention approach.

1.

INTRODUCTION

Decoy routing is a promising approach to censorship cir-
cumvention, ﬁrst proposed in the three independent studies

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
CCS’16, October 24 - 28, 2016, Vienna, Austria
c(cid:13) 2016 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ISBN 978-1-4503-4139-4/16/10. . . $15.00
DOI: http://dx.doi.org/10.1145/2976749.2978367

of DR [16], Telex [26], and Cirripede [12]. Decoy routing
presents a new paradigm in censorship circumvention:
in-
stead of the traditional approach of mounting circumvention
at the edges of the Internet [2,7,11,13,15], i.e., on computer
proxies, decoy routing suggests to deploy circumvention in
the middle of the Internet, i.e., on Internet routers called
decoy routers. Decoy routers are deployed by (friendly) In-
ternet autonomous systems (AS) that install the decoy rout-
ing functionality on their existing Internet routers, e.g., on
their border routers. To circumvent censorship using a de-
coy routing system, a censored user will need to generate
traﬃc towards benign, non-blocked Internet destinations in
such a way that it contains some covert signal for the decoy
routers.
If the user’s traﬃc is intercepted by some decoy
router on the path to its non-blocked (overt) destination,
the intercepting decoy router will re-direct the client’s traf-
ﬁc towards the forbidden Internet destination requested by
the user.

The decoy routing approach aims at defeating the stan-
dard censorship techniques deployed against traditional
proxy-based circumvention systems like Tor. Particularly,
decoy routing defeats the widely used IP address-based cen-
sorship as clients’ connections will appear to the censors to
be destined to some overt non-forbidden IP addresses. How-
ever, the end-to-middle behavior of decoy routing circum-
vention enables a unique routing-based censorship attack,
called routing around decoys (RAD) [23].
In this attack,
ﬁrst introduced by Schuchard et al. [23], the censors modify
the BGP routing policies of the ASes they control in or-
der to prevent their Internet users from reaching the ASes
that deploy decoy routers. This presents a fundamental at-
tack on decoy routing systems [8, 12, 16, 25, 26], regardless of
their speciﬁc system design. In some sense, RAD on decoy
routing is equivalent to IP address ﬁltering on proxy-based
circumvention systems.

The literature has recently seen a heated debate on the
impact of RAD attack on decoy routing systems. While
Schuchard et al. [23] present RAD as a fundamental weak-
ness of decoy routing systems, Houmansadr et al. [14] ar-
gue RAD to be prohibitively expensive to the censors (both
socially and economically) given speciﬁc decoy placement
strategies. Unfortunately, existing work on decoy routing
misses to perform a fundamental analysis on the feasibility
of RAD. Instead, previous work, either magnifying or down-
playing RAD, evaluate the attack only against heuristic-
based decoy placement strategies and ad hoc deployments
of RAD. Particularly, Schuchard et al. [23] demonstrate the
attack only against some, but not the best, decoy placement

1727strategy, and Houmansadr et al. [14] evaluate the costs of
RAD to the censors for a speciﬁc deployment of RAD, but
not the best deployment of RAD. Cesareo et al. [4] analyze
the optimum placement strategy for decoy routers—but in
the absence of a RAD adversary—and Kim et al. [18] derive
some sub-optimal decoy placement strategies without con-
sidering the economical and social costs of the RAD attack
as demonstrated by Houmansadr et al. [14].

In this paper, we take the ﬁrst systematic approach to the
problem of decoy placement in decoy routing systems under
adversarial settings. We use game theory to model the in-
teractions between the parties involved in a decoy routing
setting, particularly the censors and decoy routing deploy-
ers. We quantify the beneﬁts and costs to each of the play-
ers due to their diﬀerent strategies, and formulate their best
responses under various settings. We use game theoretic al-
gorithms to derive the best strategies for the placement of
decoy routers as well the best strategies for the implemen-
tation of the RAD attack by the censors for diﬀerent types
of censors and for various decoy deployment budgets.

This work is also the ﬁrst to study the potential busi-
ness models for the real-world deployment of decoy rout-
ing systems. We consider two business models in our anal-
ysis: First, we consider a central deployment strategy in
which an organization with a ﬁnite monetary budget pays
autonomous systems for their deployment of decoy routers.
This model is in some sense similar to systems like Tor and
VPNs in which a central organization collects funding (ei-
ther through donations or by charging the users) and pays
the expenses of deploying the circumvention system (e.g.,
through running cloud servers). Our game-theoretic analy-
sis derives the optimal set of ASes for decoy deployment, i.e.,
one that optimizes censorship resistance given the deploying
organization’s ﬁnite monetary budget.

The second business model we study is an autonomous
deployment of decoy routers. In this model, Internet ASes
decide individually whether or not to join a decoy routing
system. ASes will receive monetary incentives for deploying
decoy routers, e.g., by charging the clients, but also risk los-
ing transit traﬃc if they get blocked by the RAD censors.
Our game theoretic analysis ﬁnds the best response for each
Internet AS given the strongest deployment of RAD opti-
mized per Internet route by the censors.

We simulate the two decoy deployment models and derive
the optimal decoy placement strategies and optimal censor-
ship actions for various nation-state censors and under var-
ious assumptions about budget and censorship preferences.
We show that the optimal decoy placement strategies we de-
rive signiﬁcantly outperform the (heuristics-based) strategies
of previous work [14] in defeating censorship.

2. BACKGROUND

2.1 Decoy Routing Approach

Decoy routing circumvention was ﬁrst proposed by the
three independent works of DR [16], Telex [26], and Cirri-
pede [12]. Unlike traditional circumvention systems [2, 7,11,
13, 15] in which circumvention is deployed on Internet end-
points, i.e., on computer proxies, decoy routing systems are
implemented by some Internet autonomous systems (ASes),
called decoy ASes, who mount circumvention functionality
on their Internet routers, i.e., decoy routers.

In order to use decoy routers for circumvention, a cen-
sored client will need to establish one or multiple TLS [6]
connections to arbitrary, non-blocked Internet destinations
(e.g., non-forbidden HTTPS websites) in such a way that
her traﬃc gets routed by at least one decoy router. The
client, then, will send a covert signal to the intercepting de-
coy router stating her request for censorship circumvention.
Finally, if the decoy router accepts to serve that client, she
will deﬂect the client’s traﬃc to the censored destinations
requested by the client. This defeats the standard IP-based
censorship as the censored client’s network packets will have
an IP address that corresponds to an overt non-forbidden
TLS destination—but not the actual forbidden (covert) des-
tination.

The speciﬁc design of decoy routing systems varies from
one design to the other [8, 12, 16, 25, 26]. For instance, Cir-
ripede [12] uses the initial sequence number of TCP con-
nections for sending the covert signals to decoy routers, in
contrast to Telex [26]’s use of the TLS ClientHello random
nonce. Also, while DR [16] and Telex install all of the decoy
routing operations on Internet routers, Cirripede uses some
external servers for processing the deﬂected traﬃc. We refer
the reader to the original design papers [8, 12, 16, 25, 26] for
further details. Our analysis in this paper is indepen-
dent of the speciﬁc design of a decoy routing system,
and therefore applies to all decoy routing systems.

2.2 Routing Around Decoys (RAD)

A fundamental attack on the decoy routing approach is
the routing around decoys (RAD) attack, ﬁrst investigated
by Schuchard et al. [23]. In this attack, a censoring coun-
try modiﬁes the BGP routing decisions made by its ASes
in order to render decoy routers unusable by its censored
citizens. More speciﬁcally, if the standard (i.e., best) BGP
route from a censored client to an Internet destination con-
tains a decoy AS, the censoring country will discard that
(best) BGP route and instead use another decoy-free route
that she knows to that Internet destination (Schuchard et
al. [23] demonstrate that censors can identify decoy ASes by
sending particular probes). We refer to the alternative route
chosen by a censoring AS as an RBGP route, in contrast
to the normal BGP route.

censor).

RAD is a fundamental attack on decoy routing sys-
tems [8, 12, 16, 25, 26] regardless of their speciﬁc system de-
signs. In some sense, RAD on decoy routing is equivalent to
IP address ﬁltering on proxy-based circumvention systems.
However, performing RAD may impose various costs to the
RAD censors, as discussed in previous work [14, 23]:
1. Unreachable Destinations (C 1
It is possible
that for some Internet destinations the censor can not ﬁnd
any decoy-free routes. If the censor decides to deploy RAD
on that destination, the destination will become unreach-
able to the censor’s clients. C 1
censor is the fraction of such
destination ASes.
2. Unreachable Domains (C 2
censor). Some of a censor-
ing country’s Internet domains may be hosted outside the
censor’s network territories, e.g., on international web host-
ing services. The use of RBGP may make some of such
domains unreachable to the censors’ users. C 2
censor is the
fraction of such domains.
3. Increased Route Length (C 3
censor). The alternative
RBGP routes are likely to be longer than the standard BGP

1728routes, therefore, degrading QoS due to failures, increased
latency, etc. C 3
censor is the fraction of the censor’s Internet
routes that have become longer due to the RAD attack.
4. Expenses of Non-Valley-Free Paths (C 4
censor). The
RAD attack may require the censoring adversary to create
non-valley-free (NVF) routes between its ASes [14]. Such
NVF routes impose extra monetary expenses to the censor.
C 4
censor quantiﬁes the fraction of a censor’s paths that switch
to the expensive NVF routes.
5. Less-Preferred Routes (C 5
censor). The use of RBGP
may force a censoring AS to route some packets via a less-
preferred route, e.g., by switching from a route through a
peer AS to a route through a provider AS. This increases
the monetary expenses of routing on such routes for the
censor. C 5
censor is the fraction of the censor’s Internet paths
that switch to less-preferred routes due to RAD.
6. New Transit ASes (C 6
censor). For the RAD attack to
be more eﬀective, Schuchard et al. [23] suggest that censor-
ing ASes may share their decoy-free routes. However, this
may require the censor to transform some of its stub ASes
into transit ASes, as discussed by Houmansadr et al. [14].
C 6
censor quantiﬁes the fraction of such new transit ASes.
2.3 Past Studies on Decoy Placement

As noted earlier, Schuchard et al. [23] and Houmansadr
[14] analyzed the—non-optimal—placement of de-
et al.
coy routers in the presence of a RAD adversary. Earlier,
Houmansadr et al. [12], Cesareo et al. [4], and Kim et al. [18]
studied the placement of decoy routers in a non-adversarial
setting, i.e., ignoring RAD. Our work is the ﬁrst to study the
optimal decoy placement strategies in the presence of RAD
considering the costs to both censors and decoy deployers.
We are also the ﬁrst to study the optimal implementation of
the RAD attack; unlike previous studies of RAD [14,23], we
consider a censor who optimizes the RAD attack by making
the routing decisions per individual Internet paths.

3. NOTATIONS AND DEFINITIONS

Table 1 summarizes the main notations used in this pa-
per. Our game-theoretic analysis consists of three types of
players, censor, decoy, and ASk, as introduced later. ASi
denotes the i-th autonomous system, and Acens and Af ree
are the set of censor-controlled and free Internet ASes, re-
spectively (obviously, they diﬀer for diﬀerent state censors).
We deﬁne every ordered pair of ASes, Pi,j = (ASi, ASj),
as an Internet path from the ﬁrst AS to the second AS.
Therefore, Pi,j (cid:54)= Pj,i. By contrast, we deﬁne Ri,j = R(Pi,j)
as the BGP route (simply, route1) for path Pi,j, i.e., the
BGP route from ASi to ASj. A route, if exists, will be
an ordered list of ASes, Ri,j = (ASi, AST
k , ASj),
where each AST∗ is a transit AS (if the route does not exist,
Ri,j = ∅). We call the route Ri,j to be a decoyed route if
at least one of the ASes on the route is a decoy AS, otherwise
we call it a decoy-free route.

1 , ..., AST

For each path, Pi,j, the censor will decide one of the two
actions of aBGP or aRBGP in order to route the packets on
that path, as described later. Ac = (a(Pi,j)|∀Pi,j ∈ P) is
the strategy of censor, where P is the set of all paths. In
our ﬁrst game, decoy’s strategy, Ad, is the set of ASes it
selects for decoy deployment. In our second game, each ASk
1This path vs. route deﬁnition is unique to our work; others
may use them interchangeably.

decides individually from {aDeploy, aN otDeploy} to whether
or not deploy decoy routers.
Censorship Metric: The goal of a RAD-capable cen-
sor is to minimize the number of the Internet paths in P
that are served through decoyed routes (and therefore can
be used by the censor’s clients for circumvention). We scale
each of these routes with the size of its origin (censoring)
AS since this represents the number of potential censored
clients who can use that decoyed route. We additionally
scale each decoyed route with the size of its destination AS:
as discussed by Houmansadr et al. [12], the more overt IP
addresses available to the decoy users the better unobserv-
ability the system will oﬀer to its users. We therefore formu-
late the eﬀectiveness of censorship by a RAD-capable censor
with a censorship metric deﬁned as:

ASi∈Acens

ASj∈Af ree

ASi∈Acens

ASj∈Af ree

||ASi|| · ||ASj|| · δ(Ri,j)

||ASi|| · ||ASj||

(cid:80)

(cid:80)

(cid:80)

(cid:80)

(cid:40)

S = 1 −

where we deﬁne δ(·) as

(1)

(2)

δ(Ri,j) =

1 Ri,j has at least one decoy
0 Ri,j has no decoy ASes or if Ri,j = ∅

Note that if the censor makes a path unreachable (i.e.,
Ri,j = ∅) we still consider that a successful censorship,
though it will be at the cost of unreachability.

4. GAME ONE: CENTRAL
DECOY DEPLOYMENT

In this game, we consider a central decision maker for the
decoy routing system. That is, we consider a decoy routing
system player, decoy, who selects the Internet ASes to de-
ploy decoy routing. The decoy player has a ﬁnite monetary
budget, which she uses to pay the selected ASes for their de-
ployment of decoy routers. The fees paid to each AS will be
proportional to their importance in the operation of decoy
routing (e.g., their sizes).

This model captures the ﬁnancial model behind exist-
ing centrally-operated circumvention systems like Tor [7], in
which a circumvention organization collects monetary fund-
ing for the operation of the circumvention system (in Tor
the funding goes to paying staﬀ and running some servers).
As shown by Houmansadr et al. [14], the location of decoy
routers is critical in resisting RAD. Therefore, the goal of
decoy in our game is to choose the optimal set of ASes for
decoy deployment such that this maximizes resistance to the
RAD attack given decoy’s ﬁnite monetary budget.
4.1 Players and Their Actions

Our game is played between decoy and a censoring ad-
versary, censor. We consider both censor and decoy to be
rational, i.e., each make their decisions in a way to maximize
their utility functions, as deﬁned later.

1. Central Decoy Placement System (decoy): The
decoy player is the single entity who chooses a set of Inter-
net ASes and pays them money to mount decoy routing on
their border routers. The objective of the decoy player is
to provide uncensored Internet access to a large fraction of
users censored by censor.
Recall that Af ree is the set of all Internet ASes outside
the censorship region, and Acens is the set of ASes controlled

1729Table 1: The list of the notations used in the paper

Notation
censor, decoy, and ASk
ASi
Acens
Af ree
||ASi||
Pi,j = (ASi, ASj)
Ri,j = R(Pi,j)
= (ASi, AST
P
a(Pi,j) ∈ {aBGP , aRBGP}
Ac = (a(Pi,j)|∀Pi,j ∈ P)
Ad ⊆ Af ree
ak ∈ {aDeploy, aN otDeploy}

1 , ..., AST

k , ASj) or ∅

β = (β0, ..., β6)

Description
The players in the two games, as described later
The i-th autonomous system (AS)
Set of all ASes in the censoring country
Set of all ASes out of the censoring country
Size of the AS ASi (number of IP addresses)
The Internet path from ASi to ASj. Note that Pi,j (cid:54)= Pj,i.
The BGP route from ASi to ASj
Set of all paths from Acens to Af ree
The action that censor takes for path Pi,j. Action aBGP is to use BGP
do derive R(Pi,j), whereas aRBGP is to use RBGP.
Vector of censor’s routing decisions (i.e., censor’s strategy)
Set of decoy ASes (which is decoy’s strategy)
The strategy of the ASk player in game two. aDeploy is to deploy decoy
routing and aN otDeploy is otherwise.
censor’s proﬁle

by censor. Decoy’s action space is the set of all subsets of
Af ree. That is, Ad = {AS1, ..., ASk|0 ≤ k ≤ ||Af ree||} ⊆
Af ree is a possible action for decoy in the game. Taking the
Ad = {AS1, ..., ASk} action by decoy means that she will
pay the ASes AS1,...,ASk to deploy decoy routers.

We consider decoy to have a ﬁnite monetary budget, F , to
pay the selected ASes in Ad for decoy deployment. That is,
if C(ASi) is the fee decoy pays to ASi for decoy deployment,

we have that(cid:80)||Ad||

i=1 C(ASi) ≤ F .

2. Censorship entity (censor): The censor player is
a nation-state that censors the Internet access of its citizen
Internet users. The main objective of censor in our game
is to interfere with the operation of decoy, i.e., prevent cen-
sored users from using the decoy routing system for getting
around censorship. The main technique used by censor to
do so is the RAD attack described in Section 2.2.2

For each Internet path Ps,d = (ASs, ASd), where ASs is
an AS controlled by censor (i.e., a Chinese AS) and ASd is
a non-censored AS, censor takes one of the following two
if a(Ps,d) = aBGP censor will use the standard
actions:
BGP protocol to ﬁnd the BGP route from ASs to ASd,
and if a(Ps,d) = aRBGP , censor will use RBGP (as de-
scribed in Section 2.2) to ﬁnd the route (as discussed in
Section 2.2, an RBGP route may not exist, i.e., Rs,d = ∅).
The actions taken by censor for diﬀerent Internet paths
are taken individually; censor’s strategy in the game is
Ac = (a(Pi,j)|∀Pi,j ∈ P).
4.2 Utility Functions

We derive the game-theoretic utility functions of the two

players.

4.2.1 The Decoy Player
Beneﬁt: The goal of decoy is to maximize the censor-
ship resistance oﬀered to the censored users. We therefore
quantify her beneﬁt with the censorship metric of (1):

Bdecoy = 1 − S

(3)

2RAD is the core attack known against decoy routing sys-
tems. Our model can be extended to consider other attacks
proposed in the future.

Cost: Decoy’s cost is the sum of the monetary fees she has
to pay to the selected ASes for decoy deployment:

Cdecoy =

C(ASi)

(4)

(cid:88)

ASi∈Ad

where C(ASi) is the deployment fee charged by ASi, which
includes the installation and operational costs of decoy rout-
ing. Therefore, we estimate C(ASi) based on the size of ASi,
as well as the economic/political relationship between ASi’s
country and censor, i.e.,

C(ASi) = ρ0||ASi|| · Relation(ASi)

(5)

where Relation(ASi) represents ASi’s relationship with
censor. ρ0 transforms the cost to dollar values. We will
discuss the choice of these parameters in Section 6.3.

We assume that decoy uses all of its budget, F , for decoy
deployment. Therefore, we quantify the utility of decoy as

Udecoy = Bdecoy

subject to Cdecoy ≤ F

(6)

where F is decoy’s ﬁnite budget. Decoy’s objective is to
maximize Udecoy subject to the Cdecoy ≤ F constraint. In-
tuitively, the larger the budget, the stronger the censorship
resistance oﬀered by decoy.

4.2.2 The Censor Player
Beneﬁt: The main objective of censor is to prevent its
Internet users from using the decoy routing system for cir-
cumvention. Therefore, we quantify its beneﬁt with the cen-
sorship metric deﬁned in (1):

Bcensor = S

(7)

Cost: As discussed in Section 2.2, switching to RBGP
instead of the standard BGP for an Internet path may im-
pose two types of costs on the censor player. First, it can
degrade the quality-of-service for censor’s benign (i.e., non-
circumvention) Internet users, potentially causing collateral
damage. Second, it may incur higher monetary costs to cen-
sor’s ASes for routing packets. We quantify the utility func-
tion of censor based on the cost metrics C i
censor(i = 1, ..., 6)

1730Algorithm 1 Finding decoy’s best response (game one)

Ad ← {}
while Cdecoy < F do
decoy =(cid:80)

Sort ASes : For each ASi compute its beneﬁt contribution:
(ASs,ASd)∈P ||ASs|| · ||ASd||1{ASi ∈ Rs,d} Sort ASes by their
BASi
beneﬁts.
Pick ASes: Choose the AS with the highest beneﬁt and
add to Ad.
Update: Remove all the routes that contain the selected
AS.
d ← {}
A(cid:48)
while Cdecoy < F do
Sort ASes : For each ASi compute its beneﬁt contribu-
(ASs,ASd)∈P ||ASs|| · ||ASd||1{ASi ∈ Rs,d})/C(ASi) Sort
tion:
ASes by their beneﬁts.
Pick ASes: Choose the AS with the highest beneﬁt and
add to A(cid:48)
d.
Update: Remove all the routes that contain the selected
AS.
Return A(cid:48)

if Udecoy(Ad) < Udecoy(A(cid:48)

d) then

decoy = ((cid:80)

BASi

Return Ad

d

deﬁned in Section 2.2:

Ucensor = β0Bcensor − 6(cid:88)

i=1

βiC i

censor

(8)

We deﬁne β = (β0, β1, ..β6) as censor’s proﬁle, which
demonstrates how much she cares about each of the cost
metrics with respect to the enforced censorship.
In Sec-
tion 6, we perform our analysis for diﬀerent censor proﬁles.
The objective of censor in the game is to maximize Ucensor.
4.3 Mechanism Design

We consider the set of actions available to the censor and
decoy players as well as their corresponding utility functions
(as derived in Sections 4.1 and 4.2), to be public knowledge.
Therefore, we model this game as a “complete information”
game [21]. This allows each player to simulate the game in
order to ﬁnd her own best response. That is, decoy can use
our analysis to identify the location of optimum decoy ASes
given her ﬁnite budget, and censor can use the analysis to
decide her optimum routing actions for its Internet paths.
Best response of decoy.
The best response of decoy
given censor’s action Ac is the set of ASes chosen for decoy
deployment that maximizes decoy’s utility function of (6)
given her known ﬁnite budget:

∗
A
d = argmax

Ad

Udecoy|Ac

(9)

This problem can be interpreted as a “budgeted maxi-
mum coverage” problem [17], which is known to be NP-hard.
However, we are able to converge to the solution through
approximation. As we prove in Lemma 2, decoy’s utility
function is a monotone submodular function [9]. This allows
us to use Leskovec et al.’s greedy algorithm [20] to ﬁnd a
sub-optimal best response for decoy within O(1 − 1
e ). Algo-
rithm 1 sketches our greedy algorithm.
Best response of censor. The best response for cen-
sor given decoy’s action Ad is an Ac vector (as deﬁned in
Section 4.1) that maximizes the utility function of (8):

A

∗
c = argmax

Ac

Ucensor|Ad

(10)

We consider the elements of Ac to be independent,
i.e.,
the actions for diﬀerent paths are taken independently
by censor. This is because (a) the beneﬁt function of
(7) can be decomposed into the independent elements of
||Ai|| · ||Aj||(1 − δ(Ri,j)), and, (b) each of the cost com-
ponents in (8) can be represented as the sum of the costs
across all paths.3 Using this independence assumption, we
decompose the maximization problem of (10) into ||P|| inde-
pendent maximization problems, which is solvable in poly-
nomial time (i.e., with 2||P|| computations since there are
two potential actions for each path).
Finding the Equilibrium: The goal of our analysis is
to ﬁnd an equilibrium point for the game, which is a pair
(A∗
c ) that satisﬁes both (9) and (10) concurrently. In a
real-world deployment of decoy routers, we expect the play-
ers reach such an equilibrium point after potentially chang-
ing their strategies for several times.

d, A∗

In our analysis we only seek a pure Nash equilibrium, but
not a mixed one [21]. This is because mixed strategies do
not have real-world interpretations in scenarios where play-
ers’ actions are observable to each other (see the network
design problem [1] and facility location game [24] as exam-
ples). In our game also the censor and decoy players can ob-
serve the actions taken by each other: Schuchard et al. [23]
demonstrate that censors can infer the identities of decoy
ASes with very high conﬁdence. Also, decoy can observe
censor’s routing decisions by sending decoy routing traﬃc
from inside the censorship region to the decoy routers.

However, not every game has a pure Nash equilibrium [24]
(or if it does, ﬁnding it is not necessarily straightforward).
We therefore solve the game by ﬁnding a pure ε−Nash equi-
librium through empirical analysis.4 Particularly, we use
the best-response dynamics algorithm [19] for converging to
an ε−Nash equilibrium. The algorithm is run in multiple
iterations until no player can improve its utility beyond a
threshold ε by changing strategy.

5. GAME TWO: AUTONOMOUS

DECOY DEPLOYMENT

In this game, we consider the ﬁnancial model where au-
tonomous systems decide individually whether or not to de-
ploy a decoy routing system. Unlike game one in which
a central decoy player pays ASes to deploy decoy routing,
in this game each AS individually decides to deploy or not
based on her own economic interests.
5.1 Players and Their Actions

This game is played between n + 1 players: a censor
player, which is the same as the one in game one, and n
autonomous system players, which are the ASes in the free
world, i.e., n = ||Af ree||. From a high level, the objective of
each AS player is to maximize her monetary revenue, and
the goal of censor is to optimize the enforced censorship.

1. Censorship entity (censor): This player is exactly

the same as the censor player of game one (Section 4.1).

3In reality, if changing the route of some path signiﬁcantly
changes the load on some Internet links, this may increase
the latency for other Internet routes as well, however, we
assume that in the long run Internet transit ASes will catch
up with the changes to their transit traﬃc volumes.
4In an ε−Nash equilibrium point, changing one player’s
strategy may increase its utility by a maximum of ε.

17312. n AS Players (ASk for 1 ≤ k ≤ n = ||Af ree||): This
includes all ASes not-controlled by censor. Each AS player
will decide autonomously whether or not to deploy decoy
routing based on her economic interests. We show ASk’s
action as ak ∈ {aDeploy, aN otDeploy}, where aDeploy is the
decision to deploy decoy routing and aN otDeploy is otherwise.
5.2 Utility Functions

We quantify the utility functions of the players as follows.

5.2.1 The Censor Player
This is the same as what we derived in (8) for game one.

5.2.2 AS Players
For each AS player ASk, we deﬁne SASk as the set of all
routes in P (from Acens to Af ree) that go through ASk:
SASk ={Rs,t|ASs ∈ Acens, ASt ∈ Af ree, ASk ∈ Rs,t}
(11)
For each route Rs,t ∈ SASk , ASk will earn monetary rev-
enue for transiting traﬃc on Rs,t if ASk is a “provider” [14] on
Rs,t. The action that ASk chooses from {aDeploy, aN otDeploy}
in the game, combined with the actions of the other n− 1 AS
players and censor, may impact ASk’s revenue (i.e., utility)
for each route Rs,t ∈ SASk as follows:
• If censor takes the aRBGP action for Rs,t, ASk will lose
the transit revenue (if any) she would normally receive
for that route.
• If censor takes the aBGP action for Rs,t, ASk will keep
the transit revenue for that route. Additionally, ASk
will earn extra monetary revenue for serving the de-
coy routing users who use Rs,t only if (1) ASk decides
to be a decoy (ak = aDeploy) and (2) ASk is the ﬁrst
decoy AS on Rs,t. In a practical deployment, this rev-
enue may come from diﬀerent sources: decoy clients
can pay directly for the service they receive (similar to
paid VPN services), pro-freedom NGOs can pay decoy
routers per the volume of decoy traﬃc they serve, etc.
Note that the actions of each AS player may impact the
utility of other AS players as well, even if they choose the
aN otDeploy action. For each route Rs,t, we quantify the
monetary revenue of transit traﬃc as well as decoy traﬃc
to be proportional to the volume of the traﬃc routed on
that route. For the lack of comprehensive data on traﬃc
loads across Internet routes, we use ||ASs|| · ||ASt|| as an
estimate. Therefore, we quantify ASk’s utility as:

||ASs|| · ||ASt||(1 + γ.σ(Rs,t, ASk))

(cid:88)

UASk = ρ1

Rs,t∈SASk

(12)
where the ﬁrst term in the summation corresponds to the
transit traﬃc revenue and the second term is the decoy rout-
ing revenue. σ(Rs,t, ASk) = 1 if ASk is a decoy and it is the
ﬁrst decoy AS on Rs,t, otherwise σ(Rs,t, ASk) = 0. We use γ
to scale the decoy routing revenue with respect to the transit
revenue. We call γ as the service fee of decoy ASes. ρ1 is a
scaling factor to convert to the dollar value.
5.3 Mechanism Design

Similar to the game one, we consider the set of actions
available to each of the censor and AS players as well as
their corresponding utility functions to be public knowledge.
Therefore, our game is a “complete information” game [21],

Algorithm 2 Finding equilibrium in game two

d ← {}
A(cid:48)
Ad ← {}
Ac ← CBGP
while T rue do

Ad ← AS actions (Step 1)
ratio ← |Ad∩A(cid:48)
d|
|Ad∪A(cid:48)
|
Ac ← Censor Best Response (Step 2)
if ratio ≥ τ then

d

EQ ← ref ineEQ(Ad ∩ A(cid:48)
return EQ
d ← Ad
A(cid:48)

d, Ac)(Step 3)

Def reﬁneEQ(ASes,R):
Selected ← ASes
Ad ← ASes
Ac ← R
Converged ← F alse
History = {ASes}
while !Converged do

Ad ← AS actions (Step 1)
Ac ← Censor Best Response (Step 2)
if Selected ∩ Ad (cid:54)= Selected then
Selected = Ad (cid:54)= Selected
History = {Selected}
Converged ← T rue

if Ad ∈ History then

History.append(Ad)

Return Selected, Ac

which enables censor and each AS player to simulate the
game and ﬁnd their own best responses.
Best response of censor. We derive this as:
Ucensor|ak(1 ≤ k ≤ n)

∗
A
c = argmax

(13)

Ac

a

argmax

where Ucensor is given by (8), and ak is the action of ASk.
Best response of ASes.
The best response for an AS
k ∈ {aDeploy, aN otDeploy} that
player, ASk, is the action a∗
maximizes her utility UASk derived in (12) given the actions
of the other n − 1 AS players and censor:
∗
k =

UASk|Ac, aj(1 ≤ j ≤ n, j (cid:54)= k)
(14)
Finding the Equilibrium: The game’s equilibrium is
(A∗
c ) concur-
rently satisﬁes (14) for all n ASes and (13) (n + 1 equations).
Similar to the previous game, we only consider the pure
equilibrium, since mixed strategies do not have real-world
interpretations in the decoy application.

i = aDeploy}. (A∗

ak∈{aDeploy ,aN otDeploy}

d = {ASi|a∗

d, A∗

d, A∗

c ), where A∗

Finding the equilibrium in this game poses as a complex
computational problem as it involves n + 1 equations. To
be able to solve this in polynomial time, we translate the
game into a game played in three steps in multiple rounds.
Algorithm 2 summarizes how we simulate the game.

Step 1 (n ASes taking actions): In this step, each of
the n AS players take an action that maximizes their utility
in (14) (i.e., a∗
k for ASk) given a ﬁxed, known censor action,
Ac, which may or may not be censor’s equilibrium action.
In other words, given censor’s known routing decisions for
all Internet routes, each AS decides to whether or not deploy
decoy routing based on her utility function. Each AS’s ac-
tion can potentially impact the utility of other AS players.
Therefore, we model step 1 as a “non-cooperative facility lo-
cation” game [24]. A facility location game is composed of
multiple service providers as well as multiple users seeking

1732service, where the game aims at ﬁnding the best locations
for servers to maximize their individual beneﬁts.

We use the best response dynamics [21] to ﬁnd the equi-
librium of this game, which is known as a standard mech-
anism for facility location games [24] and is shown to be
computable in polynomial time by Vetta [24]. The outcome
of this step is a A∗

d set, containing the set of decoy ASes.

Step 2 (censor taking actions): Assuming that censor
knows the actions taken by all AS players, i.e., he knows Ad,
censor will derive his best response A∗
c given in (13). We
use the mechanism described in Section 4.3 (under “Best
response of censor”) to derive A∗
c , which is a polynomial
time algorithm as discussed in that section.
d, A∗
c ), derived in steps
1 and 2, is an ε−Nash equilibrium point we terminate the
algorithm, otherwise we go to step 1. If an ε−Nash equilib-
rium has been achieved, the improvement in each player’s
utility function will be smaller than ε if the players decide
to change their actions.

Step 3 (Reﬁneing): If the pair (A∗

Our game is composed of n AS players. As n is a large
number (e.g., n = 49, 745 for China) some of the AS players
may take longer to reach an equilibrium state in our simula-
tions. We, therefore, terminate the game when a large ratio
(τ = 0.9) of AS players have reached their equilibrium, i.e.,
when Ad does not change signiﬁcantly between the consec-
utive iterations.

6. SIMULATIONS
6.1 Experimental Setup and Datasets

We use C-BGP [22],5 a widely used Internet route sim-
ulator, to infer BGP routes between Internet ASes in our
experiments. We also code an RBGP simulator in Python
that implements the RAD attack as described before [14,23].
Our RBGP simulator uses C-BGP as its engine to ﬁnd the
routes. We run our computation-intensive simulations (i.e.,
routes between over 50,000 Internet ASes in diﬀerent set-
tings) on Google Compute Engine.6

Our game-theoretic algorithms (e.g., to ﬁnd equilibrium)
are implemented in Python and are run on a Linux box with
64GB of memory and 3.5GHz Xeon(R) CPU. We use mul-
tiple optimization techniques to speed up the algorithms,
including dynamic programming,
lazy evaluation, and in-
memory databases. Particularly, we use the Redis7 in-
memory data structure to manage the tremendous volume
of routing records, DNS records, and the other datasets used
in our experiments.

We make use of the following datasets in our experiments:
• We use CAIDA’s “Jan 2016” AS relationships
database [3] to model the business relationship be-
tween ASes.
• We use GeLite2 geo-location database8 for the map-
ping between IP addresses and geographical locations.
• We use CAIDA’s AS rank dataset9 to map between

ASes and IP address ranges, also for AS sizes.

5We do understand that the C-BGP simulator has inaccu-
racies in inferring paths between ASes, but since such inac-
curacies are uniform across all routes we expect them not to
impact our analysis signiﬁcantly.
6https://cloud.google.com/compute/
7http://redis.io/
8http://www.maxmind.com
9http://as-rank.caida.org/

relationship between countries.

• We use the OEC10 dataset [10] to infer the economical
• We use the DNS Census dataset11 composed of about
2.5 billion DNS records to ﬁnd the domain names be-
longing to various censoring countries. This is partic-
ularly used in evaluating C 2

censor.

6.2 Proﬁles for the Censor Player

As described earlier, we characterize each real-world cen-
sor with a proﬁle, β = (β0, ..., β6), which represents how
much that censor cares about the cost metrics compared to
the achieved censorship. More speciﬁcally, β0 represents the
importance of censorship eﬀectiveness to censor, whereas β1
to β6 show how much censor wants to avoid the collateral
censorship costs, as deﬁned in Section 2.2.

Intuitively, the game’s outcome highly depends on the
censor proﬁle, i.e., β impacts censor’s best routing strategy
as well as the best decoy placement strategy. We therefore
perform our analysis for diﬀerent censor proﬁles. We par-
ticularly use the representative proﬁles shown in Table 2 in
our analysis. In the real world, a nation-state censor may
change its proﬁle from time to time, e.g., may take a harsher
proﬁle during a political unrest.

censor to C 6

A “wealthy” censor can sustain large monetary expenses,
therefore, her proﬁle has low values for β4 to β6, which scale
the monetary cost metrics of C 4
censor. By con-
trast, a “poor” censor has high values for β4 to β6. A “QoS-
cautious” censor strongly desires to avoid degradation in In-
ternet quality-of-service for its citizens, so she has high val-
ues for β1 to β3, which scale the QoS cost metrics of C 1
censor
to C 3
censor. This is in contrast to a “QoS-ignorant” censor
who does not care about the QoS cost metrics. As an ex-
treme censor proﬁle, the “irrational” censor aims to deploy
the strongest form of censorship with little concern about
QoS and with ample monetary resources (a high β0 shows
the censor’s desire for the strongest censorship). We also de-
ﬁne the “reachability-cautious” and “domain-cautious” pro-
ﬁles, that aim to preserve speciﬁc QoS properties, e.g., T4 is
highly concerned about Internet reachability for its users.

In our analysis, we use the values in Table 3 as high and
low values for each βi. Note that what is important to our
analysis is not the absolute values of βi’s, but how they
compare relatively.

6.3 Other Parameters and Settings
Relation(ASi): The Relation(ASi) function represents
the economic relationship between ASi and the censoring
country, and is part of the decoy deployment cost function in
(5). The stronger this relationship, the higher the economi-
cal costs of decoy deployment for ASi (i.e., the less likely for
ASi to deploy decoy routers). We quantify Relation(ASi)
based on the economic relationship of ASi’s country with
censor. Speciﬁcally, we estimate Relation(ASi) with the
sum of the import and export rates between the two coun-
tries, derived from the OEC dataset [10]. Also, as sug-
gested previously [14, 23], we consider the ring ASes of a
censoring country to be extremely unlikely to deploy decoy
routers due to their direct business interaction with the cen-
soring ASes. We therefore assign signiﬁcantly large values to

10http://atlas.media.mit.edu/en/resources/data/
11https://dnscensus2013.neocities.org/index.html

1733Table 2: Various censor proﬁles (H:High, L:Low)

Table 3: H and L values

β1

β2

β3

β0
Feature
Cens QoS QoS QoS
Impacts
L
T1: QoS-cautious, wealthy
L
T2: QoS-cautious, poor
T3: QoS-ignorant, poor
H
T4: Reachability-cautious, wealthy H
H
T5: Domain-cautious, wealthy
T6: Irrational
H

H
H
L
H
L
L

H
H
L
L
H
L

H
H
L
L
L
L

β5
$
L

β6
β4
$
$
L
L
H H H
H H H
L
L
L
L
L
L

L
L
L

Coeﬃcient High Low
β0
β1
β2
β3
β4
β5
β6

1
0.0
0.0
0.0
0.0
0.0
0.0

50
10
10
10
10
10
10

Table 4: Number of ASes in Each Country

Country
China
Syria
Saudi Arabia
Venezuela

ASes #Rings
573
4
107
44

858
5
176
835

censor: We derive these as deﬁned in Section 2.2.

Relation(ASi) for all ring ASes of censor, eﬀectively caus-
ing no ring AS to deploy decoy routers in our simulations.
F, ρ0, ρ1, and γ: We will present our simulation results for
diﬀerent values of F/ρ0 in game one, and for diﬀerent values
of γ in game two. F/ρ0, which is the budget ratio, represents
the monetary budget of the central decoy deployer in game
one. Also, the service fee γ represents the monetary fee to
be charged by decoy ASes for decoy traﬃc in game two. The
value of the ρ1 parameter in (12) does not matter as it does
not impact the maximization problem of (14).
Ci
Mapping ASes to countries: We use the GeLite2 and
CAIDA AS rank datasets to map the 52, 351 Internet ASes
to countries. Some ASes are assigned to multiple countries
in the two datasets. If an AS is assigned to both a censoring
country and a free country, we consider it as a censoring AS
to make the simulations in censor’s favor. We also identify
each country’s ring ASes as the ASes with a direct link to
the country’s ASes. Table 4 shows the number of ASes and
ring ASes for the censoring countries of our experiments.
On the optimality of the results: As discussed ear-
lier, our algorithms ﬁnd the near-optimal strategies for de-
coy placement and censorship, i.e., our results are ε-Nash
equilibria with ε = 0.1 in most cases. To ﬁnd the most con-
servative decoy placement, we always let censor make the
ﬁnal move in the games.

6.4 Game One Experiments

We use the game theoretic analysis of Section 4 to con-
verge to the optimal decoy placement strategies when the
censors are taking optimal censorship actions. We perform
our simulations for the four censoring countries in Table 4,
which represent censors with various Internet connectivity
(and therefore diﬀerent censorship capability). We start our
evaluation by discussing the results for China, which is the
strongest censoring country among the list due to its highly
well-connected network. Next, we will compare the results
across the censoring countries.
How the routes change. The routing decisions made
by censor in the game impacts the Internet routes of the
censor’s Internet users. For instance, as we see in Figure 1,

Figure 1: Central decoy deployment (game one): Impact on
Chinese routes for a budget ratio of F/ρ0 = 5∗ 106 and a T1
censor proﬁle.

if decoy has a budget ratio of F/ρ0 = 5 ∗ 106, the opti-
mal routing decision of the Chinese censor with a proﬁle
T1 causes 10.8% of the routes to become NVF, and 1.2% to
go through less-preferred routes. For this particular censor
proﬁle, even the best censorship strategy leaves 16.3% of the
routes available to the Chinese users for decoy routing.
Impact of decoy budget. As intuitively expected, de-
coy’s budget signiﬁcantly impacts the success of decoy rout-
ing circumvention in game one. That is, with more budget
decoy can choose more ASes and/or more eﬀective ASes for
decoy deployment. As noted earlier, we use the budget ratio
(F/ρ0) as a metric to represent the monetary budget avail-
able to the central decoy deployer, decoy. Figure 2 shows
how decoy’s budget impacts the utility of the decoy rout-
ing system as well as the censorship metric for China as
the censor with a T1 (QoS-cautious, wealthy) proﬁle. As
expected, increasing decoy’s budget improves censorship re-
sistance, i.e., reduces the censorship metric S, as it allows
the central decoy deployment organization to install decoy
routing on more Internet ASes, and/or on the more eﬀective
ASes (e.g., those on more routes). The ﬁgure also shows how
diﬀerent cost metrics for censor change with decoy’s bud-
get. As can be seen, the monetary cost metrics (C 4
censor to
C 6
censor) ﬁrst show an increase with F/ρ0 but at some point
start declining since switching to more expensive routes will
no longer improve the censorship success for censor.

Note that our evaluation is with respect to the budget ra-
tio parameter, F/ρ0, but not the actual budget F . One can
infer the actual dollar budget by investigating the real-world
deployment cost of decoy routers in (5), therefore estimating
and eliminating ρ0 from F/ρ0. We leave this to future work.

Decoy(16.3%)LessPreferred(1.2%)NVF(10.8%)Unreachable(0.0%)Notchanged(71.7%)1734Figure 3: Comparing our central decoy placement strategy
(game one) with state-of-the-art mechanisms [14].

complete censorship, e.g., they can entirely disconnect their
country from the Internet as witnessed in Egypt [5].
Comparison with previous work: We compare our
(near-)optimal decoy placement mechanism with the (non-
optimal, heuristics-based) decoy placements proposed in
previous work. Speciﬁcally, we compare our decoy place-
ment with the state-of-the-art decoy placement mechanisms
proposed by Houmansadr et al. [14], i.e., the “sorted” and
“random” placements. This is shown in Figure 1 for dif-
ferent budget ratios. As can be seen, our decoy place-
ment mechanism is signiﬁcantly more eﬀective than
previous mechanisms in defeating censorship. That
is, given the same budget for decoy deployment our decoy
placement results in better censorship circumvention perfor-
mance, i.e., a smaller censorship metric—and this is given
the “best“ censorship strategy, not just some strategy as in
prior work [14]. For instance, for the budget of F/ρ = e8
our decoy placement achieves a censorship metric of 0.2 as
opposed to 0.42 for “sorted” [14].
Comparing censoring countries. We perform our sim-
ulations for the 4 representative censoring countries in Ta-
ble 4. The countries represent various kinds of censoring
countries regarding their Internet connectivity. China has
the best connectivity to the Internet with the largest num-
ber of ASes and ring ASes, whereas Syria poses a weak con-
nectivity. Table 6 compares the censorship performance and
cost metrics for the four countries for the censor proﬁle T1
and given a ﬁxed decoy deployment budget. We have sorted
the countries in the descending order of the censorship met-
ric. As can be seen, China poses as the strongest censor
because of its highly connected Internet, while Syria is the
weakest censor because of its poorly-connected Internet. We
also see that even though Venezuela has less ASes than Saudi
Arabia, it is a slightly stronger censor in this setting, pre-
sumably because of its larger number or ring ASes. Finally,
we see that given the same budget, the optimal set of de-
coy ASes diﬀer for diﬀerent countries, as evident from the
number of decoy ASes in each case.
6.5 Game Two Experiments

Figure 2: Impact of decoy’s budget ratio (F/ρ0) on the cen-
sorship metric and censorship costs (censor is China with a
T1 proﬁle).

Impact of censor proﬁles. The optimal censorship strat-
egy depends on the censor’s proﬁle, i.e., censors will make
routing decisions based on their preferences on the cost met-
rics with respect to the censorship metric. This in turn will
impact the optimal set of decoy ASes for the central decoy
deployer. Table 5 compares the cost metrics as well as the
censorship metric for China for diﬀerent censorship proﬁles.
We see that the censorship costs as well as the achieved
censorship largely varies across the proﬁles. For instance,
comparing T2 (QoS-cautious, poor) and T3 (QoS-ignorant,
poor) we see that if the Chinese censor does not care about
the QoS oﬀered to its clients, it can improve the censorship
metric from 0.229 to 0.949 (given the same monetary re-
sources for the censor). This, however, comes at the price of
making 70.3% of all Internet routes becoming unreachable to
the Chinese users, potentially causing collateral damage and
unrest. On the other hand, we see that if China is commit-
ted to preserving QoS, i.e., not to cause collateral damage,
even if they spend signiﬁcant amounts of money (i.e., pro-
ﬁles T1 and T4) the censorship metric they can achieve will
be around 0.27. This is a promising ﬁnding for the de-
coy routing approach indicating that if there is enough
monetary budget for decoy deployment, “rational” censors
will not be able to evade it even if they spend big money.
On the other hand, we see if China acted irrationally (proﬁle
T6) they can achieve perfect censorship at the price of signif-
icant QoS degradation to their users. This is not speciﬁc to
decoy routing systems; irrational censors can always achieve

0.10.20.30.40.50.60.70.80.9UdecoyS0.0020.0040.0060.0080.0100.0120.0140.0160.0180.020NVF(C4)0.0050.0100.0150.0200.0250.030LessPreferred(C5)0.0260.0270.0280.0290.0300.0310.032NewTransit(C6)050000000100000000150000000200000000Fρ010002000300040005000600070008000900010000#Decoys(|Ad|)0.00.51.01.52.0Fρ0×1080.10.20.30.40.50.60.70.80.91.0S(CensorshipMetric)Optimal(Gameone)sorted[14]random-no-ring-10[14]1735Table 5: Central decoy deployment (game one): Comparing the impact of diﬀerent censor proﬁles on various cost metrics
and the censorship success. The censor is China and decoy’s budget ratio is F/ρ0 = 107.

Proﬁle
QoS-caut.,wealthy (T1)
QoS-caut.,poor (T2)
QoS-ignr.,poor (T3)
Reach-caut.,wealthy (T4)
Domain-caut.,wealthy (T5)
Irrational (T6)

Unreachable (C1) Unreach. Domains (C2)
0.000
0.000
0.703
0.000
0.706
0.717

0.000
0.000
0.079
0.000
0.004
0.079

Inc. Length (C3) NVF (C4) Less Pref. (C5) New Transit (C6) CenM etric #decoy
0.000
0.000
0.000
0.001
0.001
0.003

0.026
0.000
0.000
0.011
0.024
0.029

0.030
0.009
0.009
0.022
0.036
0.033

0.031
0.000
0.000
0.031
0.031
0.031

0.277
0.229
0.949
0.262
0.995
1.000

2789
2706
2710
3059
2635
2702

ε
0.1
0.1
0.3
0.1
0.1
N/A

Table 6: Central decoy deployment (game one): Comparing various censoring countries with proﬁle T1 and the same decoy
budget ratio of F/ρ0 = 107.

Country
China
Venezuela
Saudi Arabia
Syria

Unreachable(C1) Blocked Domains(C2)
0.000
0.000
0.000
0.000

0.000
0.000
0.000
0.000

Increased Length (C3) NVF (C4) Less Preferred (C5) New Transit (C6) CenM etric #decoy
0.000
0.002
0.002
0.003

0.026
0.028
0.040
0.009

0.030
0.084
0.030
0.002

0.031
0.015
0.091
0.000

0.277
0.210
0.197
0.101

2789
1450
1853
544

ε
0.1
0.1
0.1
0.1

Figure 4: Autonomous decoy deployment (game two): Im-
pact on Chinese routes for a decoy service fee of γ = 5.0 and
a T1 censor proﬁle.

6.5 Game Two Experiments

We use our analysis of Section 5 to converge to the optimal
decoy placement strategies when the censors are taking op-
timal censorship actions. Similar to the previous game, we
have performed our analysis for the four censoring countries
in Table 4. We start our evaluation by discussing the re-
sults for China, followed by comparison of the results across
countries.
How the routes change. As in game one, the routing
decisions of the censor impact the Internet routes available
to the censor’s users. For instance, as we see in Figure 4, for
a service fee of γ = 5.0 charged by decoy ASes, the optimal
routing strategy of the Chinese censor with a proﬁle T1
causes 19.9% of the routes to become NVF, and 3.5% to
go through less-preferred routes. For this particular censor
proﬁle, even the best censorship strategy leaves 9.6% of the
routes available to the Chinese users for decoy routing.
Impact of decoy service fee.
Intuitively, higher service
fees for decoy routing will incentivize more ASes to deploy
decoy routing despite the risk of losing transit traﬃc due to
censor’s re-routing actions. Figure 5 shows the impact of
the service fee γ on the censorship metric and the costs to the
Chinese censor with a T1 (QoS-cautious, wealthy) proﬁle.
As expected, increasing the service fee improves censorship
resistance as more ASes will decide to deploy decoy routers.
Using this ﬁgure, one can estimate the achieved censorship
resistance given particular values for the service fees charged
by decoy ASes. Also, note that γ scales an AS’s revenue from

Figure 5: Impact of decoy service fee (γ) on the censorship
metric and censorship costs (censor is China with a T1 pro-
ﬁle).

decoy routing with respect to its revenue from transit traﬃc.
Therefore, a γ = 5 means that the decoy AS will charge for
every MB of decoy traﬃc ﬁve times what she charges per
MB of transit traﬃc.
Impact of censor proﬁles. As in game one, the optimal
censorship strategy depends on the censor’s proﬁle, i.e., the
preferences of censor between censorship performance and
various cost metrics. Table 7 compares the cost metrics as
well as the censorship metric for China based on diﬀerent
censorship proﬁles. Like game one, we see that the censor-

Decoy(16.3%)LessPreferred(1.2%)NVF(10.8%)Unreachable(0.0%)Notchanged(71.7%)0.00.20.40.60.81.0UdecoyS0.000.010.020.030.040.050.060.07NVF(C4)0.000.020.040.060.080.100.120.14LessPreferred(C5)0.0000.0050.0100.0150.0200.0250.030NewTransit(C6)12345678910γ0500010000150002000025000#Decoys(|Ad|)1736ship costs as well as the achieved censorship signiﬁcantly
vary across the proﬁles. For instance, comparing T2 (QoS-
cautions, poor) and T3 (QoS-ignorant, poor) we see that if
the Chinese censor does not care about the QoS oﬀered to
its clients, she can improve the censorship metric from 0.456
to 0.871. This, however, comes at the price of making 18.4%
of all Internet routes becoming unreachable to the Chinese
users.

Similar to the game one, an irrational censor (proﬁle T6)
can achieve perfect censorship. In contrast to game one, in
this case there will be no QoS degradation since no single
AS will decide to deploy decoy routers as they will all be
blocked by the irrational censor who does not care about
QoS. By contrast, in game one the central decoy deployer
always uses its decoy budget, therefore the irrational censor
will suﬀer from signiﬁcant QoS degradation.
Table 8 compares
Comparing censoring countries.
the censorship performance and cost metrics for the four
censorship countries of Table 4, given a T1 censor proﬁle
and a ﬁxed decoy service fee. We have sorted the countries
in the descending order of the censorship metric. Similar
to the game one, the censorship enforced by various nation-
state censors is proportional to their Internet connectivity.

7. FUTURE DIRECTIONS

We believe that our game-theoretic analysis is a signiﬁcant
step towards understanding the real-world feasibility of the
recently proposed decoy routing circumvention approach.
Our study can be extended in various directions. First,
our analysis derived optimal decoy placements against indi-
vidual nation-state censors. An interesting extension would
be to derive the set of optimal decoy ASes that maximizes
censorship circumvention against a collection of nation-state
censors (as shown through our experiments, the optimal set
of decoys diﬀers for various nation-state censors).

A second direction for future work is to expand our game-
theoretic model by considering the censored clients as play-
ers in the game, i.e., they can decide to whether or not use a
decoy routing system comparing factors like the service fees
and the oﬀered QoS with other circumvention technologies
like the paid VPNs.

Third, in our analysis we used comparative metrics to
represent the monetary expenses of decoy deployment (i.e.,
F/ρ and γ). An interesting extension would be translate
such metrics into actual dollar values based on real-world
information on the costs of equipment, transit traﬃc, etc.

8. ACKNOWLEDGMENTS

We would like to thank anonymous reviewers and Reza
Shokri for their feedback. This work was supported in part
by NSF CAREER grant CNS-1553301.

9. REFERENCES
[1] E. Anshelevich, A. Dasgupta, J. Kleinberg, E. Tardos,

T. Wexler, and T. Roughgarden. The price of stability for
network design with fair cost allocation. SIAM Journal on
Computing, 38(4):1602–1623, 2008.

[2] J. Boyan. The Anonymizer: Protecting User Privacy on the
Web. Computer-Mediated Communication Magazine, 4(9),
Sept. 1997.

[3] The CAIDA UCSD [AS Relationships] - [Jan 2016].

http://www.caida.org/data/as-relationships/.

[4] J. Cesareo, J. Karlin, J. Rexford, and M. Schapira.
Optimizing the placement of implicit proxies. https:
//www.cs.princeton.edu/˜jrex/papers/decoy-routing.pdf,
2012.

[5] J. Cowie. Egypt Leaves the Internet. http://www.renesys.

com/blog/2011/01/egypt-leaves-the-internet.shtml,
January 2011. Online Article.

[6] T. Dierks and E. Rescorla. The Transport Layer Security
(TLS) protocol — version 1.2. Internet RFC 5246, 2008.

[7] R. Dingledine, N. Mathewson, and P. Syverson. Tor: The

Second-generation Onion Router. In USENIX Security,
2004.

[8] D. Ellard, C. Jones, V. Manfredi, W. T. Strayer, B. Thapa,
M. Van Welie, and A. Jackson. Rebound: Decoy routing on
asymmetric routes via error messages. In IEEE LCN, 2015.

[9] S. Fujishige. Submodular functions and optimization,

volume 58. Elsevier, 2005.

[10] R. Hausmann, C. A. Hidalgo, S. Bustos, M. Coscia,

A. Simoes, and M. A. Yildirim. The atlas of economic
complexity: Mapping paths to prosperity. MIT Press, 2014.

[11] A. Houmansadr, C. Brubaker, and V. Shmatikov. The

Parrot is Dead: Observing Unobservable Network
Communications. In IEEE S&P, 2013.

[12] A. Houmansadr, G. T. Nguyen, M. Caesar, and N. Borisov.

Cirripede: circumvention infrastructure using router
redirection with plausible deniability. In ACM CCS, 2011.

[13] A. Houmansadr, T. Riedl, N. Borisov, and A. Singer. I
Want my Voice to be Heard: IP over Voice-over-IP for
Unobservable Censorship Circumvention. In NDSS, 2013.

[14] A. Houmansadr, E. L. Wong, and V. Shmatikov. No
Direction Home: The True Cost of Routing Around
Decoys. In NDSS, 2014.

[15] J. Jia and P. Smith. Psiphon: Analysis and Estimation.

http://www.cdf.toronto.edu/˜csc494h/reports/2004-fall/
psiphon ae.html, 2004.

[16] J. Karlin, D. Ellard, A. W. Jackson, C. E. Jones, G. Lauer,
D. P. Mankins, and W. T. Strayer. Decoy routing: Toward
unblockable internet communication. In USENIX FOCI,
2011.

[17] S. Khuller, A. Moss, and J. S. Naor. The budgeted

maximum coverage problem. Information Processing
Letters, 70(1):39–45, 1999.

[18] D. Kim, G. R. Frye, S.-S. Kwon, H. J. Chang, and A. O.

Tokuta. On combinatoric approach to circumvent internet
censorship using decoy routers. In MILCOM, 2013.

[19] J. Kleinberg and ´E. Tardos. Algorithm design. Pearson

Education India, 2006.

[20] J. Leskovec, A. Krause, C. Guestrin, C. Faloutsos,

J. VanBriesen, and N. Glance. Cost-eﬀective outbreak
detection in networks. In ACM SIGKDD, 2007.

[21] N. Nisan, T. Roughgarden, E. Tardos, and V. V. Vazirani.
Algorithmic game theory, volume 1. Cambridge University
Press Cambridge, 2007.

[22] B. Quoitin and S. Uhlig. Modeling the routing of an

autonomous system with c-bgp. Network, IEEE,
19(6):12–19, 2005.

[23] M. Schuchard, J. Geddes, C. Thompson, and N. Hopper.

Routing around decoys. In ACM CCS, 2012.

[24] A. Vetta. Nash equilibria in competitive societies, with

applications to facility location, traﬃc routing and
auctions. In Foundations of Computer Science, 2002.

[25] E. Wustrow, C. M. Swanson, and J. A. Halderman.

TapDance: End-to-middle anticensorship without ﬂow
blocking. In USENIX Security, 2014.

[26] E. Wustrow, S. Wolchok, I. Goldberg, and J. A.

Halderman. Telex: Anticensorship in the network
infrastructure. In USENIX Security, 2011.

1737Table 7: Autonomous decoy deployment (game two): Comparing the impact of diﬀerent censor proﬁles on various cost metrics
and the censorship success. Our censor is China and the service fee of decoy ASes is γ = 7.

Proﬁle
QoS-caut.,wealthy (T1)
QoS-caut.,poor (T2)
QoS-ignr.,poor (T3)
Reach-caut.,wealthy (T4)
Domain-caut.,wealthy (T5)
Irrational (T6)

Unreachable (C1) Unreach. Domains (C2)
0.000
0.000
0.184
0.000
0.727
0.0

0.000
0.000
0.013
0.000
0.008
0.0

Inc. Length (C3) NVF (C4) Less Pref. (C5) New Transit (C6) CenM etric #decoy
0.000
0.000
0.000
0.002
0.002
0.0

13018
13130
92
12959
2769
0

0.102
0.078
0.146
0.128
0.068
0.0

0.066
0.000
0.000
0.067
0.043
0.0

0.016
0.000
0.000
0.016
0.031
0.0

0.549
0.456
0.871
0.579
0.991
1.0

Table 8: Autonomous decoy deployment (game two): Comparing various censoring countries with proﬁle T1 and the same
decoy service fee of γ = 7.

Type
China
Saudi Arabia
Venezuela
Syria

Unreachable(C1) Blocked Domains(C2)
0.000
0.000
0.000
0.000

0.000
0.000
0.000
0.000

Increased Length (C3) NVF (C4) Less Preferred (C5) New Transit (C6) CenM etric #decoy
0.000
0.000
0.000
0.000

13018
11906
10840
1058

0.066
0.174
0.032
0.000

0.016
0.114
0.000
0.000

0.102
0.105
0.179
0.000

0.549
0.310
0.265
0.000

APPENDIX

Lemma 1. The δ(·) function deﬁned in (2) is mono-
for
That
if X ⊆ Y then

tonic with the
size of decoy set.
two decoy placement sets X, Y ⊆ Af ree,
∀Si, Sj : δY (R(Si, Sj)) ≥ δX (R(Si, Sj)).

is,

Proof. We prove this by contradiction. Suppose there
exists Si, Sj such that δY (R(Si, Sj)) < δX (R(Si, Sj)). Since
δ(·) only takes two values, this means that δX (R(Si, Sj)) = 1
and δY (R(Si, Sj)) = 0. δX (R(Si, Sj)) = 1 means that

X ∩ R(Si, Sj) (cid:54)= ∅.

(15)

On the other hand, δY (R(Si, Sj)) = 0 means that

Y ∩ R(Si, Sj) = ∅

therefore:

X ∩ Y ∩ R(Si, Sj) = ∅ ∩ X
(X ∩ Y ) ∩ R(Si, Sj) = ∅ , X ⊆ Y
X ∩ R(Si, Sj) = ∅

(16)

which is in contradiction with (15)

Lemma 2. Udecoy in (6) is a monotone submodular func-

tion [9].

Proof. Since Udecoy = Bdecoy, it suﬃces to prove that

Bdecoy is monotone submodular.

We ﬁrst show that Bdecoy is submodular. We need
to show [9] that for every two sets X and Y such that
X, Y ⊆ Af ree,X ⊆ Y we have:

∀x ∈ Af ree\Y : T ≥ 0

(17)
where T = Bdecoy(X ∪{x})− Bdecoy(X)− Bdecoy(Y ∪{x}) +
Bdecoy(Y ).

Using (3) we can write:

(cid:88)

(cid:88)

T =

(cid:0)δX∪{x}(Ri,j) − δX (Ri,j)− δY ∪{x}(Ri,j) + δY (Ri,j)(cid:1) (18)

ASj∈Af ree

ASi∈Acens

||ASi|| × ||ASj||×

T

is

to

that

prove

enough

in
show

To
non-negative,
it
each Ri,j,
L = δX∪{x}(Ri,j) − δX (Ri,j) − δY ∪{x}(Ri,j) + δY (Ri,j)
is non-negative. From (2), δ(·) can only be 0 or 1. There-
fore, L can be negative only in two cases: δX (·) = 1 or
δY ∪{x}(·) = 1.

(18)
that

is
for

Case 1 (δX (·) = 1): We have that:

X ⊆ X ∪ {x}
X ⊆ Y ⊆ Y ∪ {x}.

Since δ(·) is a monotone function (Lemma 1) we get:

δX ≤ δX∪{x}
δX ≤ δY ≤ δY ∪{x}.

Therefore:

if δX = 1 ⇒ δX∪{x} = δY = δY ∪{x} = 1
δX∪{x}(.) − δX (.) − δY ∪{x}(.) + δY (.) = 0

(19)

(20)

(21)

(22)

(23)

(24)

so L is non-negative in case 1.

Case 2 (δY ∪{x}(·) = 1): Given case 1,

the only
way L can be negative is that δY ∪{x}(Ri,j) = 1 and
δX∪{x}(Ri,j) = δX (Ri,j) = δY (Ri,j) = 0. We show by con-
tradiction that this is not possible either. δY ∪{x}(Ri,j) = 1
means ((Y ∪ {x}) ∩ Ri,j) (cid:54)= ∅. We also know (Y ∩ Ri,j) = ∅
due to δY (Ri,j) = 0. Therefore, AS x is the decoy AS on
the route. But, we have δX∪{x}(Ri,j) = 0, which is in con-
tradiction with x being a decoy AS.
This concludes proving that L ≥ 0, which in turn proves

(17). Therefore, Bdecoy is submodular.

Now, we prove that Bdecoy is also a monotone function.

From Lemma 1:

∀Si, Sj : δY (Ri,j) ≥ δX (Ri,j).

(25)

Therefore:(cid:88)

(cid:88)

δY (.) ≥ (cid:88)

(cid:88)

δX (.)

ASj∈Af ree

ASi∈Acens
(26)
Since ∀Si, Sj : ||ASi|| · ||ASj|| ≥ 0, we can multiply it at

ASj∈Af ree

ASi∈Acens

both sides of (26):

(cid:88)

ASi∈Acens

ASj∈Af ree

(cid:88)
(cid:88)

(cid:88)

||ASi|| · ||ASj||δY (.) ≥

||ASi|| · ||ASj||δX (.)

(27)

ASi∈Acens

ASj∈Af ree

which proves that Bdecoy is monotone.

1738