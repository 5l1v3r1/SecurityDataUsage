The Core of the Matter:

Analyzing Malicious Trafﬁc in Cellular Carriers

Charles Lever

Manos Antonakakis

Brad Reaves

Georgia Institute of Technology

Damballa

Georgia Institute of Technology

chazlever@gatech.edu

manos@damballa.com

brad.reaves@gatech.edu

Patrick Traynor

Wenke Lee

Georgia Institute of Technology

Georgia Institute of Technology

traynor@cc.gatech.edu

wenke@cc.gatech.edu

Abstract

1

Introduction

Much of the attention surrounding mobile malware has
focused on the in-depth analysis of malicious applications.
While bringing the community valuable information about
the methods used and data targeted by malware writers,
such work has not yet been able to quantify the prevalence
with which mobile devices are actually infected. In this pa-
per, we present the ﬁrst such attempt through a study of the
hosting infrastructure used by mobile applications. Using
DNS trafﬁc collected over the course of three months from
a major US cellular provider as well as a major US non-
cellular Internet service provider, we identify the DNS do-
mains looked up by mobile applications, and analyze in-
formation related to the Internet hosts pointed to by these
domains. We make several important observations. The
mobile malware found by the research community thus far
appears in a minuscule number of devices in the network:
3,492 out of over 380 million (less than 0.0009%) observed
during the course of our analysis. This result lends cre-
dence to the argument that, while not perfect, mobile ap-
plication markets are currently providing adequate security
for the majority of mobile device users. Second, we ﬁnd
that users of iOS devices are virtually identically as likely
to communicate with known low reputation domains as the
owners of other mobile platforms, calling into question the
conventional wisdom of one platform demonstrably provid-
ing greater security than another. Finally, we observe two
malware campaigns from the upper levels of the DNS hi-
erarchy and analyze the lifetimes and network properties
of these threats. We also note that one of these campaigns
ceases to operate long before the malware associated with
it is discovered suggesting that network-based countermea-
sures may be useful in the identiﬁcation and mitigation of
future threats.

Malware writers have begun to pay attention to mobile
phones. In response, a signiﬁcant amount of effort has been
spent by researchers to characterize malware in mobile ap-
plications markets [14, 15, 21, 48, 47]. These efforts have
applied a range of static and dynamic analysis techniques on
a large number of applications in an attempt to discover ma-
licious code. Market operators including Google and Apple
have also invested signiﬁcant resources in an attempt to pre-
vent malicious applications from being installed on mobile
devices and for later removing such applications if neces-
sary. However, for all of these efforts, the extent to which
the mobile ecosystem is actually infected by such malware
is not well understood. Without such an analysis, it is im-
possible to determine whether or not current defense mech-
anisms are having any demonstrable effect.

In this paper, we make the ﬁrst network level analysis of
mobile malware using trafﬁc from a major cellular network.
We work from the hypothesis that malicious mobile applica-
tions are not different from the bots and malware in the non-
cellular world in that they rely on the same core functional-
ity of the Internet in order to achieve scale and robustness.
In particular, we began our research with the belief that ma-
licious behavior in the mobile environment similarly relies
on the same Internet hosting infrastructure used to support
traditional malware activities including propagation and up-
date (e,g., a malware download site), command and control
(e.g., communication with infected devices), and data trans-
fer (e.g., a site to upload of stolen data). Should this hypoth-
esis prove to be true, more traditional network-based tech-
niques for detecting and combatting malware [7] can poten-
tially be applied in this new space. As research on botnets
and malware have shown, such an Internet-based approach
is more effective and scalable than malware-analysis based
approaches, particularly in the face of (future) mobile mal-

ware with stealth, obfuscated logic, such as triggered-based
behaviors.

We verify our hypothesis experimentally using three
weeks of DNS data from a major US-based cellular provider
collected over the course of three months. We ﬁrst show that
the vast majority of the hosts resolved in the cellular dataset
are also seen in a separate DNS dataset from a non-cellular
ISP. After this conﬁrmation, we dig more deeply into the
cellular dataset and uncover a number of important results
regarding malicious behavior in cellular networks, includ-
ing the following contributions:

• Known mobile malware samples are virtually un-
seen: We extract DNS domains from large public and
private datasets of mobile malware and speciﬁcally
search for their resolution in our dataset. Our analy-
sis demonstrates that only a vanishingly small number
of mobile devices appear to be infected: 3,492 out of
380,537,128 devices, or less than 0.0009% of the pop-
ulation. This lends credence to the argument that while
the mechanisms market operators implement to protect
users from malware may be bypassable [9, 28], mal-
ware writers are failing to infect mobile devices with
much success. Like any application developer, a mal-
ware writer faces the challenging task of developing a
popular application (or a malicious application in dis-
guise) that will be downloaded by a large population.
That is, the probability that a user will download an un-
known malicious application is very small. In addition,
a legitimate application market will remove any known
malicious application, further reducing the probability
of a mobile malware being downloaded.

• Compare trafﬁc to suspicious hosts from iOS
against all other devices: Common opinion argues
that the closed nature of Apple’s App Store and op-
erating system make devices in this ecosystem more
secure. However, our analysis demonstrates that ap-
proximately 8% of iOS-based devices communicate
with known suspicious hosts, virtually the identical
frequency as all other mobile platforms. Accordingly,
users of these devices do not appear to be any more
or less likely to communicate with potentially mali-
cious hosting infrastructure than other users. To say
the least, iOS does not appear to provide any more ef-
fective mechanisms to prevent users from engaging in
unsafe activities.

• Observe campaigns with mobile malware clients:
We obtain trafﬁc from the upper layer of the DNS
hierarchy and analyze two major threats with mobile
malware clients. We see that the lifetime of these two
threats lasts on the order of months, and that the crim-
inal operators make use of network agility and move

Passive DNS Data Collection

1

8

Host

RDNS

= Collection Point

2

7

3

4

5

6

.

(root)

com.
(TLD)

example.com.

(AuthNS)

Figure 1: Example of the domain resolution process.

their hosting infrastructure over time (e.g., changing
domain names and IPs). Finally, we also note that
one of these campaigns cease operating long before
the mobile malware associated with each campaign is
ever identiﬁed, lending credence to the possibility that
network-based countermeasures may help identify and
mitigate (e.g., via DNS blacklisting) such threats faster
than the analysis of mobile malware.

The remainder of the paper is organized as follows.
Section 2 provides some background on DNS and related
works. Readers familiar with this may skip to Section 3,
which describes our dataset collection methodology and
the internals of the reputation propagation framework along
with the statistical features collected from the cellular DNS
data. Section 4 describes the internals of our knowledge
base and passive DNS data collected from a large non-
cellular US ISP. In Section 5, we present the ﬁndings of
our measurements and experiments.

2 Background

2.1 DNS

DNS is a backbone protocol for the Internet that maps
easy-to-remember domain names to IP network addresses.
The domain name space is arranged as a tree, beginning
with a root node. In the DNS hierarchy, under the root node
are the top-level domains (TLDs), and under the TLDs are
the second-level domains, and so on. Common TLDs in-
clude com., net., and uk.. A fully qualiﬁed domain name
(FQDN) includes all domain levels that describe the node
in the DNS tree; for example, the FQDN www.example.com.
contains the TLD (com.), the 2LD (example.), and the 3LD
(www.). A large portion of the domains are registered di-
rectly under a TLD. In some cases, however, this is not
possible; therefore, domains under which users can directly

register a new domain name are often considered effective
TLDs. The canonical example is that many domains in the
UK are registered under co.uk. and not under uk. directly.

The basic type of information link in DNS is the resource
record (RR). DNS deﬁnes a number of RR types. For ex-
ample, an A-type RR links a domain name with an IPv4
network address, while a CNAME-type RR links a domain
name with another “canonical” domain name [31, 32].

RRs are returned in response to a DNS query from a re-
quester. Figure 1 illustrates the DNS query process from a
host for the A-type record for example.com.. A DNS query
is initiated by a DNS resolver running on a host. This ap-
plication is responsible for generating some sequence of
queries and translating the responses to arrive at the re-
quested resource. There are two parts in a typical DNS res-
olution request: the recursive and iterative part. In a typical
use, an end system will issue a recursive request using a stub
resolver to a dedicated recursive DNS resolver (RDNS)
(Step 1, Figure 1).
In a recursive request, the RDNS is
charged with completing the iterative portion of the DNS
resolution process. It will communicate with the necessary
remote name servers (NS) and returns a DNS answer, from
the authoritative NS for the requested domain, to the stub
resolver in the form of an RR-set. In the case of Figure 1,
the RDNS sends iterative requests to the various levels of
the DNS hierarchy (Steps 2–7). In Step 7, the RDNS re-
ceives the authoritative answer for example.com., and sends
it to the requester (or stub resolver) in Step 8, completing
the DNS resolution. The RDNS will typically cache the
RR locally for up to some period, the Time To Live (TTL),
speciﬁed in the RR. This improves efﬁciency and reduces
the load on the DNS infrastructure.

2.2 Passive DNS Monitoring

Since a RDNS mediates all requests from a client’s stub
resolver, it is possible to perform passive DNS (pDNS)
data collection of DNS queries received at the RDNS. This
pDNS data collection typically includes all of the informa-
tion associated with the successfully resolved DNS queries
by the RDNS.

There are several beneﬁts to using pDNS monitoring for
DNS analysis. Malicious queries are able to be logged and
analyzed without alerting the owners of the malicious do-
mains (unlike DNS probing [30, 26]). Another beneﬁt of
pDNS data collection is that it can allow the discovery of
malicious domains not previously known to exist on DNS
blacklists (DNSBL) [7, 8, 10] and does not require previous
knowledge of the domain’s existence. A potential drawback
of pDNS data collection at the local RDNS level is that the
data collected will be limited by the amount of trafﬁc han-
dled by the RDNS. Therefore, it is important to collect a
large number of queries from a geographically diverse set

of RDNS servers.

3 Methodology

In this paper, we analyze DNS data generated by devices
subscribed to a major US cellular carrier. For simplicity, we
use the term “mobile devices” to describe smartphone and
tablet platforms (e.g. Android, iOS, and others). Our pri-
mary focus is Internet-based hosts contacted by mobile de-
vices using DNS. By host we mean a remote IP address in-
cluded in a successful A-type DNS domain name resolution.
We focus on the hosts as opposed to domain names explic-
itly because of the extensive forensic evidence already con-
nected with malicious behavior in the Internet (e.g., C&C,
drive-by, PPI, etc.). We link the hosts observed in DNS res-
olutions within a cellular network with historic evidence of
Internet abuse and reveal the extent to which mobile devices
contact hosts historically associated with known malicious
behavior.

Our monitoring point is a single sensor that aggregates
trafﬁc collected from several RDNSs providing DNS reso-
lution services for mobile devices located across many dif-
ferent US states. We perform two high-level tasks in or-
der to characterize malicious behavior generated by mobile
devices. First, we remove trafﬁc generated by non-mobile
devices (i.e., laptop and desktop machines also serviced by
this provider via hotspots and “cellular connect cards”) and
then attribute each request to a speciﬁc mobile device; sec-
ond, we perform a reputation analysis of the RRs associated
with these mobile requests and classify trafﬁc as having be-
nign, malicious or unknown reputation. This workﬂow is
shown in Figure 2, and the details of each task are provided
in the remainder of this section.

We use the following notation to more formally de-
scribe our workﬂow. A resource record (RR) refers to ei-
ther an A-type or CNAME-type record and its correspond-
ing RDATA [31, 32] tuple of (qname, ip) and (qname, do-
main) respectively. We represent a DNS query, qj , for a
domain name, d, and the related DNS response, rj , as the
tuple Qj(d) = (Tj, Rj, IPsj), where Tj identiﬁes the epoch
in which the query-response was observed, Rj is the unique
identiﬁcation of the device that initiated the query qj , d is
the queried domain, and IPsj is the set of resolved hosts as
reported in the response rj .

3.1 Mobile Device Identiﬁcation Process

Accurately identifying individual devices is challenging
due to IP address churn and device roaming in a cellular
carrier.
In order to ensure that we do not include non-
mobile devices in our evaluation, we must ﬁrst be able to
attribute trafﬁc to speciﬁc devices. We received proprietary
data from the carrier that allows us to deﬁnitively attribute

Devices In Cellular ISP

Task 1

(Section 3.1)

Unknown
Devices

Non-Mobile

(e.g., laptops)

Mobile

Task 2

(Sections 3.2, 3.3)

Benign 

Malicious

Unknown

DNS Trafﬁc

Figure 2: A high-level view of the two tasks required to
identify malicious behavior by mobile devices. First, all
trafﬁc generated by non-mobile devices is ﬁltered out of
our dataset. Second, the remaining trafﬁc is character-
ized as either benign, malicious or of unknown reputa-
tion.

trafﬁc to a mobile device operating on the network for each
epoch; however, we cannot correlate devices across epochs.
We formally deﬁne the set of mobile devices in an
epoch. Let M DEVi = {Rk}k=1...l be a set that con-
tains all l mobile device identiﬁers (Rk) for epoch i, and
i ∈ EP OCHS 1. We then deﬁne the set of domains re-
solved by M DEVi in epoch i as mDNi = {dk}k=1...n,
where n is the number of domains (dk).

Mobile devices are restricted to certain ranges of device
IDs that are only associated with operation over a cellu-
lar data connection (i.e., 3G or 4G). While this excludes
most traditional computing devices, trafﬁc generated by a
laptop or desktop using cellular connect cards or tethering
through a mobile phone remains in our dataset. We remove
this trafﬁc by examining the resource records associated
with each device and looking for mobile-speciﬁc domains.
While there is no ofﬁcial standard, there are some common
indicators for mobile-speciﬁc domains. One is the use of
mobile-speciﬁc subdomains such as m.example.com or mo-
bile.example.com. Another method is the use of the URI
path as a mobile indicator, but since we are working with
DNS data, we do not have access to this type of indicator.
Table 1 provides a subset of mobile indicators.

In addition to mobile indicators, some domains are
strongly or exclusively associated with mobile applications.
Such sites include mobile ad networks, mobile application
programming interfaces, and mobile services. For example,
Google’s AdMob [1] advertising network is only supported
on Android and iOS, so devices that contact the AdMob

1We deﬁne the set of epochs as single days falling within the fol-
lowing ranges EP OCHS = {4/15/12 − 4/21/12, 5/13/12 −
5/19/12, 6/17/12 − 6/23/12}

Indicator Type
Domain name
Subdomain
m.example.com
mobile.example.com
Subdomain
android.example.com Subdomain
iphone.example.com
Subdomain
Subdomain
ipad.example.com
touch.example.com
Subdomain

Table 1: Examples of popular mobile indicators.

network are almost certainly mobile. Certain mobile APIs
use unique domains that are easily identiﬁable. Apple’s
Push Notiﬁcations, for instance, use a set of mobile do-
mains (e.g., *.courier.push.apple.com) reserved
speciﬁcally for the push notiﬁcations service. Additionally,
services like HeyTell [2] provide push-to-talk functionality
for mobile devices via a mobile application. Devices com-
municating with these types of services should be almost
exclusively mobile.

We ﬁrst exclude all devices Rk that query any of six do-
main names d in an epoch j related to standard operations of
Windows operating systems 2. Devices are labeled as mo-
bile only if they contact a domain d with a mobile indicator
or domains strongly associated with mobile applications or
services. We are able to identify 132, 516 unique domain
names that ﬁt this former category.

Through the combination of ﬁltering based on device IDs
and mobile domain inference, we are able to identify de-
vices as either mobile or non-mobile with high conﬁdence.
In the small number of cases where overlap exists, we tag
a device as unknown and do not consider its behavior as
reﬂective of mobile devices. By conservatively choosing
devices in this manner, we strongly reduce the likelihood of
selecting traditional computing devices that are connected
via mobile broadband cards or tethering. However, if a tra-
ditional computing device is visiting a mobile resource, we
would falsely label that device as mobile. We note that
this scenario is exceedingly rare as browsers generally di-
rect users to the appropriate version of a website.

3.2 Filtering Benign Domains

At this point in our workﬂow, we can label a device and
associate it with RRs. We can then begin the second task in
Figure 2: classifying each of the resource records requested
by mobile devices. The ﬁrst step in this process is identi-
fying and removing known benign trafﬁc from our dataset.
Our methodology again remains conservative, aggressively
reducing false positives potentially at the cost of increas-
ing false negatives. We achieve this by whitelisting all re-

2Two of the most frequently hit domain names in this list are the

time.windows.com and download.windowsupdate.com.

INPUT : M DEVj , mDrdcj and all Qj (di) for every mobile

domain name (di ∈ mDrdcj ) observed in epoch j.

Let HOST Sj = ∅, be the set that will contain the unique hosts (or
IP addresses) that have been mapped with the domain names in
mDrdcj after the completion of the process.

[1] : ∀d ∈ mDrdcj :

[2] : Let IPsj be the set of IPs in the tuple Qj (d), if
Rj ∈ M DEVj

[3] : HOST Sj ∪ IPsj

OUTPUT: HOST Sj

Algorithm 1: The algorithm used to obtain the set
of IP addresses (or hosts) that represent the hosting
infrastructure that facilitated resolution of domain
names from mobile devices in epoch j.

quests made to the top 750,000 effective second level do-
mains (e2LDs) according to Alexa [6]. However, we must
note that we do not whitelist domains associated with dy-
namic DNS (DDNS) providers given their common use by
network malware. Intuitively, such broad whitelisting re-
moves the most popular sites (and e2LDs) as they are more
likely to be trustworthy and less likely to be intentionally
malicious. This approach is commonly used in DNS-based
reputation and classiﬁcation systems [7, 8].

We want to remain as conservative as possible and re-
duce any potential false positives from our datatset. To that
end, we further ﬁlter benign trafﬁc from our dataset by re-
moving a number of the most popular remaining e2LDs.
We compile a list of approximately 800 e2LDs based on the
lookup volume of the queried domains. We manually in-
spect all of them and we classify them as benign. We should
note that the lookup volume distribution for the e2LDS fol-
lows a power law.

The end result of the whitelist ﬁltering process is a re-
duced set of domain names mDrdcj = {dk}k=1...n, where
mDrdcj is a set that contains all n not whitelisted domain
names (dk) resolved by mobile devices in epoch j. In this
set we will have domain names in the “Malicious” and “Un-
known” categories of Figure 2.

3.3 Feature Extraction

The remaining entries in our dataset now belong to mo-
bile devices communicating with Internet-based hosts with
either malicious or unknown reputations. We now describe
the features that we extract from these remaining domains,
which will allow us to analyze the hosting infrastructure
supporting these domains. We use Algorithm 1 to ﬁnd
all unique IP addresses (hosts) for all domains in the set
mDrdcj for epoch j, resulting in the set HOST Sj =
{IPk}k=1...n. For ease of understanding, the entire feature
extraction process is summarized in Figure 3.

We compare the trafﬁc observed in the cellular carrier
(only from the mobile devices) against a pDNS data collec-
tion from a non-cellular ISP. Let fpdns(d) = {ipk}k=1...n
be a mapping function that takes a domain name d as in-
put and returns a set of routable IP addresses that have been
historically linked with d.

The f j

cell() function returns passive DNS data from the
DNS trafﬁc in the cellular carrier over an epoch j. Let
f j
cell(ip) = {dk}k=1...n be a function that receives an IP
address ip as input and returns a set of related historic do-
main names (dk) observed in the cellular network during
epoch j from mobile devices in set M DEVj .

The function fmal(ip) = α returns the number α of
unique malware samples that IP address ip has been asso-
ciated with over the past 19 months. The association could
be direct (i.e., the malware contacts the IP address/host) or
indirect (i.e., the malware looks up a domain name that re-
solves to that IP address/host) as shown in Figure 3. We
similarly deﬁne furl(ip) = β and fpbl(ip) = γ, as the
functions that return the number of malicious URLs (β) and
malicious entries (γ) in public blacklists.

For every host (ip) in the set HOST Sj we extract the
two groups of features: passive DNS and evidence features.
At the end of the feature extraction process, we obtain sta-
tistical historic passive DNS and malicious evidence-based
observations (used in Section 5.1) for the set of hosts in
HOST Sj .

Passive DNS Features (PF) We collect two features from
this group. They are simply the number of elements in the
sets fpdns(ip) (i.e., related historic non-cellular domains)
and f j
cell(ip) (i.e., related historic cellular domains) for an
address ip.

Evidence Features (EF) We compute a total of three fea-
tures from this group. These features describe direct repu-
tations of the IP addresses in the set HOST Sj (during the
epoch j). We compute three features for each IP address:
(i) fmal(ip), the count of unique malware associated with
ip, (ii) furl(ip), the count of URLs associated with ip, and
(iii) fpbl(ip), the count of public blacklisting incidents as-
sociated with ip.

Both PF and EF feature families represent the basic
building blocks of DNS reputation systems [7, 10]. We se-
lect them to understand (i) the extent that malicious hosts
currently serve mobile-related DNS resolutions and (ii) the
extent that the infrastructure used to resolve mobile-related
domain names is already present in passive DNS data col-
lections from non-cellular networks. In particular, the PF
feature family, which is based on passive DNS data, will
show to what extent the hosts from mobile RRs (directly or
indirectly) can be associated with DNS resolutions from a

.
.
.

Device Rj

.
.
.

Algorithm

1

HOSTSj
(IP addrs)

qname1

.
.
.

qnamen

Host1

.
.
.

Hostm

Evidence 
Features
fmal(ip)
furl(ip)
fpbl(ip)

Products of 

Analysis

Communication 

with known 

malicious hosts

Overlap with 

Non-Cellular ISP

fpdns(ip)
j
f 
cell(ip)

Passive DNS 

Features

Figure 3: Determining the communication patterns for each mobile device (Rj ). Each qname requested by Rj is
converted into an IP address via Algorithm 1. This list of IP addresses (HOST Sj ) is then processed for Passive DNS
Features (PF) to determine overlap with trafﬁc from our non-cellular ISP and for Evidence Features (EF) to determine
the presence of communications with known malicious domains.

non-cellular ISP. The EF features, which are based on his-
toric reputation information, will show us to what extent the
already tainted Internet hosting infrastructure is currently
used directly by mobile devices. Additionally, we perform
one more level of ﬁltering in which we evaluate the ma-
licious hosts identiﬁed by the EF feature family using the
Notos [7] reputation system; we remove any hosts identiﬁed
using the EF features if Notos does not produce a reputation
score below our chosen threshold.

Non-cellular The non-cellular pDNS data was collected
from seven different sensors located across the US over
more than 15 months. Due to the extended collection pe-
riod, this dataset presents a substantial volume of trafﬁc that
can be used to provide historical context for domains and
hosts of interest. In particular, we can use this data to make
inferences about the hosting infrastructure of a particular
domain or tie speciﬁc hosts to their related domains.

4 Dataset Summary

This section describes the datasets used in our analysis.
These include pDNS data collected from a major US cel-
lular carrier, pDNS data collected from a major US non-
cellular ISP, and a database of malicious evidence built from
several classes of malicious information.

4.1 DNS

Cellular We observed DNS trafﬁc from a cellular data
network on twenty-one days over a three month period.
This data was passively collected from a single sensor that
aggregates information from several cities.

4.1.1 Observations from the Cellular Carrier Trafﬁc

Table 2 provides insight into the number of unique RRs,
domains, and hosts seen over the twenty-one (single day)
epochs. For each record type, there are two columns that
specify the total number of unique records seen for the given
week and the number of new records not seen in any prior
week. Intuitively, the number of new records seen should
decrease over time, and Table 2 shows that the inﬂux of
RRs, domains, and hosts does follow this pattern.

4.2 Devices

Devices seen in the cellular dataset accessed the net-
work via a cellular data connection. Consequently, these de-
vices should fall into three general categories: smartphones,
tablets, or mobile broadband devices. The ﬁrst two cate-
gories include devices such as Android and iOS phones and
tablets. A mobile broadband device includes any device ac-
cessing the network via a mobile broadband card or tether-
ing to another device’s cellular data connection. This could
include traditional computing devices such as desktop or
laptop computers.

As discussed in Section 3.1, we are conservative in the
classiﬁcation of mobile devices; a comparison of the total
devices and what was classiﬁed as a mobile device can be
seen in Table 2. Most importantly, this table shows that our
estimate of mobile devices is conservative; we classify only
79% of devices seen as mobile.

4.3 Evidence

We analyze cellular DNS trafﬁc with an evidence
database composed of three general classes of non-mobile
malicious evidence: public blacklist data (PBL), phishing
and drive-by download evidence (URL), and hosts accessed
by known malicious applications (MAL). In addition to the

Duration

(hours)

168
168
168

504

RRs

Domains

Hosts

Devices

Total

8,553,155
9,240,372
8,660,555

New

8,553,155
4,498,765
3,246,194

Total

8,040,141
8,711,704
8,109,536

New

8,040,141
4,042,009
2,745,999

Total

2,070,189
2,168,266
2,050,168

New

2,070,189
606,467
377,048

Total

157,286,931
169,561,760
153,525,716

Mobile

121,497,066
136,292,358
122,747,704

26,454,082

16,298,114

24,861,381

14,828,149

6,288,623

3,053,704

480,374,407

380,537,128

4/15-4/21
5/13-5/19
6/17-6/23

Total

Table 2: Listing of unique RRs, domains, hosts, and devices seen in cellular dataset.

(a) Cellular Traffic

(b) Wired Traffic

F
D
C

 1

 0.95

 0.9

 0.85

 0.8

 0.75

 0.7

 0.65

 0.6

 1

F
D
C

 1

 0.8

 0.6

 0.4

 0.2

 0

 1

 10

 100

 1000

 10000

Volume of Qnames

 10

 100

 1000

 10000

Volume of Qnames

Figure 4: Per host (in HOST Sall) qname distribution of DNS evidence. These experiments demonstrates that the
hosts in HOST Sall have a signiﬁcant historic presence in pDNS data collected from non-cellular networks.

s
t
s
e
u
q
e
R

 
f

o

 

e
m
u
o
V

l

1T

100G

10G

1G

100M

10M

1M

100k

10k

MBL
PBL
URL
MAL
Total

100G

10G

1G

100M

10M

1M

100k

10k

1k

100 

DDNS
MBL
PBL
URL
MAL
TOTAL

4/15-4/21

5/13-5/19

6/17-6/23

0

1

2

3

4

5

6

7

8

9

10 11 12 13 14 15 16 17 18 19 20 21 22 23

Figure 5: Volume of requests to domains with malicious
evidence visited by mobile devices in cellular network.

Figure 6: Hourly analysis of request volume for various
types of domains observed from mobile devices.

non-mobile evidence database, we also used a mobile black-
list (MBL) containing 2,914 domains known to be asso-
ciated with mobile malware or mobile malware operators.
Figure 5 shows the volume of DNS lookup requests from
mobile devices in our cellular dataset that could be directly
linked with different classes of non-mobile and mobile evi-
dence.

Additionally, a diurnal analysis of the volume of requests
that can be directly associated with different types of mali-

cious evidence can be seen in Figure 6. It is important note
that our cellular DNS trafﬁc sensor aggregates data from
several different locations in different time zones. There-
fore, patterns may be less pronounced than if all data was
collected from a single location. Looking at the total vol-
ume of requests for each hour, Figure 6 shows that the
volume of trafﬁc starts to increase between hours ﬁve and
six and begins to gradually decrease between hours seven-
teen and eighteen. These hours approximately correspond

to people waking up in the morning and traditional dinner
hours in the evening. With the exception of DDNS trafﬁc
and a spike at hour ﬁve for MBL requests, the other classes
of domains appear to follow the total hourly volume pattern.

5 Results

We now present the results of our experimental evalua-
tion. We begin by analyzing the trafﬁc observed in the cellu-
lar carrier, ﬁrst characterizing the data from the cellular car-
rier in isolation, and then comparing the request patterns to
those observed historically in our non-cellular ISP dataset.
We then examine the extent to which the hosts observed in
mobile resolution requests are directly or indirectly tainted
by reputation information collected in non-cellular ISPs.

We continue in Section 5.2 and further focus on evidence
of mobile-speciﬁc malware. We continue our analysis of
directly tainted hosts in mobile resolutions by determining
from which mobile platforms those queries originate. Then,
we examine all of the cellular network queries for mobile-
malware speciﬁc domains to determine the extent of the
presence of mobile malware in the cellular network.

We conclude our results with long term analysis of two
known mobile threats in Section 5.3. In particular, we study
those two threats from their rise until they become almost
completely inactive. Furthermore, we provide the global
infection perspective of those two mobile threats. Finally,
we examine their hosting infrastructure and how it changes
over time.

5.1 Analysis of the Reputation Datasets

We analyze the DNS trafﬁc generated from approxi-
mately 380 million mobile IDs over the course of our ob-
servation period (Table 2). Note that while we can iden-
tify devices consistently within an epoch (i.e., a single day),
we can not link devices across days, meaning that this to-
tal does not represent the number of unique devices ser-
viced by the carrier. We are speciﬁcally interested in unique
Internet-based hosts requested by mobile devices. The ﬁl-
tering process results in the set HOST Sall consisting of
2,902,071 unique hosts having the following characteristics:
(i) at least one resolution request for each host was observed
by the cellular carrier, (ii) the observed DNS requests came
strictly from devices classiﬁed as mobile, (iii) the hosts are
not associated with any known benign infrastructure, and
(iv) the host is a routable IP address. We obtain passive
DNS information on each of these hosts from our historical
non-cellular ISP dataset (via the function fpdns() deﬁned in
Section 3.3).

5.1.1 Observations from the Cellular Carrier Trafﬁc

We use the hosts in HOST Sall to perform an in depth ex-
amination of their DNS properties in our pDNS data. We do
this for both the cellular ISP trafﬁc (Figure 4(a)) and, using
a projection into our passive DNS data collection, for the
non-cellular ISP trafﬁc (Figure 4(b)).

The hosts in HOST Sall reﬂect a portion of the host-
ing infrastructure that support unknown or malicious types
of DNS resolutions in the mobile carrier. We project this
set into the non-cellular data collection and obtain non-
cellular passive DNS data for the hosts in HOST Sall. Only
36,338 (or 1.3%) of hosts in HOST Sall are outside the
non-cellular passive DNS evidence we have.

Looking a bit closer, Figure 4(a) shows the distribution
of unique hosts in the set HOST Sall. We see that more
than 18% of the hosts requested by mobile devices are asso-
ciated with only a single domain. Furthermore, Figure 4(b)
shows that 98.7% of hosts in the set HOST Sall have at
least one historically associated domain name (according to
the passive DNS data collection from the non-cellular ISP).
This simply means a sufﬁciently large non-cellular pDNS
data collection can be used to amplify the DNS information
for hosts observed in DNS resolutions from non-cellular
networks.

If we assign Notos [7] reputation scores to the RRs that
have IPs in the HOST Sall set, and use reputation thresh-
old of 0.8 (or above 80% probability of the RR being mali-
cious), we obtain 51,503 domain names (3,636 distinct IPs)
as likely suspicious. Only 18 domain names (13 unique
hosts) of them have been listed in mobile black lists until the
day of the submission. While 0.8 is a conservative thresh-
old, these results could be used as an indicator that the mali-
cious hosting infrastructure observed in cellular networks is
already present in reputation and passive DNS observations
from non-cellular networks.

These ﬁndings are already valuable. Given the signiﬁ-
cant overlap between the domains requested by devices in
cellular and non-cellular providers, and the historical infor-
mation regarding the reputation of the hosts in HOST Sall
(as discussed in this Section and Section 4.3), we can con-
clude that the DNS infrastructure (malicious or not) is being
reused in cellular networks. Moreover, the scores assigned
to hosts by DNS reputation systems can potentially serve as
ﬁltering functions for applications when they are submitted
to mobile markets.

5.1.2 Observations from Mobile Markets and Mal-

ware Datasets

We now characterize application markets and datasets
of known mobile malicious applications.
Speciﬁcally,
we examine all of the applications in Proandroid, So-
fandroid, Anzhi, Ndoo and the top 500 free applica-

Market/Dataset Name Market Country

Google Play*
SoftAndroid
ProAndroid

Anzhi
Ndoo

Contagio
Zhou et al.

M1

US
RU
CN
CN
CN

—
—
—

Date of Snapshots
9/20/11 and 1/20/12

2/7/12

2/2/12, 3/11/12

1/31/12

10/25/12, 2/3/12, 3/6/12

3/27/12
2/2012

3/26/2012

#Unique Apps

#Unique domains

#Unique IPs

26,332
3,626
2,407
28,760
7,914

338
596
1,485

27,581
3,028
2,712
11,719
5,939

246
281
839

47,144
8,868
8,458
24,032
14,174

2,324
2,413
5,540

*Top 500 free applications per category only

Table 3: M&A Datasets

Figure 7: Qname distribution per passive DNS (from
non-Cellular networks) evidence gathered from the
m&a dataset. In spite of their geographic diversity, the
requested qnames in all of these subsets follow a similar
distribution.

tions from each category in Google Play. We also an-
alyze three datasets containing known mobile malware,
including all of the malware samples from the Conta-
gio blog, 596 apps from the malware dataset described
in Zhou et al. [47] and a third dataset which we re-
fer to as M 1 that was provided conﬁdentially by an in-
dependent security company. M 1 contains both highly
suspicious and conﬁrmed malicious applications. We re-
fer to this collection of datasets as the malware and ap-
plications (m&a) datasets ({Android500, P roandroid,
Sof tandroid, Anzhi, Zhou, Contagio, M 1}). We stat-
ically extract domain names from application code in the
m&a dataset to create a set of domain names we call
DNm&a. Using the fpdns() function, we record the unique
hosts historically associated with each entry in DNm&a
from our non-cellular pDNS dataset. Table 3 shows the
breakdown of each of these datasets.

Figure 8: Volume of malicious MD5 evidence associated
with unique qnames seen in the m&a dataset.

Figures 7(a) and (b) show the distribution of qnames for
each of the subsets of the m&a dataset. We observe that
at least 90% of the hosts in HOST Sm&a are present in
our non-cellular pDNS dataset, and in some cases (see Fig-
ure 7(b)) all of them are present. Despite the geographical
diversity of the markets we examine, in Figures 7(a) and
(b) we see that all m&a datasets have very similar distri-
butions of qnames per host in HOST Sm&a. Furthermore,
more than 50% of these hosts have at least seven domain
names historically associated with the (non-cellular) pDNS
dataset.

Figure 8 shows the direct relationship to hosts histori-
cally associated with malware for each of the subsets of the
M&A datasets. We observe that the 38% of the hosts re-
trieved from the HOST SZhoudataset, which corresponds
to applications from Zhou et al. [47] dataset, have been his-
torically associated with more than one malware samples
(or MD5). Additionally, approximately 23% of hosts in
HOST Ssof tandroid dataset, can also be linked with more
that one malware samples.

% Total

% Population

% Total

requests by

mobile
device

31.6%
68.4%

requesting
tainted hosts

tainted host

requests

8.8%
8.2%

33.2%
66.8%

Device
Platform

iOS

All other
mobile

(Android,

etc.)

Table 4: Tainted Hosts and Platforms

5.2.1 Tainted hosts requested by mobile platforms

Table 4 presents a breakdown of which platforms corre-
spond to what proportion of total mobile device population,
what proportion of the device population requested tainted
hosts, and which platforms are responsible for tainted host
requests. This data is presented for iOS devices and other
mobile devices such as Android and other indistinguishable
platforms (e.g., potentially Symbian, Windows Mobile, un-
veriﬁable iOS devices). We separate iOS devices from the
rest because they are easy to reliably identify by searching
for push notiﬁcation domains.

The ﬁrst column in Table 4 shows the contribution of
each platform to the total population of mobile devices. The
majority of devices were unidentiﬁable, but roughly one
third of the devices could be identiﬁed as iOS. The second
column shows the percentage of devices for each platform
that requested domains that point to tainted hosts. We ob-
served roughly 8% of iOS and 8% of other mobile devices
issued at least one request that pointed to a tainted host.

Finally, the third column shows how platforms contribute
to the overall number of tainted host requests. It is interest-
ing that each class of devices contributed proportionally to
the number of total tainted host requests. This data shows
that, from the network perspective, iOS devices reach out to
similar numbers of tainted hosts as other devices.

Figure 5 provides an overview of different threat classes
that are present in our PBL evidence set. Each of the dif-
ferent classes shown in this table were seen in our cellular
pDNS dataset and was visited by a mobile device. It is in-
teresting that this list includes several prominent desktop
malware classes such as Zeus and SpyEye in our ﬁltered
mobile trafﬁc.

Figure 9: Volume of malicious MD5 evidence associated
with unique qnames in the m&a dataset after projection
through non-cellular pDNS data collection.

Somewhat unsurprisingly, Google Play (see Figure 8(b),
Android 500 class) has the lowest percentage of appli-
cations contacting hosts historically associated with mal-
ware. Only a 10% of the domain names observed in the
class Android 500 in Figure 8(b), have more than one mal-
ware sample associated with the host the domain names re-
solved to historically. These numbers increase in Figure 9,
which shows the projection of HOST Sm&a through our
passive DNS data collection from non-cellular networks us-
ing fmal(). As previously mentioned, such indirect results
are prone to false positives due to phenomena like parking
IPs and sinkholes; however, the inclusion of such hosts in an
application could easily serve to trigger analysis by market
operators.

In summary, mobile applications observed from a variety
of marketplaces and malware datasets use much of the same
Internet infrastructure as the non-cellular DNS resolutions.
This observation is similar to the analysis we made in Sec-
tion 5.1.1, when we examined DNS trafﬁc from a large cel-
lular provider. Perhaps the most important observation from
the m&a datasets is that some market-places (e.g., Softan-
droid) contain mobile applications that tend to be more di-
rectly and indirectly related with known malware-tainted
hosting infrastructure.

5.2 Mobile(cid:173)malicious activity in mobile networks

This subsection discusses two distinct but related phe-
nomenon: 1) the relationship between mobile platforms and
requests for tainted hosts, and 2) the presence of queries for
domains facilitating malware that targets mobile platforms.

5.2.2 Mobile malware in the cellular network

To answer the question ”How prevalent is the threat of ma-
licious mobile applications in the cellular network?”, we
scanned all (not mobile-device only) cellular network DNS

Threat Class

# Associated Hosts

Artro

Backdoor.Tofsee
DMSSpammer

FakeAV

MalwareDomainList

MalwarePatrol

Misused
Phishing

SC

SpyEye

Worm.Palevo

Zeus

1
1
2
1

1386
203
69
383

4

183
30

1083

Table 5: Threat Class for Tainted Hosts

data with a blacklist of 2,932 domains known to be asso-
ciated with mobile-malware or mobile-malware operators.
We then focused on those domains that are known to have
directly facilitated mobile malicious activity, not merely as-
sociated with it. Examples of this malicious activity in-
clude distributing malicious applications, exﬁltrating sen-
sitive data without user consent, and command and control
services.

We focused on 19 unique domains present in our cel-
lular pDNS data. These malicious domains are associated
with 10 unique malware families; all of these are Android
applications. 9 of these 10 malware families were publicly
disclosed before any of our epochs — meaning they were
still queried after they were known to be malicious by secu-
rity researchers, antivirus companies, and market providers.
[34, 33, 46, 11, 38, 3, 4, 5, 39]

Table 6 shows the mobile malware families with domains
seen in the cellular network, the number of domains known
to facilitate the malicious activities of those families, the
number of devices of any type and the number of mobile de-
vices that contacted a domain facilitating mobile malware.
Note that this data is aggregate across days and all domains
facilitating mobile malware; we cannot identify the same
device across epochs, so this is an upper bound of devices
that contact a domain. The effects of our conservative mo-
bile classiﬁcation process are apparent – only a fraction of
devices that we classify as mobile contacted any domain
that facilitates mobile malware compared to all devices.

The most prevalent malicious family in the network was
FakeDoc. This is a potentially unwanted application (ad-
ware) that steals a user’s Google account and other poten-
tially sensitive information. FakeDoc was discovered in the
Android market on October 19, 2011 well before our trafﬁc
epochs. Despite being ﬂagged by several antivirus prod-
ucts [4], 5,417 devices contacted the domain used by Fake-
Doc for malicious activity.

The second most popular malware family was NotCom-
patible. NotCompatible is a trojan application that acts as
an open network proxy. Unlike the other families in Table 6,
NotCompatible is spread through compromised web pages
with hidden iFrames that point to a download site for the
app. NotCompatible was disclosed on May 2, 2012 [46].

Even considering an upper bound, the overall trafﬁc to
domains associated with mobile malware is quite small.
Only 9,033 devices of any type out of a total of over 480M
million (0.001%), and 3,492 devices out of a total of 380M
conﬁrmed mobile devices (0.0009%) contacted a domain
known to facilitate mobile malware. The top two threats
present in our data present a stark contrast in functionality,
time of known activity, and method of distribution. Despite
these differences, neither presented signiﬁcant activity lev-
els during our measurement epochs.

A number of insights can be gleaned from this data. First
and foremost, mobile malware is a real threat to users in the
United States, despite the fact that malware researchers ﬁnd
many of their samples in non-US markets. Even though the
threat is real, it is minimal. It is important to note that the
overall size of all infected populations indicates that mobile
malware is far from reaching the scope or severity of desk-
top malware. This may be attributed to moderated markets,
security architectures of mobile platforms, and the relative
lack of opportunity an infected device can provide a mal-
ware author.

The low volumes of trafﬁc from malware distributed
through the Google Market indicate that market-based kill
switches can be effective at controlling the malware popula-
tion. However, the relative success of NotCompatible calls
into question whether the market-based kill switches will be
able to control the spread of malware in the future if mal-
ware authors eschew markets in favor of other distribution
means. Even when markets are used as a distribution chan-
nel, mobile malware can be seen in the network long af-
ter discovery by researchers and its removal from markets.
This ﬁnding implies that neither markets nor security prod-
ucts like antivirus tools are able to guarantee a malware-free
platform.

5.3 Lifecycle of Mobile Threats

In this section we examine the evolution of two mali-
cious mobile applications, threat ǫ and threat β. With his-
toric data from a large authoritative DNS server, we pro-
vide insights on how the threats developed over time as well
as geographical properties of the requesters requesting do-
mains associated with these threats. We conclude by pro-
viding some insight on the hosting infrastructure these mo-
bile threats used throughout their lifetime, especially at the
peak of their activity.

Malware Family

DroidDreamLight*†

DroidKungFu*

FakeDoc*†

Fatakr*

GGTracker*
Gone60*†

NotCompatible

Plankton*†
Malware β*
WalkInWat*

#

Assoc.

Do-
mains

3
1
1
1
3
1
3
4
1
1

* Disclosed before any of our epochs
† Distributed in Google Play market

#Devices
(Any type)

#Devices

(Mobile only)

150
19

5417
328

1
1

2198
686
18
215

44
6

2145
151

1
1

762
286

1
95

Table 6: Malicious Apps with Domains in Mobile Net-
work

Figure 10: DNS request volume for threat ǫ (2011)

Threat ǫ is an Android application that masquerades as a
legitimate client to a popular Internet streaming media ser-
vice. When run, the application presents a credible login
screen. When the user attempts to log in, the application
displays an error message and closes.
In the meantime,
it has sent the user’s credentials to domain qnameǫ in an
HTTP request. This threat was publicly disclosed by a ma-
jor anti-virus company in October 2011.

Threat β is an Android application that starts a service
after reboot that periodically contacts a C&C server hosted
on domain qnameβ. The service will respond to commands
received from the C&C or via SMS. One command causes
the application to sign all contacts up to an on-line mailing
list, while another command has the application send in-
fected download links to all contacts via SMS. These links
are on a different domain than qnameβ. The application
will automatically respond to received SMS with an offen-

Figure 11: DNS request volume for threat β (2010 to
2011)

sive message, and in certain cases will send offensive SMS
messages to all contacts. This threat was publicly disclosed
by a major anti-virus company in May 2011.

5.3.1 Lifetime and Infection Scale

Figure 10 shows the daily lookup volumes for qnameǫ,
which acts as a proxy for the victims of threat ǫ. These
lookups could be recursive DNS servers, so we cannot make
any claims about the size of the overall infected population.
The threat was most active on April 12th, but soon after
rapidly declines. The ﬁrst lookup for qnameǫ was recorded
on March 3rd, 2011, and by June 5th 3 there were DNS
requests from 2,731 unique requesters. Table 7 shows the
query volume, AS, and country code of the top ten net-
works that sent requests to qnameǫ; the majority of these
are based in the US. Of note is that this threat seems to
have ended well before it was publicly disclosed in October
2011; at the time of disclosure, qnameǫ no longer resolved
to a routable address.

Figure 11 shows the lifetime of threat β in terms of query
volume. This threat became active in January of 2010, and
at its peak in February – March 2011 it averaged more than
70,000 DNS requests per day. Over the 14 months that
this threat was active, 13,094 unique IP addresses queried
the domain name qnameβ. As before, this number can-
not be considered an absolute population estimate. Table 7
shows the distribution of the infected populations for mo-
bile threats β and ǫ. We see that a signiﬁcant portion of
the infected population resides in Asia-based networks. We
also note that Google (AS 15169) has a heavy impact on the
numbers in Table 7 (most likely due to crawling). Threat ǫ
was disclosed well past its peak in DNS requests.

3 We have no data from the authoritative DNS server after this date, so

we have no visibility into later activity

Threat ǫ

Volume

AS

816
112
97
92
67
52
47
44
38
33

3356
15169
7132
9299
7843
20115
6389
7643
22773
24560

Threat β

Volume

AS

7315
470
266
222
210
160
139
127
122
115

3356
3462
15169
4766
7132
9299
6389
9121
20115
24560

CC

US
TW
US
KR
US
PH
US
TR
US
IN

CC

US
US
US
PH
US
US
US
VN
US
IN

Table 7: Requester information with respect to au-
tonomous system (AS), country code (CC), and count of
unique IPs in the AS (volume).

Threat ǫ

Volume

AS

11
3
1
1

6389
20115
7132
13674

CC

US
US
US
US

Threat β

Volume

AS

237
28
28
15

6389
49544
27589
29550

CC

US
NL
US
GB

Table 8: Information on the hosting infrastructure used
by the two mobile threats.

5.3.2 Hosting Infrastructure

Here we describe in detail the Internet infrastructure used
by both threats. Table 8 shows the autonomous systems,
country codes, and the number of hosts within each AS
4 pointed to throughout their life-
that qnameǫ or qnameβ
time. Figure 12 shows how the host pointed to by qnameǫ
changed over time. The host was primarily located in AS
6389, but for brief periods of time the domain resolves to
hosts outside AS 6389. Comparing the activity of threat ǫ
(Figure 10) to the changes in the host (Figure 12) reveal
that host changes were correlated with activity peaks (as
seen in April 2011). Figure 13, shows host changes over-
time for threat β. Like threat ǫ, the host infrastructure was
relatively stable until peak activity (January – June 2011).
The changes in this case may have been to add redundancy
to the C&C infrastructure as it grew.

These case studies provide three key insights into the
life-cycle of mobile threats. First, in the case of threat ǫ, the
malicious app was not publicly disclosed until months af-
ter its peak activity. In this case, reactive security measures
failed to detect a threat until well after it was most effective.
Second, both of these threats show a growth pattern similar
to those shown in non-mobile malware studies [8]. Third,

4Only the top four ASes are presented; these comprise all hosts for

threat ǫ and 308 out of the 316 hosts used by threat β.

Figure 12: Threat ǫ’s host infrastructure shows agility
comparable to non-mobile botnets

Figure 13: Threat β’s host infrastructure also shows
agility comparable to non-mobile botnets

the agility in the hosting infrastructure used by these threats
does not resemble professional DNS hosting. Rather, they
are similar to non-mobile botnet operators that commonly
use tactics like moving to hosts in different networks and
countries to provide agility to their illicit operations. In fu-
ture work, the agility seen in these mobile threats may be
exploited by traditional DNS reputation systems to detect
potentially suspicious domain names in the mobile space.

6 Related Work

The importance of mobile networks is increasing as
society becomes more reliant on mobile devices such as
smartphones, tablets, and mobile broadband cards. Sev-
eral works have examined mobile device network trafﬁc
to learn about the general network characteristics of those

devices [19, 24, 18]. Past studies have shown that certain
design considerations have made these networks inherently
vulnerable to Denial of Service (DoS) attacks. Traynor et
al. [41, 42] proposed a text messaging DoS with only the
bandwidth of a cable modem. This research demonstrated a
growing class of vulnerabilities due to the increasingly in-
tertwined connectivity between the Internet and traditional
voice networks. Other work has shown that the use of data
communication protocols on voice networks creates the po-
tential for failure under modest loads [35, 44, 43, 40]. Ac-
cordingly, signiﬁcant effort has now been directed towards
the analysis of potentially malicious mobile applications.

Numerous studies have highlighted the weaknesses and
potential for misuse of various aspects of the Android se-
curity model [16, 23, 20, 22, 12]. Other work on Android
devices suggests that it is difﬁcult to tell if an application
breaks any phone-wide security policies [17] and has re-
sulted in tools to aid in the analysis of Android applications
[14, 15]. Additional studies have surveyed the types of mal-
ware seen in the wild and evaluated the efﬁcacy of different
techniques in preventing and identifying such threats in the
future [21]. However, app analysis alone provides an in-
complete picture of the current state of malware on mobile
devices and networks.

Network level analysis of malicious behavior offers
a complementary means of characterizing and mitigating
malware. For example, a popular method of preventing or
limiting the spread of malware is the use of Internet black-
lists.
IP blacklists provide a list of known bad actors in
the form of IP addresses which network operators can sub-
sequently block; however, the use of DNS to build mali-
cious network infrastructures has grown due to its resilience
against IP blacklisting [36, 37]. Consequently, a signiﬁcant
amount of work has focused on analyzing those networks at
the DNS level [27, 45, 29, 13, 25]. This has led to the cre-
ation of systems that are able to detect malicious domains
through the use of passive DNS monitoring and machine
learning [7, 10]. Furthermore, recent work has shown that
detection of malicious domains can also be accomplished
by passively monitoring DNS at the upper levels of the DNS
hierarchy; this allows DNS operators to independently de-
tect malicious domains without relying on local recursive
DNS servers [8]. Ultimately, these systems allow network
operators to assemble DNS blacklists of malicious and sus-
picious domains in order to detect and prevent malicious
activity on the network.

Though there has been considerable effort targeted to-
wards detecting network malware, it has been focused pri-
marily on traditional wired networks. The question of
whether such threats differ or even exist in real mobile net-
works has yet to be evaluated through empirical results.

7 Conclusions

In this paper, we presented a study of trafﬁc obtained
from a major US cellular provider as well as a major US
non-cellular Internet service provider. Our work provides
an in-depth understanding of the Internet infrastructure used
for mobile malware. In particular, we showed that the net-
work infrastructure used by mobile applications is part of
the core Internet infrastructure used by applications in the
non-cellular world; in other words, the mobile web is part
of the Internet. We presented evidence showing that the
mobile malware discovered by the research community ap-
pears in a minuscule number of devices in the network; this
suggests that mobile application markets are already pro-
viding adequate security for a majority of mobile devices.
We compared trafﬁc to suspicious hosts between different
mobile device platforms and demonstrated that iOS devices
are no less likely than other platforms to reach out to such
devices. Finally, we analyzed two major mobile threats and
found that their network characteristics are similar to those
of non-cellular botnets. Overall, these ﬁndings suggest that
there are commonalities, in terms of both network infras-
tructure and characteristics, between malicious mobile ap-
plications and non-cellular malware. Therefore, we should
leverage our successful experiences with DNS monitoring
and reputation systems for non-cellular ISPs to develop a
similar system for cellular carriers to identify (emerging)
mobile threats. We leave this as a future work.

8 Acknowledgements

This work was supported in part by the US National Sci-
ence Foundation (DGE-1148903, CNS-0916047, CAREER
CNS-0952959, TWC-1222699, 0831300) and the Ofﬁce of
Naval Research (N000140710907, N000140911042). Any
opinions, ﬁndings, and conclusions or recommendations ex-
pressed in this material are those of the authors and do not
necessarily reect the views of the National Science Founda-
tion or the Ofﬁce of Naval Research.

References

[1] Admob. http://www.admob.com.
[2] Heytell - instant voice messaging. http://heytell.

com/front.html.

[3] Android/DroidKungFu.A!tr.

http://www.

fortiguard.com/encyclopedia/virus/
android_droidkungfu.a!tr.html, June 2011.

[4] Android/FakeDoc.A!tr.

http://www.fortiguard.

com/av/VID3304615, Dec. 2011.

[5] Android/Steek.A!tr. http://www.fortiguard.com/av/VID3458224,

Jan. 2012.

[6] Alexa. The web information company. http://www.

alexa.com/, 2007.

[7] M. Antonakakis, R. Perdisci, D. Dagon, W. Lee, and
N. Feamster. Building a dynamic reputation system for
DNS.
In Proceedings of the 19th USENIX Security Sym-
posium, 2010.

[8] M. Antonakakis, R. Perdisci, W. Lee, N. Vasiloglou, and
D. Dagon. Detecting malware domains at the upper DNS
hierarchy. In Proceedings of the 20th USENIX Security Sym-
posium, 2011.
[9] BBC News.

Malicious app penetrates iTunes store
http://www.bbc.co.uk/news/

to test security.
technology-15635408, 2012.

[10] L. Bilge, E. Kirder, C. Kruegel, and M. Balduzzi. Exposure:
Finding malicious domains using passive DNS analysis. In
Proceedings of the 18th Network and Distributed Systems
Symposium, 2011.

[11] Cathal Mullaney and Jeet Morparia. Android.Tonclank.

http://www.symantec.com/security_
response/writeup.jsp?docid=2011-061012-
4545-99, June 2011.

[12] E. Chin, A. Felt, K. Greenwood, and D. Wagner. Analyzing
inter-application communication in Android.
In Proceed-
ings of International Conference on Mobile Systems, Appli-
cations, and Services, 2011.

[13] D. Dagon, M. Antonakakis, P. Vixie, T. Jinmei, and W. Lee.
Increased DNS forgery resistance through 0x20-bit encod-
ing: security via leet queries.
In Proceedings of the 15th
ACM Conference on Computer and Communications Secu-
rity, 2008.

[14] W. Enck, P. Gilbert, B. Chun, L. Cox, J. Jung, P. McDaniel,
and A. Sheth. Taintdroid: An information-ﬂow tracking sys-
tem for realtime privacy monitoring on smartphones. In Pro-
ceedings of the 9th USENIX Symposium on Operating Sys-
tems Design and Implementation, 2010.

[15] W. Enck, D. Octeau, P. McDaniel, and S. Chaudhuri. A
study of Android application security. In Proceedings of the
20th USENIX Security Symposium, 2011.

[16] W. Enck, M. Ongtang, and P. McDaniel. On Lightweight
Mobile Phone Application Certiﬁcation. In Proceedings of
the ACM Conference on Computer and Communications Se-
curity, 2009.

[17] W. Enck, M. Ongtang, and P. McDaniel. Understanding
IEEE Security and Privacy Magazine,

Android security.
7(1):50–57, 2009.

[18] J. Erman, A. Gerber, K. K. Ramadrishnan, S. Sen, and
O. Spatscheck. Over the top video: the gorilla in cellular
networks. In Proceedings of the 2011 ACM SIGCOMM con-
ference on Internet measurement conference, IMC ’11, page
127136, New York, NY, USA, 2011. ACM.

[19] H. Falaki, D. Lymberopoulos, R. Mahajan, S. Kandula, and
D. Estrin. A ﬁrst look at trafﬁc on smartphones.
In Pro-
ceedings of the 10th ACM SIGCOMM conference on Inter-
net measurement, IMC ’10, page 281287, New York, NY,
USA, 2010. ACM.

[20] A. Felt, E. Chin, S. Hanna, D. Song, and D. Wagner.
Android permissions demystiﬁed.
In Proceedings of the
ACM Conference on Computer and Communication Secu-
rity, 2011.

[21] A. Felt, M. Finifter, E. Chin, S. Hanna, and D. Wagner. A
survey of mobile malware in the wild. In ACM Workshop on

Security and Privacy in Smartphones and Mobile Devices,
2011.

[22] A. Felt, K. Greenwood, and D. Wagner. The effectiveness
of application permissions. In Proceedings of the USENIX
Conference on Web Application Development, 2011.

[23] A. Felt, H. Wang, A. Moschuk, S. Hanna, and E. Chin. Per-
mission re-delegation: Attacks and defenses. In Proceedings
of the 20th USENIX Security Symposium, 2011.

[24] A. Gember, A. Anand, and A. Akella. A comparative study
of handheld and non-handheld trafﬁc in campus Wi-Fi net-
works. In Proceedings of the 12th international conference
on Passive and active measurement, PAM’11, page 173183,
Berlin, Heidelberg, 2011. Springer-Verlag.

[25] S. Hao, N. Feamster, and R. Pandrangi. An internet wide
view into DNS lookup patterns. Technical report, Verisign
Labs, 2010.

[26] T. Holz, C. Gorecki, K. Rieck, and F. Freiling. Measuring
and detecting fast-ﬂux service networks. In Proceedings of
Annual Network and Distributed Systems Security Sympo-
sium (NDSS), 2008.

[27] J. Jung, E. Sit, H. Balakrishnan, and R. Morris. DNS perfor-
mance and the effectiveness of caching. IEEE/ACM Trans-
actions on Networking, 10(5):589–603, 2002.

[28] M. Kassner. Google Play: Android’s Bouncer can be
http://www.techrepublic.com/blog/

pwned.
security/google-play-androids-bouncer-
can-be-pwned/8053, 2012.

[29] C. Liu and P. Albitz. DNS and BIND. O’Reilly Media, 5th

edition edition, 2006.

[30] J. Ma, L. Saul, S. Savage, and G. Voelker. Beyond blacklists:
Learning to detect malicious web sites from suspicious urls.
In Proceedings of the SIGKDD Conference, 2009.

[31] P. Mockapetris. Domain names - concepts and facilities.
RFC 1034 (Standard), Nov. 1987. Updated by RFCs 1101,
1183, 1348, 1876, 1982, 2065, 2181, 2308, 2535, 4033,
4034, 4035, 4343, 4035, 4592, 5936.

[32] P. Mockapetris. Domain names - implementation and spec-
iﬁcation. RFC 1035 (Standard), Nov. 1987. Updated by
RFCs 1101, 1183, 1348, 1876, 1982, 1995, 1996, 2065,
2136, 2181, 2137, 2308, 2535, 2845, 3425, 3658, 4033,
4034, 4035, 4343, 5936, 5966.

[33] Nino Fred Gutierrez.

Android.Gonesixty.

http:

//www.symantec.com/security_response/
writeup.jsp?docid=2011-093001-2649-99,
Sept. 2011.

[34] Piotr Krysiuk.

Android.Ggtracker.

http:

//www.symantec.com/security_response/
writeup.jsp?docid=2011-062208-5013-99,
June 2011.

[35] F. Ricciato. Unwanted trafﬁc in 3g networks. ACM SIG-
COMM Computer Communication Review, 36(2):53–56,
2006.

[36] P. Royal. Analysis of the kraken botnet. Technical report,

Damballa Labs, 2008.

[37] S. Shevchenko. Srizbi’s domain calculator, 2008.
[38] Takashi Katsuki.

Android.Walkinwat.

http:

//www.symantec.com/security_response/
writeup.jsp?docid=2011-033008-4831-99,
Mar. 2011.

[39] Tim Wyatt. DroidDreamLight, new malware from the de-
velopers of DroidDream. http://blog.mylookout.
com/blog/2011/05/30/security-alert-
droiddreamlight-new-malware-from-the-
developers-of-droiddream/, May 2011.

[40] P. Traynor, C. Amrutkar, V. Rao, T. Jaeger, P. McDaniel, and
T. La Porta. From Mobile Phones to Responsible Devices.
Journal of Security and Communication Networks (SCN),
4(6):719 – 726, June 2011.

[41] P. Traynor, W. Enck, P. McDaniel, and T. L. Porta. Ex-
ploiting open functionality in sms-capable cellular networks.
Journal of Computer Security, 16(6):713–742, 2008.

[42] P. Traynor, W. Enck, P. McDaniel, and T. L. Porta. Mitigat-
ing attacks on open functionality in sms-capable cellular net-
works. IEEE/ACM Transactions on Networking, 17(1):40–
53, 2009.

[43] P. Traynor, M. Lin, M. Ongtang, V. Rao, T. Jaeger, T. L.
Porta, and P. McDaniel. On cellular botnets: Measuring the
impact of malicious devices on a cellular network core. In
Proceedings of the ACM Conference on Computer and Com-
munications Security, 2009.

[44] P. Traynor, P. McDaniel, and T. L. Porta. On attack causal-
ity in internet-connected cellular networks. In Proceedings
of the 16th Network and Distributed Systems Symposium,
2007.

[45] D. Wessels, M. Fomenkov, N. Brownlee, and K. Claffy.
Measurements and laboratory simulations of the upper DNS
hierarchy. In Proceedings of Passive and Active Measure-
ment Workshop, 2004.

[46] Yi Li.

Android.Notcompatible.

http://www.

symantec.com/security_response/writeup.
jsp?docid=2012-050307-2712-99, May 2012.

[47] Y. Zhou and X. Jiang. Dissecting Android Malware: Char-
acterization and Evolution. In Proceedings of the IEEE Sym-
posium on Security and Privacy (OAKLAND), 2012.

[48] Y. Zhou, Z. Wang, W. Zhou, and X. Jiang. Hey, You, Get off
of My Market: Detecting Malicious Apps in Ofﬁcial and Al-
ternative Android Markets. In Proceedings of the 19th Net-
work and Distributed System Security Symposium (NDSS),
2012.

