2016 IEEE Symposium on Security and Privacy
2016 IEEE Symposium on Security and Privacy

Sending out an SMS: Characterizing the Security of

the SMS Ecosystem with Public Gateways

Bradley Reaves, Nolen Scaife, Dave Tian, Logan Blue, Patrick Traynor, and Kevin R.B. Butler

Florida Institute for Cybersecurity Research (FICS)

{reaves, scaife, daveti, bluel}@uﬂ.edu, {traynor, butler}@cise.uﬂ.edu

University of Florida

Abstract—Text messages sent via the Short Message Service
(SMS) have revolutionized interpersonal communication. Recent
years have also seen this service become a critical component of
the security infrastructure, assisting with tasks including identity
veriﬁcation and second-factor authentication. At the same time,
this messaging infrastructure has become dramatically more open
and connected to public networks than ever before. However, the
implications of this openness, the security practices of benign
services, and the malicious misuse of this ecosystem are not well
understood. In this paper, we provide the ﬁrst longitudinal study
to answer these questions, analyzing nearly 400,000 text messages
sent to public online SMS gateways over the course of 14 months.
From this data, we are able to identify not only a range of services
sending extremely sensitive plaintext data and implementing low
entropy solutions for one-use codes, but also offer insights into
the prevalence of SMS spam and behaviors indicating that public
gateways are primarily used for evading account creation policies
that require veriﬁed phone numbers. This latter ﬁnding has
signiﬁcant implications for research combatting phone-veriﬁed
account fraud and demonstrates that such evasion will continue
to be difﬁcult to detect and prevent.

I. INTRODUCTION

Text messaging has become an integral part of modern
communications. First deployed in the late 1990s, the Short
Messaging Service (SMS) now delivers upwards of 4.2 trillion
messages around the world each year [70]. Because of its
ubiquity and its perception as providing a secondary channel
bound tightly to a user’s identity, a range of organizations
have implemented security infrastructure that take advantage
of SMS in the form of one-time codes for two-factor authen-
tication [10], [26], [36] and account validation [73].

The text messaging ecosystem has evolved dramatically
since its inception, and now includes a much wider range of
participants and channels by which messages are delivered
to phones. Whereas phone numbers once indicated a speciﬁc
mobile device as an endpoint and were costly to acquire, text
messages may now pass through a range of different domains
that never touch a cellular network before being delivered to a
non-cellular endpoint. Moreover, these systems allow users to
send and receive messages for free or low cost using numbers
not necessarily tied to a mobile device, speciﬁc geographic
area or even a single customer. As such, they violate many of
the assumptions upon which the previously mentioned security
services were founded.

In this paper, we perform the ﬁrst longitudinal security
study of the modern text messaging ecosystem. Because of

the public nature of many SMS gateways (i.e., messages are
simply posted to their websites), we are able to gain signiﬁcant
insight into how a broad range of companies are implementing
SMS-based security services. Moreover, these systems allow
us to see the ways in which defenses such as phone-veriﬁed
accounts (PVAs) are successfully being circumvented in the
wild. Our work makes the following contributions:

• Largest Public Analysis of SMS Data: While others
have looked at aspects of SMS security in the past [37],
[38], ours is the largest and longest study to date. Our
analysis tracks over 400 phone numbers in 28 countries
over the course of 14 months, resulting in a dataset
of 386,327 messages. This dataset, which is orders of
magnitude larger than any previous study of SMS, allows
us to reason about the messaging ecosystem as a whole,
which has not been possible in previous public studies.
• Evaluation of Security Posture of Benign Services:
We observe how a range of popular services use SMS as
part of their security architecture. While we ﬁnd many
services that attempt to operate in a secure fashion, we
identify a surprising number of other services that send
sensitive information in the clear (e.g., credit card num-
bers and passwords), include identifying information, and
use low entropy numbers for their one-use codes. Because
there is no guarantee that this channel is indeed separate,
such observations create the potential for attacks.

• Characterization of Malicious Behavior via SMS
Gateways: We cluster and characterize the lifetime, vol-
ume and content of the trafﬁc seen in SMS gateways.
Our analysis uncovers numerous malicious behaviors,
including bulk spam and phishing. Most critically, our
data shows that these systems are being used to support
phone-veriﬁed account fraud, and the ways in which
these systems are used makes proposed mitigations from
previous work [72] largely ineffective.

We note the very fact

that some users are willing to
intentionally direct text messages to public portals is obviously
dangerous. We do not address this phenomenon and instead
focus on the risks of compromise of the SMS channel. Because
these messages are known by the recipient to be publicly
available, this dataset would naturally not be entirely repre-
sentative of all SMS activity of a typical user. Nevertheless,
this dataset enables the ﬁrst public insights into issues such

2375-1207/16 $31.00 © 2016 IEEE
© 2016, Bradley Reaves. Under license to IEEE.
DOI 10.1109/SP.2016.28
DOI 10.1109/SP.2016.28

339
339

Cloud

OTT 

Services

Cell Network

Core

Core

SMSC

SMSC

VOIP
Carrier

ESME
Reseller

VOIP
Carrier

ESME
Gateway

ESME
Reseller

ESME
Gateway

ESME
Reseller

Key

Encrypted

Not Encrypted

Over Internet

Web 

Services

Web 

Services

Fig. 1: While viewed as existing solely within cellular networks, the modern SMS ecosystem includes a wide variety of
non-traditional carriers, ESME gateways and resellers, and OTT services. This evolution challenges old assumptions (e.g.,
phone numbers represent mobile devices tied to a single identity) and create new opportunities for interception. Accordingly,
evaluating the state of this ecosystem is critical to understanding the security it provides.

as PVA scams, SMS spam, and sensitive information sent by
legitimate services. Furthermore, this data is widely available
to the community for continued evaluation and measurement
in the future.

The remainder of the paper is organized as follows: Sec-
tion II discusses the modern SMS ecosystem, which includes
and extends beyond traditional cellular infrastructure; Sec-
tion III discusses our collection and analysis methodology;
Section IV characterizes our dataset; Section V discusses
our analysis on legitimate usage of SMS via the gateways;
Section VI discusses the malicious behaviors seen in our
dataset. Section VII analyzes related work and Section VIII
provides concluding remarks.

II. THE MODERN SMS ECOSYSTEM

In this section, we describe at a high level how text messages
are sent and received, with a special emphasis on recent
developments that have greatly expanded the SMS ecosystem.
Figure 1 shows the components of the modern SMS ecosys-
tem in detail. Short Messaging Service Centers (SMSCs) route
messages through carrier networks and are the heart of the
SMS system [79]. These entities receive inbound text messages
and handle delivery of these messages to mobile users in the
network using a store-and-forward regime similar to email.
When a mobile device sends or receives a text message, the
message is encrypted between the phone and the base station
serving the phone; however, once inside the core network the
message is typically not encrypted.

Text messages 1 are not just sent between individuals, but
also by parties external to the network known as External
Short Message Entities (ESMEs). ESMEs form an entire
industry dedicated to facilitating the sending and receiving of
messages for large-scale organizations for purposes as diverse

1In this paper, we use SMS and “text message” interchangeably.

as emergency alerts, donations to charities, or receiving one-
time passwords [76]. These ESMEs act as gatekeepers and
interfaces to SMS. Some have direct connections to SMSCs in
carrier networks via SMPP (Short Message Peer-to-Peer) [66],
while others resell such access purchased from other ESMEs.
For example, the VoIP carrier Bandwidth.com provides SMS
access to many third party services. Recently, startups like
Twilio [22], Nexmo [11], and Plivo [15] serve as ESMEs and
provide easy-to-deploy, low cost voice and SMS services. They
serve a number of high-proﬁle clients, including Uber, Coca
Cola, and eBay.

Just as the methods for SMS distribution have evolved over
the past two decades, how end users receive SMS has evolved
as well. Originally, SMS were only delivered to mobile phones
or to ESMEs. With the advent of smartphones, this ecosystem
is changing rapidly. Over-the-top networks like Burner [3],
Pinger [14], and Google Voice [6] provide SMS and voice
services over data networks (including cellular data as well
as Internet). Many of these services contract out
to third
party ESMEs for service and do not actually act as ESMEs
themselves. Additionally, messages that are delivered to a mo-
bile device may not remain restricted to that device. Systems
like Apple Continuity [1], Google Voice, Pushbullet [16], and
MightyText [9] use local wireless networks or cloud services
to store and sync SMS from the receiving device to the user’s
other devices. Millions of subscribers use these services to
transfer their messages from their localized mobile device to
be stored in the cloud.

The modern SMS ecosystem has the consequence from
a security perspective that a single SMS may be processed
by many different entities — not just carriers — who in
toto present a broad attack surface. Attacks against
these
systems may be technical in nature and take a form similar
to publicized data breaches [52]–[54], [80]. While to date

340340

Site
(1) receivesmsonline.net
(2) receive-sms-online.info
(3) receive-sms-now.com
(4) hs3x.com
(5) receivesmsonline.com
(6) receivefreesms.com
(7) receive-sms-online.com
(8) e-receivesms.com

Messages

81313
69389
63797
55499
44640
37485
27094
7107

Phone #s

38
59
48
57
93
93
19
14

TABLE I: This table shows each of the SMS gateways we
analyzed and the number of messages collected from each.

there are no disclosed attacks against these SMS services,
we note that
there is precedent for inﬁltration of carrier
networks [81]. Social engineering attacks are also possible.
Mobile Transaction Authentication Numbers (mTANs)2 have
been stolen using SIM Swap attacks [74] where an attacker
impersonates the victim to a carrier to receive a SIM card
for the victim’s account, allowing the attacker to intercept
security-sensitive messages. Attackers have also compromised
accounts protected by one-time-passwords delivered over SMS
by impersonating the victim to set up number forwarding to
an attacker-controlled device [30]. Accordingly, it is worth
determining what kinds of data are being sent via SMS so that
the consequences of future compromise are well understood.
This work measures how different entities implement secu-
rity mechanisms via text messages through the use of public
SMS gateways. As such, we are able to observe a wide array of
services and their behavior through time. Additionally, because
these gateways provide phone numbers to anonymous users,
we are also able to measure the extent to which such gateways
are being used for malicious purposes. This combined mea-
surement will help to provide the research community with
a more accurate and informed picture of the security of this
space.

III. METHODOLOGY

In this section, we describe the origins of our dataset,
discuss some limitations of this dataset, discuss supplementary
sources that give us additional insights into our SMS dataset,
and ﬁnally describe the techniques we use to extract meaning-
ful information from this dataset.

A. Public Gateways

In the previous section we noted that there are a number
of organizations that process text messages, including carri-
ers, ESMEs, resellers, and value-added services like message
syncing. Within the category of ESMEs lie a niche class
of operator: public SMS gateways. Many third party entities
(including cellular carriers) provide external public interfaces
to send text messages (but not receive them). Example use
cases include the convenience of an email gateway or the
ability to use a web service to send a message to a friend
after one’s mobile phone battery dies.

2mTANs are used to authenticate mobile banking transactions via SMS in

many countries, including Germany, South Africa, and Russia.

While there are many public services for sending messages,
they also have counterparts in public websites that allow
anyone to receive a text message online. These systems
publish telephone numbers that can receive text messages,
and when a text message arrives at that number the web
site publicly publishes the text message. These services are
completely open — they require no registration or login, and
it is clear to all users that any message sent to the gateway is
publicly available. We recognized the research value of these
messages for the potential to inform a data-driven analysis,
and collected them over a 14 month period from 8 distinct
public gateways that facilitate the receiving of text messages3,
listed in Table I. These gateways have similar names that
are potentially confusing, so where appropriate we reference
them by an assigned number 1—8 based on message volume.
Despite their similar names, most of these services appear to
be unafﬁliated, and each has distinct hosting infrastructure.
Gateways 4, 5, and 7 share 21 phone numbers, indicating a
likely relationship between these gateways.

These different services have essentially the same func-
tionality, but advertise their intended use in different ways.
For example, Gateway 2 claims to be “useful if you want
to protect your privacy by keeping your real phone number
away from spammers,” while Gateway 4 instructs users to
“Enter the number where you want verify [sic] like Gmail,
Yahoo, Microsoft, Facebook, Amazon, VK etc.” Gateway 7
has perhaps the most speciﬁc use case: “When your ex-wife
wants to send you a text message.” Gateway 4 indicates that
they expect users to use their service for account veriﬁcation,
while Gateways 2 and 7 simply advertise themselves as privacy
services. We suspect that the business model of most of these
websites relies on advertising revenue, and this is conﬁrmed
by at least Gateway 2, which prominently displays “almost
all of [our income] comes from our online advertising” in a
banner requesting that users disable their ad blocker. However,
advertising is not the sole source of revenue for every system:
Gateways 3, 4, 5, 6, and 8 sell private numbers for receiving
SMS, while Gateways 4 and 5 actually sell veriﬁed Google
Voice and WhatsApp accounts.

a) Ethical Considerations: As researchers, our ultimate
goal is to improve the security practices of users and organi-
zations, but we must do so ethically. In particular, we should
make every effort to respect the users whose data we use in
our studies.

A superﬁcial ethical analysis would conclude that because
it is clear that all messages sent to these gateways are public,
and their use is strictly ”opt-in”, users have no reasonable
expectation of privacy in the collection and analysis of this
data. While we believe this analysis to be true, the situation
is more complex and requires further discussion, as there are
a number of parties to these messages. In addition to users
who knowingly provide a gateway number as their own phone
number, other individuals and institutions (companies, chari-

3Note that throughout the rest of the paper we use the term “gateway” to

refer exclusively to these receive-only SMS gateways.

341341

ties, etc.) may send information to individuals, not knowing
that the messages are delivered to a public gateway. While
institutions rightfully have privacy rights and concerns, they
differ from those of individuals. As we show in our results,
the vast majority of the information that we collect is sent
indiscriminately and automatically by organizations to a large
number of recipients. This information is unlikely to contain
information that would negatively impact the institution if
disclosed. Although we study bulk institutional messages, we
do not analyze further those messages determined to be of
a strictly personal nature. While those messages may have
a research value, we deliberately avoid these messages to
prevent further propagating this data.

Nevertheless, the use of gateways absolutely creates conﬁ-
dentiality and privacy concerns. For example, when personally
identifying information (PII) or account credentials are sent
to a gateway (whether or not all parties are aware), the com-
promise of that information is immediate and irrevocable 4.
Because we do not make our data available to others, this study
does not change — in severity or duration — the harm done
by the existence and use of the gateway. Furthermore, while
in Section V-A we describe a host of sensitive information
found in the dataset, we do not publish, use, or otherwise take
advantage of this information. In particular, we especially do
not attempt to access accounts owned by gateway users or
operators.

We recognize that there are ethical questions raised not
just with the collection of this data, but also by combining
it with other data sources. Our data augmentation is sufﬁ-
ciently course-grained that no individual user of a gateway
could be identiﬁed through our additional data 5. Geographic
information not already disclosed in text messages was limited
to country-scale records in the case of gateway users and city-
scale in the case of gateway numbers (which in any case do
not likely correlate with the location of the gateway operator).
Overall, our hope is this study would raise awareness of the
risks of sending sensitive information over insecure media and
prevent future harm.

b) Limitations: To the best of our knowledge, this paper
presents an analysis of the largest dataset of SMS published
to date. However, there are some limitations to this data.
First, because the messages are public, many services that use
SMS (like mobile banking) are likely underrepresented in our
dataset. For this reason, it is likely that our ﬁndings about
sensitive data appearing in SMS are likely underestimated.
Second, because gateways change their phone numbers with
regularity, it is unlikely that long-term accounts can be suc-
cessfully created and maintained using these numbers, which
may bias the number of services we observe in our dataset.
Accordingly,
those users are unlikely to enable additional

4Except perhaps by the gateway itself; however, it is clear from our data

that gateways are not taking steps to prevent PII exposure

5The one exception to this was an individual whose information was used
(likely without his/her knowledge) to register a domain used in a phishing
scam. This information was discovered after a routine WHOIS lookup after
discovering the phishing domain.

security services like mobile two-factor authentication (2FA)
using one-time passwords (OTP), further limiting our visibility
to a wider range of services. These limitations mean that
the overall distributions that we report may not generalize to
broader populations. Nevertheless, we believe that this work
provides useful conclusions for the security community.

B. Crawling Public Gateways

To gather messages from gateways, we developed a web
crawler using the Scrapy [19] framework. Every 15 minutes,
our crawler connected to each gateway, obtained new mes-
sages, and stored these in a database. We faced two challenges
to accurately recording messages: ignoring previously crawled
messages and recovering message received times.

Ignoring previously crawled messages was difﬁcult because
gateways display the same messages for a considerable amount
of time (days, months, or even years). A consequence of this
is that our dataset contains messages that gateways received
before our data collection began. In order to prevent storing
the same messages repeatedly (and thus skewing the results),
we discard previously crawled messages upon arrival by com-
paring the hash of a concatenation of the sender and receiver
MSISDNs and the message content against hashes already in
the database. If a match is found, the message sent times are
compared to ensure that they were the same instance of that
message, ensuring that messages that were repeatedly sent are
still included in the data.

Message times required ﬁnesse to manage because gateways
report a relative time since the message was received (e.g.,
“3 hours ago”) instead of an ideal ISO-8601 timestamp [69].
Parsing these timestamps is fairly simple, but care must
be taken when doing comparisons using these times as the
precision can vary (“3 minutes” vs. “3 days”). To ensure
accuracy, we store and take into account the precision of every
timestamp when comparing message timestamps.

C. Additional Data Sources and Analyses

1) Phone Number Analysis: After the scrapers pull the
initial data from the gateways, the data is augmented with
data from two outside sources. The ﬁrst service, Twilio [22],
provides a RESTful service that provides mobile, VoIP, and
landline number look ups. Twilio resolves the number’s coun-
try of origin, national number format for that country, and
the number’s carrier. Carrier information includes the carrier’s
name, the number’s type, and the mobile network and country
codes. Twilio is accurate and appropriately handles issues like
number porting, which could cause inconsistencies in our data
if incorrect.

The second service, OpenCNAM [12], provides caller iden-
tity information for North American numbers. This database
contains a mapping of phone numbers and strings; carriers
consult this database to provide Caller ID information when
connecting a call. Therefore, OpenCNAM is also the most
accurate public location to obtain identity information for
North American numbers.

342342

We obtained data from both Twilio and OpenCNAM for all
the numbers that were hosted on the gateways as well as a
subset of the numbers that contacted the hosted numbers.

2) URL Analysis: We extracted 20,793 URLs from mes-
sages by matching URL regular expressions with each message
in the dataset. Overall, there were 848 unique second-level
domains and 1,055 unique base URLs (fully-qualiﬁed domain
names and IP addresses) in this set. For each of these domains,
we obtained domain registration data. A domain’s WHOIS
registration data contains useful metadata about the history
of a domain, including its creation date. Since this data is
distributed among registrars, it is not always available and
some ﬁelds may be restricted. We were able to obtain complete
registration data for 532 of the second-level domains in our
set.

Furthermore, we also checked strings of numbers to de-
termine if they were identiﬁcation numbers such as US So-
cial Security Numbers or national identiﬁers from Austria,
Bulgaria, Canada, China, Croatia, Denmark, Finland, India,
Italy, Norway, Romania, South Korea, Sweden, Taiwan, or the

Due to the limited length of an SMS message, shortened
URLs are often sent in these messages. The short URL is
a hop between the user and the destination, allowing URL
shortening services to collect data about the users following
the links. For each Bitly- and Google-shortened URL, we
obtained statistics (e.g., number of clicks) when possible. The
SMS gateway services do not publish data on their users,
so this data represents one of the best
insights into user
demographics in our dataset.

Finally, since these gateways freely accept and publicly post
SMS messages, the gateways represent an easy mechanism for
delivering malicious messages including phishing or malicious
URLs. VirusTotal [82] can provide valuable insight into the
maliciousness of a given URL. We requested scans of each of
the URLs via VirusTotal and collected the scan reports. If a
URL had a previously-requested scan, we collected the cached
scan and did not rescan the URL. Due to the short lifetimes
of some malicious domains, we anticipated earlier scan results
would be more accurate. For each product that VirusTotal uses
to scan the URL, it reports whether or not the product alerted
and if so, the category of detection.

Information

3) Personally-Identifying

Analysis: We
searched the messages for personally-identifying information
(PII) [58] using regular expressions. In particular, we searched
for major credit card account numbers (e.g., Visa, Mastercard,
American Express, Discover, JCB, and Diners Club). For
each match, we further veriﬁed these numbers using the Luhn
algorithm [57]. This algorithm performs a checksum and can
detect small input errors in an account number. This checksum
is built into all major credit card account numbers and can
also assist in distinguishing a 16-digit Visa account number
from a 16-digit purchase order number, for example. This
check is rudimentary, however, and we manually veriﬁed the
remaining matches to verify that they contextually appeared
to be account numbers (i.e., the messages containing these
numbers appeared to reference an account number).

United Kingdom. We found no valid matches in our data.

D. Message Clustering

A major goal of this study is to determine what types
of messages are sent via SMS and how service providers
are using SMS. While there are available machine learning
techniques for this type of analysis and clustering (e.g., topic
discovery and text clustering), scalability is a major problem
when dealing with the large number of messages in our dataset.
Accordingly, we explore other methods as described below.
Keyword Analysis. As a ﬁrst attempt, we automatically
labeled messages in the dataset using searches in multiple
languages for keywords such as “password,” “email,” and
“veriﬁcation.” We found that these keywords are often over-
loaded and insufﬁcient for successfully separating the data. For
example, Talk2 [21] uses “veriﬁcation code” for the purpose of
new account creation, while SMSGlobal [20] uses “veriﬁcation
code” for one-time passwords. Adding further complication,
LiqPay [8] uses “password” for one-time passwords.

Furthermore, we identiﬁed messages that referenced our
keywords without containing any obvious authentication data.
These messages are often informative messages about
the
keywords (e.g., “Do not disclose your password.”). Conversely,
some messages containing sensitive information did not in-
clude keywords. Ultimately, the outcome of this experiment
was unsuccessful,
labeling
approach.
Clustering Analysis. Through further analysis, we discovered
that many messages from the same service provider share the
same pattern. We manually reviewed messages and grouped
similar messages together into “clusters”6.

leading us to adopt a manual

The essence of our clustering algorithm is distance-based
clustering [42]. However, we wanted a high-accuracy clus-
tering algorithm with minimal and easily estimated tuning
parameters, ruling out k-means. We attempted to use an edit-
distance metric to group similar messages into a connected
graph (where edges are created between similar messages),
but a pairwise algorithm exceeded the time and hardware
available to the project. Instead, we noted that the messages we
were interested in were virtually identical, apart from known
common variable strings like codes or email addresses. By
replacing these with ﬁxed values, a simple lexical sort would
group common messages together. We then identiﬁed cluster
boundaries by ﬁnding where the normalized edit distance
was lower than a threshold (0.9) between two consecutive
sorted messages. Our threshold was was empirically selected
to conservatively yield correct clusters, and we were able
to cluster all 386,327 messages in a few minutes with high
accuracy.

A more explicit statement of this process follows:
1) Load all messages.
2) Preprocess messages by replacing numbers, emails and

URLs with ﬁxed strings.

6Our deﬁnition of this term should not be confused with the classic machine

learning deﬁnition of “clustering.”

343343

3) Alphabetically sort preprocessed messages.
4) Separate messages into clusters by using an edit distance

threshold to ﬁnd dissimilar consecutive messages.

5) Manually inspect each cluster to label service providers,
message types, etc. In this step, we culled clusters that
had < 43 messages7.

Preprocessing is perhaps the most important step, because
it allows us to avoid aligning messages from different service
providers together. When using naive sorting on the original
messages, the sorting places together messages from various
services that start with a veriﬁcation code. We avoid this
problem by replacing variable content with a ﬁxed string,
causing the ﬁnal sort order to be related to the non-variable
content of the messages. Unlike traditional machine learning
methods, our sorting-based clustering method is fast (minutes
for our dataset).

After clustering, we manually labeled each cluster, a time-
consuming process which allowed us to both verify the correct-
ness of the cluster generation, and guarantees correct labels.
It is difﬁcult to determine the intent of the message when
the message contains little context (e.g. “X is your Google
veriﬁcation code.”). For the most common 100 services, we
attempted to identify message intentions using those services’
public documentation. Where this information was unavail-
able, we attempted to register accounts with the services to
obtain messages and match these to our clusters. If we were
still unable to determine the message type, we classiﬁed these
with a generic label. We also deﬁne and apply labels based
on the overall content of the message, including content such
as PII or any sensitive, security-related information.

E. Message Intentions

Due to the lack of standardized terms for the intentions of
the authentication and veriﬁcation values sent via SMS, we
divided the various message intentions into categories in this
section. In this paper, we use code to describe the value
extracted from any message sent to a user for any of the
below intentions. To our knowledge, there is no authoritative
source for these intentions, despite their popularity. More than
261,000 (67.6%) of the messages contain a code, and the
following categories enabled us to more accurately cluster our
messages:

• Account Creation Veriﬁcation: The message provides a
code to a user from a service provider that requires a
SMS veriﬁcation during a new account creation.

• Activity Conﬁrmation: The message provides a code
to a user from a service provider asking for authorization
for an activity (e.g., payment conﬁrmation).

• One-Time Password: The message contains a code for

a user login.

• One-Time Password for Binding Different Devices:
The message is sent to a user to bind an existing account

7We initially planned on labeling only clusters with more than 50 messages,

but our labelling process resulted in more labeled clusters than expected.

344344

Country
United States
Canada
Germany
United Kingdom
Poland
Sweden
Spain
France
Russian Federation
Norway
Mexico
Romania
Australia
Belgium
India
Ukraine
Italy
Thailand
Hong Kong
Israel
Switzerland
Finland
Lithuania
Estonia
Ireland
Austria
Denmark
Czech Republic
Belgium

Message Count
95138
77036
53497
44039
16103
14849
11323
8273
7344
6674
6431
6043
5964
5253
5064
4363
4326
4073
3251
1971
1722
1714
520
405
331
158
54
6
-

Number Count
98
55
46
75
15
22
11
10
-
8
5
6
13
3
2
3
3
5
7
5
3
13
1
1
3
2
1
2
3

TABLE II: This table of gateway messages and numbers by
country shows that gateways have an international presence,
with most message volume taking place in North America and
Western Europe. The message count represents the number of
messages sent to numbers in each country.

with a new phone number or to enable the corresponding
mobile application.

• Password Reset: The message contains a code for

account password reset.

• Generic: We use this category for any codes to which

we are unable to assign a more speciﬁc intent.

IV. DATA CHARACTERIZATION

In this section, we provide high-level information about our
collected data. The dataset includes data from 8 gateways over
14 months. Overall, our dataset includes 386,327 messages
sent from 421 phone numbers from 52 known carriers in 28
countries. Table II shows the message count for gateway phone
numbers alongside the total number of gateway numbers by
country.

1) Gateways and Messages: Table I shows the eight gate-
ways we scraped, the number of messages from each, and
the number of unique phone numbers hosted at each service
during the collection time. The number of messages received
by each gateway ranged from 7,107 to 69,389. The number of
hosted numbers per service ranged from 14 to 93.

2) Infrastructure: We obtained detailed data from Twilio
about the phone numbers in our dataset, as shown in Table III.
Twilio identiﬁed 52 carriers, of which 46 are mobile, 3 are
VoIP, and three are labeled as landline carriers. We believe that
the numbers seen from these “landline” carriers are simply

Carrier Type
Mobile
VoIP
Landline

Amount

261
149
11

Percent of Total

62.0%
35.4%
2.6%

TABLE III: Using Twilio-provided data, we obtained the
carrier type for each of the carriers associated with sender
and receiver numbers on the gateways.

mislabeled as landlines by Twilio and are actually mobile
numbers, due to all three being carriers that advertise both
mobile and landline service. Furthermore, Twilio indicates
numbers from bandwidth.com as “mobile” numbers (this
is not due to porting, as Twilio resolves porting scenarios).
bandwidth.com is actually a VoIP provider. The numbers
in this paper are corrected to reﬂect this.

3) Geography: Twilio’s number data also includes geolo-
cation information for each number which shows our data is
based in 28 countries. The United States has the most gateway
controlled numbers with 98 numbers seen receiving 95,138
messages, the most trafﬁc of any country. Conversely, Lithua-
nia only had one gateway-controlled number registered to it,
the lowest of the countries in our data. The Czech Republic has
the fewest messages sent to the gateway-controlled numbers
registered to a country, with two numbers receiving only six
messages. Interestingly, 9 of our numbers are associated with
providers who service the Channel Islands, located off the
coast of France with a total population of less than 170,000
people.

Twilio data provides only the country of origin, so for all
153 numbers in the United States and Canada we obtain caller
ID name (CNAM) data8. We found that the vast majority of
numbers (55.4%) have no CNAM data at all. Of those mes-
sages that have data, the ofﬁcial record in the CNAM database
is simply “CONFIDENTIAL,” “WIRELESS CALLER,” or
“Unavailable.” Note that “Unavailable” is the actual string that
would be displayed to a user, not an indication of no data in
the database.

The remainder of the messages are sent to phone numbers
that have CNAM data indicating the number is in one of 57
cities or 3 provinces (British Columbia, Ontario, and Quebec)
in the United States or Canada. By message volume, the top
locations are “Ontario”, followed by Centennial, CO (in the
Denver area); San Francisco, CA; Little Rock, AR; Airdrie,
AB; Columbia, SC; San Antonio, TX; Detroit, MI; Cleveland,
OH; and Washington, MD. There are several observations to
make from these ﬁndings: ﬁrst, numbers are selected to well
beyond what is likely the gateways’ main location. Second is
that neither gateways nor users feel a need to use numbers
based in large population centers. With the exception of
Centennial, CO, all
locations had four or fewer numbers,
regardless of population of the location. Gateways 4 and 5
registered the numbers in Centennial.

4) Clusters: We generated 44,579 clusters from our dataset.
All messages with more than 43 messages were manually

8CNAM data only covers the US and Canada.

345345

Fig. 2: Cluster sizes are exponentially distributed, and so
appear as a straight line when sorted and plotted on a log-
log scale.

Tag
otp-dev
code
ver
conf
otp
pw-reset
ver-url
advertising
pw-reset-url
test
info
otp-dev-url
password
code-url
conf-ro
otp-url
stop
username
conf-url

Messages % Tagged
33.4%
18.5%
18.2%
13.4%
7.6%
1.3%
1.1%
1.0%
0.9%
0.9%
0.8%
0.3%
0.2%
0.2%
0.1%
0.1%
0.1%
0.06%
0.03%

95685
52872
52181
38521
21919
3602
3139
2999
2696
2612
2339
863
697
676
401
320
284
178
92

TABLE IV: We separated and labeled each cluster containing
a code the intent of the message. This table contains each of
those labels and the number of messages in each, which total
74.2% of the messages in our dataset.

tagged and analyzed giving us 754 tagged clusters. These
clusters represent the messages from the most popular services
in our dataset. The tagged clusters only represent 1.7% of the
total clusters but the tagged clusters cover 286,963 messages
(74.2%). Figure 2 represents the data that supports this as-
sertion by showing the exponential distribution of the cluster
sizes.

5) SMS Usage: As shown in Table IV, messages containing
a code constitute the majority of our dataset at 67.6% of the
total messages, enforcing that a main usage of SMS in our
data is veriﬁcation and authentication.9 Account creation and
mobile device binding codes are the largest subcategories

9As we note in the previous section, these percentages are reﬂective of
gateway messages, and may not necessarily be representative of broader SMS
trends.

with 51.6% of the messages. Compared to other messages con-
taining a code, one-time password messages are only 7.6% of
messages. The URL variations for these code messages are
also rare, constituting only 2.6% of messages. This reﬂects that
most services prefer to plain codes, instead of URLs, which
may not work well for older phones.

Password reset messages comprise 1.3% of our dataset. The
corresponding URL version takes another 1.0% of our dataset.
Interestingly, these password reset URLs overwhelmingly con-
sist of Facebook results.

A small part (0.8%) consists of “test” messages. These are
messages that consist of text such as “Test,” “Hello,” or “Hi”
with no other information. This category consists of large
clusters of messages sent by individuals to probe that the
service works as advertised and is currently working. The
sender phone numbers, therefore, provide insight into users of
the gateways. We explore this more fully later in Section VI.
Finally, a few messages contain partial or complete user-
names and passwords. These messages are particularly egre-
gious because they may lead to account compromise and/or
user identiﬁcation. We discuss this further below.

V. USES OF SMS AS A SECURE CHANNEL

In this section, we discuss what we observed about the
security implications if any of the components of the SMS
ecosystem described in Figure 1 are compromised. Although
the usage we discuss in this section is benign, we observe the
presence of PII and low code entropy, which are dangerous
when available to an adversary in this ecosystem.

A. PII and other Sensitive Information

SMS has become a major portion of global telecommu-
nications worldwide, and its use by companies and other
organizations comes as unsurprising. However, our dataset
contained instances of companies using SMS to distribute
payment credentials or other ﬁnancial information, login cre-
dentials, and other personally identiﬁable information. We also
see instances where gateways are used for sensitive services.
a) Financial information: We found several distinct in-
stances of credit card numbers being distributed over SMS in
our dataset. Two of these appear to be intentional methods
of distributing new cards, while another two appear to be the
result of commerce. We discovered these using PII regular
expressions. We also discovered several instances of CVV2
codes in our data. CVV2 codes are credit card codes meant
to verify that the user is in possession of the physical card at
the time of purchase.

We found that two services that provide “virtual” credit card
numbers to allow access to mobile wallet funds distribute the
numbers over SMS. These card numbers are “virtual” in the
sense that they are not backed by a credit line, but in fact seem
to be persistent. The ﬁrst service is Paytoo, based in the United
States. We recovered three distinct cards from this service,
and additional messages containing balance updates, account
numbers and transaction identiﬁers. While password reset was

346346

handled over email, identiﬁers such as email, username, phone
number, or account number could all be used for login.

The other service is iCashCard, based in India. They
distribute a prepaid credit card account number over SMS;
this card is protected by a PIN also distributed over SMS.
Additional messages contained a separate PIN which allows
for account login with the phone number, meaning that access
to SMS reveals access to the entire payment credential and
account.

We found an additional credit card number, CVV, and
expiration value from an unnamed service whose identity or
purpose we could not identify. The message indicated that
it was being sent to a user who had purchased a “package”
of some sort, and conﬁrmed the purchase using the full credit
card number. Incidentally, the purchaser’s IP address was listed
in the SMS, and that IP address was placed in SANS blocklist
for suspected bots and forum spammers.

Our PII regular expressions discovered one ﬁnal credit card
number present in a text message sent to a Mexican phone
number. The message contains a reference to a Venezuelan
bank, the card holder’s name, and includes the credit card
number, the CVV2, and the expiration date. To determine
the context for this message, we examined other messages
from this sender and found what appeared to be an SMS-
based mailing list for purchasing items on the black market
in Venezuela;
items for sale included US paper products
(diapers, tissue), oil, and tires, as well as US dollars at non-
ofﬁcial rates [34]. Our best hypothesis for the presence of
the credit card is that a purchaser of an item mistakenly sent
payment information to the list in place of the actual sender.
Nevertheless, this highlights that highly sensitive enterprises
rely on SMS.

In addition to credit card information, we discovered one
unidentiﬁed Polish service that includes a CVV2 code in their
messages after registering for a prepaid service. Translated (by
Google), these messages read:

Thank you for registering on the
site prepaid. Your CVV2 code is: 194

The ﬁnancial information in our gateway data is not limited
to credit card numbers. We found several instances of mes-
sages sent by a prepaid credit card provider in Germany, Pay-
Center [13], that distributes bank account numbers (IBANs) in
SMS messages. The same provider also sends a veriﬁcation
text to the user with a URL that includes the user’s full name.
The messages above indicate that some services unwisely

transmit sensitive ﬁnancial information over SMS.

b) Usernames and Passwords: In scanning our labeled
clusters, we identiﬁed several services that would allow user
accounts to be compromised if SMS conﬁdentiality is lost. The
most prominent example of these is Canadian international
calling provider Boss Revolution [2]. Their user passwords
are distributed via SMS, and usernames are simply the user’s
phone number. Thus, an attacker with read access to these
messages can compromise an account. Another example was
the Frim messaging service [5]. That service also uses the

user’s phone number and a password distributed over SMS.
Other services distributing usernames and passwords in SMS
include eCall.ch (a Swiss VoIP provider) [4] and RedOxygen
(a bulk SMS provider) [17]. Fortunately for users, most online
services in our data do not distribute password information
through SMS.

c) Password Reset: Several organizations,

including
Facebook and the investment platform xCFD, distribute pass-
word reset information via SMS in addition to or in place
of other methods. The most common password request in our
data was for Facebook account resets. Upon investigating these
messages (using only our own accounts), we found that the
messages contained a URL that would allow a password reset
with no other identifying information or authentication — not
even a name or username. This would allow any adversary
with access to the message — either as it transits carrier
networks, the receiving device, or any other entity that handles
the message – to control the account. If the adversary has the
username, he/she could cause reset messages to be sent for that
account, allowing the adversary to take complete control of the
account. This highlights the consequences of a compromise of
the SMS ecosystem.

d) Other personally identiﬁable information: We found
numerous examples of PII — including addresses, zip codes,
and email addresses. Email addresses are worth noting because
the presence of an email address indicating an association
between a phone number an account could be used to associate
codes or other authenticators sent to that device to the partic-
ular account. Our PII regular expressions identiﬁed 522 mes-
sages with emails – most of these were sent by live.com,
gmail.com, inbox.ru, or pop.co (a hosting provider).
e) SMS Activity from Sensitive Applications: Finally, we
noticed several
instances where messages appeared in the
gateway from organizations whose very nature is sensitive.
The worst among these was the roomsharing service Airbnb.
One of our messages contained the full address of the shared
property (personal information obscured):

Airbnb reservation reminder:
Jan 25-28 @ <address>.
<name>: <email> or <phone>

Although we suspect that the owner of the property listed
it in such a way that this data was revealed, the use of SMS
gateways for these services is troubling as it could facilitate
real-world abuses.

Other examples of sensitive applications include a large set
of registrations with other telecommunications services. These
include popular phone services like Telegram, Viber, Line,
Burner and Frim. The presence of these services in gateway
data may indicate the use of these gateways for “number
chaining,” a practice that allows PVA evaders to acquire a
large number of telephone numbers for free [73]. In addition,
we see registration and activity in the gateway data to a
number of bulk SMS services. This may indicate the use of
gateway numbers to obtain access to bulk SMS services for

the purposes of sending SPAM, in addition to a potential use
for number chaining.

f) Case Study: QIWI Wallet: We have identiﬁed one
service that uses most of the previously discussed problematic
SMS practices: QIWI wallet, a Russian mobile wallet operated
in partnership with VISA [23]. First, QIWI wallet sends email
addresses in messages to bind emails to accounts. Second,
this service also sends password reset codes over SMS, while
allowing login with the user’s phone number — meaning any
reader of the message can reset the user’s password. QIWI also
provides VISA numbers for its users, and they send partially-
blinded card numbers and full CVV2 numbers through SMS.
Such partially-blinded information can still be sensitive as
knowing the last four digits of a credit card is sometimes
used for over-the-phone authentication, and such information
has been used in the past to target call centers [45]. More
worrisome, they seem to use two different blinding schemes –
sometimes blocking the ﬁrst and last four digits, other times
blocking the middle 8 digits of the card. If both blinding
schemes are used for the same card, it would be possible
to acquire all card information over SMS. This service also
sends balance updates over SMS, which are also sometimes
used for caller authentication. Finally, we found at least one
message in our data corresponding to a QIWI blocked account
notiﬁcation; one possible reason for this is the use of the QIWI
account (registered with the gateway number) for fraud or
abuse.

B. SMS code Entropy

Our message dataset afforded us samples of codes sent
by many services over SMS. These codes provide valuable
phone veriﬁcation capabilities to services that wish to increase
the burden of obtaining an account (e.g., to prevent fraudulent
account creation), and these codes provide a glimpse into
the security of the code-generation schemes. We grouped
those clusters containing codes by service and extracted the
numeric code from each message. Overall, we extracted from
33 clusters containing 35,942 authentication codes across 25
services, as shown in Table V.

We ﬁrst tested the entropy of each set of codes using a chi-
square test. The chi-square test is a null hypothesis signiﬁcance
test, and in our use case indicates if the codes are uniformly
generated between the lowest and highest value. The p-value
less than 0.01 means that there is a statistically signiﬁcant
difference between the observed data and an ideal uniform
distribution. Only 12 of 34 clusters (35%) had p-values > 0.05.
We also measure the effect size for each test, ﬁnding that
most effect sizes were large (w > 0.5) with only one medium
(w > 0.3), indicating our statistically signiﬁcant differences
were in fact meaningful. Finally, we conﬁrmed that all tests
performed had a statistical power of 0.98 or higher, indicating
that our test had a high likelihood of observing any effect
present.

Of the clusters, those belonging to the WeChat and Talk2
services had the least entropy of the authentication codes we
analyzed. Not only did both services have p-values of 0.0 in

347347

(a) WeChat

(b) Talk2

(c) LINE

Fig. 3: These ﬁgures present heatmaps of codes where the ﬁrst two digits are represented on the y-axis and the last two
digits are represented on the x-axis. Darker values represent higher frequencies of a code in our data. These ﬁgures show
that WeChat and Talk2 present an egregious lack of entropy in their authentication codes, while Line generates random codes
without leading zeros.

Effect Size (w)

0.721
0.793
0.622
0.574
0.600
6.009
0.595
0.519
0.530
2.929
0.675
0.512
0.522
0.500
1.327
0.478
8.138
0.664

Service
Google
Google
Instagram
Instagram
Instagram
Jamba
LINE
LINE
LINE
Microsoft
Odnoklassniki
Origin
QQ
SMSGlobal
Talk2
Telegram
Viber
WeChat
Alibaba
Backslash
Baidu
BeeTalk
Circle
Gett
Google
Hushmail
LINE
Origin
RunAbove
Skout
Tuenti
Weibo
WhatsApp

Uniform?



















(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)

p-value
0.000
0.000
0.000
0.000
0.000
0.000
0.000
0.000
0.000
0.000
0.000
0.000
0.000
0.000
0.000
0.000
0.000
0.000
0.988
0.325
0.015
0.595
0.080
0.461
0.917
0.527
0.698
0.086
0.427
0.004
0.981
0.395
0.022

Effect? Mean Code
547948
Large
558380
Large
503172
Large
498365
Large
497936
Large
Large
4719
5476
Large
5530
Large
5442
Large
357494
Large
433997
Large
502627
Large
Large
505555
5540
Large
5732
Large
54961
Medium
112075
Large
4989
Large
548652
556223
505165
544719
506514
5512
501623
503161
5511
500739
494697
5492
5010
512458
543563

TABLE V: The results of our statistical analysis of authenti-
cation codes from each service. Some services appear more
than once in the data because their messages were split into
multiple clusters (e.g., one for password resets and one for
logins).

the above chi-square test, the service’s codes each generate a
speciﬁc pattern. We mapped the ﬁrst two digits of each code
with the back two digits and show these two services’ codes
in Figure 3.
WeChat. Until April 2015, WeChat’s authentication codes
followed a pattern of rand() ∗ 16 mod 10000, which caused
the stair-step offset-by-16 heatmap in Figure 3a. The pattern
could be explained by a random number generator with low
entropy in the four least signiﬁcant bits. This effectively
reduced the possible space of 4-digit codes to 625. In April
2015, WeChat changed its code generation algorithm. We re-
moved the 625 known-pattern codes from the WeChat set and
recomputed the chi-square entropy test. The p-value increased
to 0.761 with statistical power and effect size of 0.989 and
0.423, respectively, indicating that the new algorithm is likely
producing uniformly-random codes.
Talk2. This service has an extreme lack of entropy in its
code-generation algorithm, as seen in Figure 3b. In particular,
it appears to avoid digits 0, 1, 2, 5, and 8 in positions 1 and 3
of a 4-digit code. We made several attempts to reproduce this
entropy pattern, but we were unable to produce a reasonable
explanation for this dramatic reduction in entropy.
Google. While the Google codes we harvested did not appear
to be uniformly-random in our experiments, this appears to be
caused by duplicate codes. When requesting that a code be
resent, Google will send the same code again. This practice
is potentially problematic because it indicates that the Google
codes have a long lifetime. Since messages on gateways may
be accessible for weeks or months, it may be possible for an
adversary that can identify the associated account to use an
unclaimed code. Without access to the associated accounts,
however, we were unable to determine the exact lifetime of
Google’s codes.
LINE. Although our experiments show LINE’s codes are

348348

the service does not generate
likely uniformly generated,
codes with a leading zero, reducing the overall space of
codes by 10%. This practice is common among our clusters,
with 13 total clusters exhibiting this behavior. For comparison,
we display LINE’s codes in Figure 3c.

C. Takeaways

In this section, we explored the data that is exposed in
the SMS channel for benign purposes. This is problematic
if an adversary has access to SMS messages, as is the case
with the gateways. We observed services that expose sensitive
user data via SMS including ﬁnancial data, account informa-
tion, password reset URLs, and personal information such as
physical and e-mail addresses. We then found that 65% of
services that use SMS to deliver codes generate low-entropy
codes, which may be predictable and grant unauthorized
access to accounts. The design of such services is guided by
an assumption that the SMS channel is secure from external
observation, and our observations show that this results in poor
security design in those applications.

VI. ABUSES OF SMS

Having explored how services attempt to use SMS as a
secure channel, we now discuss what we observed about
the security implications and evidence of abuse related to
gateway activity. This includes phone veriﬁed account evasion,
failed attempts at location anonymity, whether similar gateway
numbers can be detected, and spam and fraud in the messages
themselves.

A. Gateways and PVA

In this subsection, we discuss the relevance of our data to
phone-veriﬁed accounts. In particular, we present evidence
that
the primary activity of the gateways we observe is
evading phone veriﬁed account restrictions, and that existing
countermeasures are ineffective.

g) Message Activity Statistics: In Section IV, we noted
that more than half of the messages received by gateways
are related to account veriﬁcation. This vastly outweighed
any other purpose of sending SMS. Beyond this information,
message activity statistics also support this claim. The median
number lifetime (the time from ﬁrst message to last) in our
dataset is 20 days, and the CDF of number lifetime is shown
in Figure 4a. This lifetime is fairly short, and in fact 73.9%
of numbers do not even last a full billing cycle (31 days).

There are two likely explanations for the short lifetime:
one is that services that facilitate PVA need to replace their
numbers often as they exhaust their usefulness to create new
accounts. The second is that many of these numbers are in
carriers (especially mobile carriers) that shut off numbers
for anomalous message volume. These explanations are not
necessarily mutually exclusive.

To gain insight onto this question, we computed the daily
volume of messages for each phone number used by a gateway,
and we call this series the “daily activity” of the number. If
these numbers were being primarily for personal messages or

349349

informational activities (like signing up for advertising alerts),
we would expect the daily activity of the number to be fairly
constant across the lifetime of the number, or for there to be
a “ramp up” period as new users discover the new line.

Instead, we see almost

the exact opposite behavior. To
concisely express this, we computed skewness and kurtosis
statistics of the daily activity of every number. Simply, kurtosis
is a statistic that indicates if a series is “ﬂat” or “peaky,” while
skewness indicates whether a peak falls closer to the middle,
beginning, or end of a series. A skew of between (−1, 1)
indicates the peak falls in the middle of the series, while a
positive skew indicates a peak that arrives “earlier” in the
series. We plot the skewness and kurtosis for every number in
Figure 4b. Note that we reverse the x-axis, so that the further
left in the plot a number falls, the “earlier” its peak.

Figure 4c shows the CDF of the daily activity skew, and
we observe that approximately 60% of numbers have a skew
towards early activity. This implies that most numbers have a
high message volume early in the lifetime, and consequently,
most of the activity of the number has been completed by
the time it is shut down. If carriers are disabling numbers
(for exceeding a message rate cap, for example), they are
doing so well after most numbers have seen their peak use.
Likewise, if online services are considering a number invalid
for phone veriﬁcation, they are still permitting a high-volume
of registration requests for a number (in aggregate) before
blacklisting the number.

h) User Location Leakage: Some gateways advertise
their services towards users that may be seeking privacy or
anonymity. Although SMS does not provide either of these
properties,
the use of a gateway may provide a sense of
anonymity for a user registering for a service. Shortened
URLs (often provided in space-constrained SMS messages)
leak information about the user clicking the link to the URL-
shortening service. With the statistics we collected from these
services, we have identiﬁed both the source and destination
countries for each message, we also found that the users of
these services are located in signiﬁcantly different locations.
We do not attempt to deanonymize, track, or identify any users.
Our data consists solely of publicly-available aggregate click
statistics.

The number of clicks recorded ranged from 0–1,582,634
with a median of 10. This data represents any click to these
URLs, not just those from the gateway pages. As a result, to
prevent skewing our data with popular and spam messages, we
focused on URLs with ≤ 10 clicks, since many incoming links
expected by users of SMS gateways are likely clicked a small
number of times. We collected the countries associated with
each of the remaining 2,897 clicks and aggregated the results.
Figure 5c shows the total clicks for each country across all
shortened URLs. 194 clicks could not be mapped because the
speciﬁc country information was not available or the service
identiﬁed that the request was from an anonymizing proxy
service.

Also in our data were “test” messages sent by users testing
the services. These messages provide another window into

(a) CDF: Number Lifetime

(b) Daily Activity Skew and Kurt

(c) CDF: Daily Activity Skew

Fig. 4: (a) Only 25% of gateway-controlled numbers are used after one month. The median number lifetime is only 20 days.
(b) The skew and kurtosis of number lifetime indicates that 60% of messages have a signiﬁcant skew towards heavier use at
the beginning of the lifetime, while the kurtosis indicates that these numbers see a sharp increase in activity followed by steep
decline. (c) 60% of numbers used show a strong tendency for heavy use in the early lifetime of the number.

the user base. Figure 5b and Table XI in the appendix show
that the geographical extent of these users goes well beyond
the home countries of gateway numbers. Users of gateways
may not be aware that these URLs and messages are leaking
metadata, and gateways do not adequately warn users of this
danger. We consider the use of a gateway as an anonymizing
service to be a subset of PVA evasion, however, because users
are attempting to evade phone veriﬁcation, albeit for a different
intent.
B. Detecting Gateways

As we have discussed above, these gateways facilitate PVA
evasion and the demographic data we can obtain about the
users of these services clearly shows usage patterns consistent
with PVA fraud. It is clear that in most cases even reputable
well-funded online services are not successfully defending
against
these (and similarly, for-pay gateways). Although
number lifetimes are short, the sheer volume of veriﬁcation
messages in our data indicates that evasion is still an effective
driver of proﬁt for gateways.

PVA evasion is not new to online services. In particular,
Google is acutely aware of this problem, having published a
paper on the topic [72]. In that paper, Thomas et al. propose
several strategies to detect PVA evasion. They include blocking
irreputable carriers, restricting how quickly numbers can verify
accounts, and phone re-veriﬁcation. In this section we explore
the recommendations in [72] and discuss how our data shows
that these recommendations are unlikely to be effective:
Carrier Reputation. While we only see one of the carriers
identiﬁed as abuse-prone in [72] (bandwidth.com), black-
listing blocks of numbers by carrier would not stop all PVA
evasion. Carrier-based blocking is prohibitively expensive for
all but the largest of organizations. We obtained Twilio data
for each number in our data set and although the cost was
relatively small ($0.005/lookup), scaling this (and additional
number metadata such as CNAM and HLR data) to cover
all of a business’s customers represents a substantial cost.
to
Furthermore,

this kind of bulk blacklisting is difﬁcult

enforce in the face of gateway services that maintain a large
pool of numbers over many carriers. Online services that
attempt to restrict the speed at which numbers can be reused
for new accounts face an arms race against gateways.
Phone Reputation. One option suggested in [72] for determin-
ing phone reputation is to create a service which shares abuse
data between service providers. Although little information
about how such a service could be created, we considered
that it might be possible to blacklist abusive numbers if they
are similar to each other.

We conducted a self-similarity analysis against the phone
numbers in our dataset to determine how numbers are pur-
chased. If they are purchased in bulk, it may be possible
to detect them. We analyzed all of the gateways’ numbers
to determine similar numbers using Hamming distance. We
found that most carriers use similar numbers (i.e., those with
a Hamming distance of 2 or less), and the results are shown
in Table VI. Over 40% of all of a gateway’s numbers were
similar in 7 of 8 gateways, however we found that most of
these repeated numbers are in mobile carriers, not VoIP, as
shown in Table VII. The data shows that the gateway numbers
are in the carriers that are most likely to serve legitimate users,
so attempting to block these numbers may result in a high false
positive rate.
Phone Re-veriﬁcation. Phone number re-veriﬁcation would
fail if the number were checked again outside the expected
lifetime of a gateway number. In [72], Thomas et al. saw a
median number lifetime of one hour, a reasonable point to
perform a re-veriﬁcation. In our dataset, however, we have
seen that half of all gateway numbers last up to 20 days.
Therefore, re-veriﬁcation at any interval
is unlikely to be
universally effective since phone number longevity is not
guaranteed.

C. Abuse Campaigns in SMS

Since gateways accept unsolicited messages, often do not
to users providing these
ﬁlter messages, and are subject
numbers to various services, our data contains SMS from

350350

(a) Total Messages by Country

(b) Test Messages by Country

(c) URL Clicks by Country

Fig. 5: These maps visualize the sender phone number locations of all messages (a) and test messages (b) sent to the gateways.
In (c), we map the locations of users that have clicked Bitly- or Google-shortened URLs. These locations provide insight on
both the services users are attempting to access and the gateway users themselves. Overall, the locations of the gateways’ users
signiﬁcantly differs from the services sending messages, implying the primary purpose of these gateways is PVA fraud.

Site
[1] receive-sms-online.info
[2] receivesmsonline.net
[3] e-receivesms.com
[4] hs3x.com
[5] receivefreesms.com
[6] receivesmsonline.com
[7] receive-sms-online.com
[8] receive-sms-now.com

Similar / Total
15 / 59
16 / 38
7 / 14
28 / 57
52 / 93
38 / 93
8 / 19
20 / 48

Percent
25.4%
42.1%
50.0%
49.1%
55.9%
40.9%
42.1%
41.7%

TABLE VI: We analyzed the numbers from each gateway for
similarity. In 7 of 8 gateways, at least 40% of the gateways’
numbers were similar.

Carrier Type
Mobile
Landline
VoIP

Similar / Total
159 / 184
5 / 184
20 / 184

Percent
86.4%
2.7%
10.9%

TABLE VII: An analysis of the similarity of gateway numbers
shows that the majority of numbers are in mobile carrier num-
ber blocks, not VoIP as we expected. As a result, attempting to
block these number blocks may result in high false positives.

SPAM campaigns, phishing campaigns, and even one black
market as discussed in Section V-A. In this section, we will
discuss these campaigns.

1) Spam Campaigns: We found 1.0% of tagged messages
across 32 clusters related to advertising. Upon manual inspec-
tion none of these appeared to be solicited messages, so we
consider these to be spam messages. Of the advertising clusters
we identiﬁed, 15 are UK-based ﬁnancial services (e.g., payday
loans, credit lines) from 14 numbers. Five are for distinct bulk
messaging services. These services advertise gateways and the
ability to avoid phone veriﬁcation: “Using our service to create
and verify accounts without your own phone number.”

Another six clusters are from a speciﬁc job stafﬁng site
and appear to be bulk messages related to a job search.
Curiously, these messages contain a name and zip code. We
expanded the search beyond the labeled clusters and found
282 messages in 107 clusters. These messages may be related
to this organization testing their bulk SMS API. All of these
messages were sent to a single gateway number within a seven-
hour timespan, which is unusual when compared to other
bulk message campaigns in our dataset. Finally, two of these
messages have links to surveys via Bitly links. These links
were created by user “smsautodialer”, who has been a member
since July 2015 and has shared over 2,802 Bitly links. The
destination domain has a 0/65 detection ratio on VirusTotal.
We were surprised at the low spam volume observed in
public gateways, as they market themselves as a service for

351351

Domain

danske-mobile*com
location-message*com

it-panels*com
iurl-sms*com
phone-gps*com
url-sms*com

location-device*com
sms-new-page*com

Sender MSISDN

DanskeBank
243858234346
16312237715
14156537352
243858214490
243858361940
243858097749
243858289642

Time to First Message

0 days 11:41:02
0 days 13:38:02
0 days 16:30:02
0 days 16:30:02
0 days 18:41:03
0 days 18:47:03
0 days 19:42:02
0 days 20:08:02

TABLE VIII: Using domain WHOIS information, we mea-
sured the distance between the time a domain was ﬁrst
registered and the time a gateway ﬁrst received a message
containing a URL with this domain. In total, 8 domains
appeared in messages within 24 hours of being registered.

avoiding spam. This has been a major topic of research, but the
volume of spam trafﬁc in our dataset is lower than previously
measured [37], [65].

In contrast

2) Phishing Campaigns:

to spam, phishing
messages attempt to trick the user into believing he/she is
communicating with a legitimate entity (e.g., to steal service
credentials). These scams typically use “fast-ﬂux” domain reg-
istrations to defeat domain blacklisting strategies. Therefore,
the age of the domain at the time a message arrives containing
that domain is of particular value; if the domain is new, it
may indicate that the domain is malicious. We matched the
timestamps for incoming SMS messages with the registration
times for the domains included in each message.

The

fastest domain to appear

in our dataset was
danske-mobile*com,10 a domain that had been registered
for only 11 hours before it appeared in an SMS message. The
text of the message (translated from German) is “Dear Danske
Bank customer, you have received an internal message” along-
side the URL. We believe this to be a banking phishing mes-
sage, however we were unable to verify the URL’s purpose. At
the time of this writing, the speciﬁc host in the message returns
a DNS NXDOMAIN error and the second-level domain returns
a registrar parking page. The SMS gateway that received this
message did not display the sender MSISDN number, instead
replacing it with “DanskeBank,” which may indicate number
spooﬁng. Curiously, the domain WHOIS data shows detailed
personal information (name, address, phone number) of the
registrant, who is based in the United States. The real Danske
Bank web site has registration data with contact information
in its home country, Denmark. Given this domain’s intended
purpose, we believe that this data is either incorrect or stolen
personal information, and we did not pursue the ownership
further.

In total, 8 domains appeared in messages after being regis-
tered for less than one day, as shown in Table VIII. Only one of
these domains was accessible via HTTP at the time of writing.
The domain, phone-gps*com, has an error and delivers a
stack trace when no HTTP user-agent string is provided; when
we provided one, it delivers empty content (0 bytes). This site,

10We substitute an asterisk into suspicious URLs in this paper to prevent

PDF readers from inferring hyperlinks.

352352

Apple Customer,
Your lost iPhone has been found \

and temporarily switched ON.

To view iPhone map location
lostandfounds-icloud*com
Apple

Fig. 6: The phishing SMS message, as received by a gateway.
This message is the ﬁrst step to deceiving a user into providing
his/her Apple ID credentials. We substituted the asterisk in to
prevent accidental clicks.

therefore, may be using user-agent strings to determine what
content to deliver, however we were not able to get the site
to deliver any content with common strings for desktop and
mobile browsers. The remaining 7 domains are all registered
with contact addresses and registrars based in China and take
the form of hyphen-separated English words. Since none of
these domains had accessible hosts at the time of writing, we
were unable to determine their purpose.

domains, we manually

Since we were unable to verify the intent of

the
above
dataset
for a recently-seen newly-registered domain. We found
lostandfounds-icloud*com, a site that is designed to
appear like the legitimate “Find My iPhone” Apple service.
Figure 6 shows the SMS message containing this URL, which
also indicates a phishing attempt.

searched

our

The page’s code appears to reject any user name or pass-
word entered into the ﬁelds (a common practice among phish-
ing sites), and indeed, upon putting any content in these ﬁelds,
the page returned the error seen in Figure 7. As of November
2015 (less than one month since the message arrived at the
gateway), the site has been taken ofﬂine. Due to the necessity
of retrieving working domains from newly-obtained messages,
this message appears later in our dataset than other messages
we discuss in this paper.

3) Other malicious behavior: Another empirical measure
of the maliciousness of the URLs is scanning these URLs
with security products. VirusTotal provides one such measure
by requesting scans from multiple products. The full results
are displayed in Table IX. VirusTotal returned 417 URLs with
at least one detection. Only 3 URLs had 5 detections, and no
URL had more than 5 detections. Of these detections, 508 were
detected as “malicious site,” 147 as “malware site,” and 25
as “phishing site.” Unsurprisingly, danske-mobile*com
was not detected by any product, since this domain no longer
appears to host any content and it is unlikely that any of these
products can determine phishing attempts using the metadata
we previously discussed.

Overall, abusive messages (spam, phishing, and malware)
consisted of only a small portion of our dataset, despite being
billed as a major problem in popular press. This is especially
strange given that evasion of spam is something many of
the gateways advertise, as we discussed in Section III. Given
previous reports on the pervasiveness of SMS spam, we believe
that some entity in the SMS ecosystem is performing adequate

Product
ADMINUSLabs
AutoShun
Avira
BitDefender
Blueliv
C-SIRT
CLEAN MX
CRDF
Dr.Web
ESET
Emsisoft
Fortinet
Google Safebrowsing
Kaspersky
Malekal
Malware Domain Blocklist
Malwarebytes hpHosts
ParetoLogic
Phishtank
Quttera
SCUMWARE.org
Sophos
Spam404
Sucuri SiteCheck
TrendMicro
Trustwave
Web Security Guard
Websense ThreatSeeker
Webutation
Yandex Safebrowsing

Detections
1
144
7
15
5
1
11
5
62
6
23
31
15
3
3
20
1
54
1
2
4
28
3
94
1
55
1
81
2
1

TABLE IX: We requested VirusTotal scans for each extracted
URL in our dataset. This table shows the number of detections
for each product that detected a malicious URL. Overall 417
URLs had at least one detection.

[36]. Analysis of individual systems has led to the discovery
of a number of weaknesses, including usability concerns [24]
and susceptibility to desktop [50] or mobile malware [32],
[38], [40], [49], [51], [59]. SMS-based tokens are especially
vulnerable to link-layer attacks against the cellular network.
These networks use vulnerable channel encryption [28], [29],
[39], allow end devices to connect to illicit base stations [25],
[35], [43], and are vulnerable to low-rate denial of service
attacks [77], [78]. However, the majority of the infrastructure
behind many two-factor authentication systems — the portions
of the system outside the cellular network — has not been
previously explored from a security perspective.

Dmitrienko et al. were the ﬁrst to examine SMS messages
to study security of two-factor authentication schemes [38].
We greatly exceed the scope of their work in ﬁve important
ways. First, our work presents a cohesive examination of
the entire SMS infrastructure — from online services to end
devices. Second, we focus on how online services use SMS
well beyond two-factor authentication. Third, our data includes
two orders of magnitude more services and we identify and
classify the intent of each message. Fourth, we provide a more
detailed classiﬁcation of two-factor authentication systems.
Finally, our more rigorous entropy analysis of two-factor
authentication PINs allow us to make strong claims for more
than 30 services (instead of just 3), helping us to ﬁnd egregious
entropy problems in the popular WeChat and Talk2 services.

353353

Fig. 7: The page delivered to the user after following a link
provided in a phishing SMS. The site refuses any username
and password combination provided and displays the error
shown in this ﬁgure.

spam ﬁltering and that this problem may no longer be as severe
as it once was.

D. Takeaways

In this section, we explored malicious uses of the SMS
channel. First, we discussed how our data shows the prevalence
of PVA evasion due to the stark contrast between gateway
number locations and locations of users interacting with the
gateways. We then discussed the difﬁculty of detecting gate-
ways with carrier blocking due to cost and number lifetimes.
Finally, we explored abuse campaigns via SMS and found that
spam, phishing, and suspicious URLs are infrequent, which
may indicate that SMS ﬁltering at the gateways and in the
network are sufﬁcient.

VII. RELATED WORK

Prior measurement work has studied the underground
economies [71] that drive spam [47], [48], [73], malware [33],
[44], [68] and mobile malware [41], [55], [83], and other ma-
licious behavior. While others have investigated SMS content
and metadata in the context of SMS spam [46], [60], [61],
[75], this work is the ﬁrst to expansively measure how SMS
is used for security purposes by legitimate services. We note
that much of the research in this area has been forced to rely
on small datasets (some less than 2000 messages [61]). Mobile
two-factor authentication is increasing in popularity, with some
eagerly heralding its arrival [27] and others cautioning that it
may only provide a limited increase in security [63]. Much
of the data we collected contained mobile two-factor authen-
tication tokens sent over SMS. While SMS tokens are popular
in many contexts, including mobile banking and ﬁnance [62],
other approaches have been implemented in a variety of forms
including keychain fobs [7], [18], one-time pads [56], [64],
biometric scanners [31], [67], and mobile phones [10], [26],

Our emphasis on phone veriﬁed accounts provides a sep-
arate contribution. Thomas et al. study the effects of phone
veriﬁed accounts at Google [72]. While they use datasets of
purchased or disabled PVAs, we provide insight into PVA
fraud from enabling services. While we conﬁrm some of their
observations, our data indicated their recommendations may
prove ineffective at defeating PVA evasion.

VIII. CONCLUSIONS

Text messaging has become an important part of the se-
curity infrastructure. However,
this ecosystem has evolved
signiﬁcantly since its inception, and now includes a wide
range of devices and participants external to traditional cel-
lular providers. Public SMS gateways directly embody this
change, and allow us to not only observe at scale how a
range of providers are implementing security solutions via text
messages, but also provide us evidence of how assumptions
about SMS are being circumvented in the wild. While our data
may not fully encompass all communications sent over SMS,
our measurements identify a range of popular services whose
one-time messaging mechanisms should be improved, and
additional entities who may be creating new opportunities for
compromise by sending highly sensitive data (e.g., credit card
numbers) via these channels. On the abuse side, we see the
ease with which these gateways are being used to circumvent
authentication mechanisms, and show that previously proposed
mitigations to PVA fraud such as block banning are unlikely
to be successful
in practice. These measurements indicate
that all providers relying on SMS as an out of band channel
for authentication with strong ties to a user’s identity should
reevaluate their current solutions for this evolving space.

ACKNOWLEDGMENTS

The authors are grateful to our shepherd, Emin G¨un Sirer,
and our anonymous reviewers for their helpful guidance. The
authors would like to thank Twilio for their generous access
to their data and Benjamin Mood for providing considerable
assistance formatting our tables and ﬁgures. This work was
supported in part by the US National Science Foundation
under grant numbers CNS-1526718, CNS-1464087, CNS-
1540217, CNS-1542018, and CNS-1464088. Any opinions,
ﬁndings, and conclusions or recommendations expressed in
this material are those of the authors and do not necessarily
reﬂect the views of the National Science Foundation.

REFERENCES

[1] Apple continuity. https://support.apple.com/en-us/HT204681.
[2] Boss Revolution. https://www.bossrevolution.ca.
[3] Burner app. http://www.burnerapp.com.
[4] eCall. http://www.ecall.ch.
[5] Frim. http://fr.im.
[6] Google voice. http://www.google.com/voice.
[7] IdentityGuard

Authentication

Identity

https://www.entrust.com/products/entrust-identityguard/.

Platform.

[8] LiqPay. https://www.liqpay.com.
[9] Mightytext. http://mightytext.net.
[10] Mobile Authentication. https://www.duosecurity.com/product/methods/duo-

mobile.

[11] Nexmo. https://www.nexmo.com/.

354354

[12] OpenCNAM. https://www.opencnam.com.
[13] PayCenter. https://www.paycenter.de.
[14] Pinger. http://www.pinger.com.
[15] Plivo. https://www.plivo.com/.
[16] Pushbullet. http://pushbullet.com.
[17] RedOxygen. http://www.redoxygen.com.
[18] RSA SecurID Hardware Tokens.

securid/rsa-securid-hardware-tokens.htm.

http://www.emc.com/security/rsa-

[19] Scrapy. http://scrapy.org.
[20] SMSGlobal. https://www.smsglobal.com.
[21] Talk2. http://talk2ph.com.
[22] Twilio. http://www.twilio.com.
[23] Visa QIWI Wallet. https://qiwi.ru.
[24] M. Adham, A. Azodi, Y. Desmedt, and I. Karaolis. How to Attack Two-
Factor Authentication Internet Banking. In Financial Cryptography and
Data Security, number 7859 in Lecture Notes in Computer Science,
pages 322–328. Springer Berlin Heidelberg, Apr. 2013.

[25] Z. Ahmadian, S. Salimi, and A. Salahi. New attacks on UMTS network
access. In Wireless Telecommunications Symposium, 2009. WTS 2009,
pages 1–6, Apr. 2009.

[26] F. Aloul, S. Zahidi, and W. El-Hajj. Two factor authentication using
mobile phones.
In IEEE/ACS International Conference on Computer
Systems and Applications, 2009. AICCSA 2009, pages 641–644, May
2009.

[27] J.

Atwood.

Hacker
http://blog.codinghorror.com/make-your-email-hacker-proof/,
2012.

Email

Make

Your

Proof.
Apr.

[28] E. Barkan, E. Biham, and N. Keller.

Instant Ciphertext-Only Crypt-
analysis of GSM Encrypted Communication. Journal of Cryptology,
21(3):392–429, Sept. 2007.

[29] A. Biryukov, A. Shamir, and D. Wagner. Real Time Cryptanalysis of
A5/1 on a PC. In Proceedings of the 7th International Workshop on Fast
Software Encryption, FSE ’00, pages 1–18, London, UK, UK, 2001.
Springer-Verlag.

[30] K. Campbell-Dollaghan.

How Hackers Reportedly Side-Stepped
Google’s Two-Factor Authentication. http://gizmodo.com/how-hackers-
reportedly-side-stepped-gmails-two-factor-a-1653631338, Nov. 2014.

[31] CardTechnology. UAE ID Card To Support Iris Biometrics. http://www.

cardtechnology.com/article.html?id=20070423V0XCZ91L, 2007.

[32] C. Castillo.

Spitmo vs Zitmo: Banking Trojans Target An-
http://blogs.mcafee.com/mcafee-labs/spitmo-vs-zitmo-banking-

droid.
trojans-target-android, Sept. 2011.

[33] C. Y. Cho, J. Caballero, C. Grier, V. Paxson, and D. Song. Insights from
the inside: A view of botnet management from inﬁltration. In USENIX
Workshop on Large-Scale Exploits and Emergent Threats (LEET), 2010.
the Country With Four Exchange
Rates. http://www.bloomberg.com/news/articles/2015-02-19/venezuela-
the-country-with-four-exchange-rates, Feb. 2015.

[34] N. Crooks.

Venezuela,

[35] A. Dabrowski, N. Pianta, T. Klepp, M. Mulazzani, and E. Weippl. IMSI-
In Proceedings of the 30th Annual Computer

catch me if you can.
Security Applications Conference, 2014.

[36] D. DeFigueiredo. The Case for Mobile Two-Factor Authentication. IEEE

Security Privacy, 9(5):81–85, Sept. 2011.

[37] S. J. Delany, M. Buckley, and D. Greene. SMS spam ﬁltering: Methods
and data. Expert Systems with Applications, 39(10):9899–9908, 2012.
[38] A. Dmitrienko, C. Liebchen, C. Rossow, and A.-R. Sadeghi. On
In Financial

the (In)Security of Mobile Two-Factor Authentication.
Cryptography and Data Security (FC14). Springer, Mar. 2014.

[39] O. Dunkelman, N. Keller, and A. Shamir. A Practical-time Related-
key Attack on the KASUMI Cryptosystem Used in GSM and 3g
Telephony. In Proceedings of the 30th Annual Conference on Advances
in Cryptology, CRYPTO’10, pages 393–410, Berlin, Heidelberg, 2010.
Springer-Verlag.

[40] J.-E. L. Eide.

SMS One-Time Passwords: Security in Two-Factor

Authenication. Master’s Thesis, University of Bergen, May 2015.

[41] A. P. Felt, M. Finifter, E. Chin, S. Hanna, and D. Wagner. A Survey
In ACM Workshop on Security and

of Mobile Malware in the Wild.
Privacy in Mobile Devices, Chicago, Illinois, USA, Oct. 2011.

[42] B. J. Frey and D. Dueck. Clustering by passing messages between data

points. Science, 315(5814):972–976, 2007.

[43] N. Golde, K. Redon, and R. Borgaonkar. Weaponizing Femtocells: The
In NDSS,

Effect of Rogue Devices on Mobile Telecommunications.
2012.

http://www.businesswire.com/portal/site/google/index.jsp?ndmViewId=
news view&newsId=20060510006193&newsLang=en, 2006.

[65] A. Skudlark. Characterizing SMS Spam in a Large Cellular Network

via Mining Victim Spam Reports, Dec. 2014.

[66] SMS Forum. Short Message Peer to Peer Protocol Speciﬁcation 5.0,

2003.

[67] A.-B. Stensgaard. Biometric breakthrough - credit cards secured with
ﬁngerprint recognition made feasible. http://www.ameinfo.com/58236.
html, 2006.

[68] B. Stone-Gross, M. Cova, L. Cavallaro, B. Gilbert, M. Szydlowski,
R. Kemmerer, C. Kruegel, and G. Vigna. Your Botnet is My Botnet:
Analysis of a Botnet Takeover.
the 16th ACM
Conference on Computer and Communications Security, CCS ’09, pages
635–647, New York, NY, USA, 2009. ACM.

In Proceedings of

[69] The International Organization for Standardization. ISO 8601 - Time and
date format. http://www.iso.org/iso/home/standards/iso8601.htm, 2004.
2014 Text Messaging Usage Statis-
http://www.openuniversity.edu/news/news/2014-text-messaging-

[70] The Open University.

tics.
usage-statistics, Dec. 2014.

[71] K. Thomas, D. Huang, D. Wang, E. Bursztein, C. Grier, T. J. Holt,
C. Kruegel, D. McCoy, S. Savage, and G. Vigna. Framing Dependencies
Introduced by Underground Commoditization.
In Proceedings of the
14th Annual Workshop on the Economics of Inforamtion Security, 2015.
[72] K. Thomas, D. Iatskiv, E. Bursztein, T. Pietraszek, C. Grier, and
In
D. McCoy. Dialing Back Abuse on Phone Veriﬁed Accounts.
Proceedings of the 2014 ACM SIGSAC Conference on Computer and
Communications Security, pages 465–476, New York, NY, USA, 2014.
ACM.

[73] K. Thomas, D. McCoy, C. Grier, A. Kolcz, and V. Paxson. Trafﬁcking
Fraudulent Accounts: The Role of the Underground Market in Twitter
Spam and Abuse. In USENIX Security, pages 195–210, 2013.

[74] A. Tims. SIM swap gives fraudsters access-all-areas via your mobile

phone. The Guardian, Sept. 2015.

[75] H. Toan, N. Goharian, and M. Sherr. $100,000 Prize Jackpot. Call
Now!: Identifying the Pertinent Features of SMS Spam. In Proceedings
of the 35th International ACM SIGIR Conference on Research and
Development in Information Retrieval, pages 1175–1176, New York,
NY, USA, 2012. ACM.

[76] P. Traynor. Characterizing the Security Implications of Third-Party EAS
Over Cellular Text Messaging Services. IEEE Transactions on Mobile
Computing (TMC), 11(6):983–994, 2012.

[77] P. Traynor, W. Enck, P. McDaniel, and T. La Porta. Exploiting Open
Functionality in SMS-Capable Cellular Networks. Journal of Computer
Security (JCS), 16(6):713–742, 2008.

[78] P. Traynor, P. McDaniel, and T. La Porta. On Attack Causality in
Internet-Connected Cellular Networks. In Proceedings of the USENIX
Security Symposium (SECURITY), 2007.

[79] P. Traynor, P. McDaniel, and T. La Porta. Security for Telecommunica-
tions Networks. Number 978-0-387-72441-6 in Advances in Information
Security Series. Springer, August 2008.

[80] U.S. Ofﬁce of Personnel Management.

Cybersecurity Incidents.

https://www.opm.gov/cybersecurity/cybersecurity-incidents/, 2015.

[81] Vassilis Prevelakis and Diomidis Spinellis. The Athens Affair.

IEEE

Spectrum, June 2007.

[82] VirusTotal. VirusTotal - Free Online Virus, Malware and URL Scanner.

https://www.virustotal.com/, 2015.

[83] Y. Zhou and X. Jiang. Dissecting Android Malware: Characterization
and Evolution. In 2012 IEEE Symposium on Security and Privacy (SP),
pages 95 –109, May 2012.

[44] C. Grier, L. Ballard, J. Caballero, N. Chachra, C. J. Dietrich,
K. Levchenko, P. Mavrommatis, D. McCoy, A. Nappa, A. Pitsillidis,
N. Provos, M. Z. Raﬁque, M. A. Rajab, C. Rossow, K. Thomas,
V. Paxson, S. Savage, and G. M. Voelker. Manufacturing Compromise:
The Emergence of Exploit-as-a-service. In Proceedings of the 2012 ACM
Conference on Computer and Communications Security, CCS ’12, pages
821–832, New York, NY, USA, 2012. ACM.

[45] M. Honan.

How Apple and Amazon security ﬂaws led to my
epic hacking. http://www.wired.com/2012/08/apple-amazon-mat-honan-
hacking/all/, Aug. 2012.

[46] N. Jiang, Y. Jin, A. Skudlark, and Z.-L. Zhang. Greystar: Fast and
Accurate Detection of SMS Spam Numbers in Large Cellular Networks
using Grey Phone Space. In Proceedings of the 22nd USENIX Security
Symposium., Washington DC, USA, 2013. USENIX Association.

[47] C. Kanich, C. Kreibich, K. Levchenko, B. Enright, G. M. Voelker,
V. Paxson, and S. Savage. Spamalytics: An empirical analysis of spam
marketing conversion. In Proceedings of the 15th ACM conference on
Computer and communications security, pages 3–14. ACM, 2008.

[48] C. Kanich, N. Weaver, D. McCoy, T. Halvorson, C. Kreibich,
K. Levchenko, V. Paxson, G. M. Voelker, and S. Savage. Show Me the
Money: Characterizing Spam-advertised Revenue. In USENIX Security
Symposium, pages 15–15, 2011.

[49] R. E. Koenig, P. Locher, and R. Haenni. Attacking the Veriﬁcation Code
Mechanism in the Norwegian Internet Voting System.
In J. Heather,
S. Schneider, and V. Teague, editors, E-Voting and Identity, Lecture
Notes in Computer Science, pages 76–92. Springer Berlin Heidelberg,
July 2013.

[50] R. K. Konoth, V. van der Veen, and H. Bos. How Anywhere Computing
Just Killed Your Phone-Based Two-Factor Authentication. In Proceed-
ings of the 20th International Conference on Financial Cryptography
and Data Security, 2016.

[51] L. Koot. Security of mobile TAN on smartphones. Master’s Thesis,

Radboud University Nijmegen, Nijmegen, Feb. 2012.

[52] B. Krebs.

Banks: Credit Card Breach

at Home Depot.

http://krebsonsecurity.com/2014/09/banks-credit-card-breach-at-home-
depot/, Sept. 2014.

[53] B. Krebs.

Experian Breach Affects 15 Million Consumers.
http://krebsonsecurity.com/2015/10/experian-breach-affects-15-million-
consumers/, Oct. 2015.

[54] B. Krebs.

Online Cheating Site AshleyMadison Hacked.
http://krebsonsecurity.com/2015/07/online-cheating-site-ashleymadison-
hacked/, July 2015.

[55] C. Lever, M. Antonakakis, B. Reaves, P. Traynor, and W. Lee. The
Core of the Matter: Analyzing Malicious Trafﬁc in Cellular Carriers.
In Proceedings of the 20th Network and Distributed System Security
Symposium, San Diego, CA, Feb. 2013.

[56] J. Leyden. Visa trials PIN payment card to ﬁght online fraud. http:

//www.theregister.co.uk/2008/11/10/visa one time code card/, 2008.

[57] H. P. Luhn. Computer for verifying numbers, 1960. US Patent 2,950,048.
[58] E. McCallister, T. Grance, and K. Scarfone.
Guide to Protect-
ing the Conﬁdentiality of Personally Identiﬁable Information (PII).
http://csrc.nist.gov/publications/nistpubs/800-122/sp800-122.pdf, 2010.
[59] C. Mulliner, R. Borgaonkar, P. Stewin, and J.-P. Seifert. SMS-based
one-time passwords: attacks and defense.
In Detection of Intrusions
and Malware, and Vulnerability Assessment, pages 150–159. Springer,
2013.

[60] I. Murynets and R. Piqueras Jover. Crime Scene Investigation: SMS
Spam Data Analysis. In Proceedings of the 2012 ACM Conference on
Internet Measurement Conference, IMC ’12, pages 441–452, New York,
NY, USA, 2012. ACM.

[61] A. Narayan and P. Saxena. The Curse of 140 Characters: Evaluating
the Efﬁcacy of SMS Spam Detection on Android.
In Proceedings of
the Third ACM Workshop on Security and Privacy in Smartphones &
Mobile Devices, SPSM ’13, pages 33–42, New York, NY, USA, 2013.
ACM.

[62] B. Reaves, N. Scaife, A. Bates, P. Traynor, and K. Butler. Mo(bile)
Money, Mo(bile) Problems: Analysis of Branchless Banking Applica-
tions in the Developing World. In Proceedings of the USENIX Security
Symposium (SECURITY), 2015.

[63] B. Schneier. Two-factor Authentication: Too Little, Too Late. Commun.

ACM, 48(4), Apr. 2005.
Inc.

[64] SiPix Imagining,

ISO Compliant Payment
DisplayCard using SiPix and SmartDisplayer’s Flexible Display Panel.

World’s First

355355

APPENDIX

Carrier

Mobile

E Plus Mobilfunk
Everything Everywhere (T-Mobile)
Hutchison 3G UK
Gotalandsnatet
Alands Mobiltelefon
Telstra Corporation
Sure (Guernsey) Limited
Tele2 Sverige
T-Mobile
Vodafone Espana
Netia Mobile Sp. z o.o. (P4)
Lycamobile
BOUYGUES TELECOM
Polska Telefonia Cyfrowa Sp. z o.o. (PTC)
Nextel Mexico
Mobile Norway
Cellcom
True Move
Lleida Networks Serveis Telematics
Vodafone
TRANSATEL
CITIC Telecom 1616
Orange Romania
Tele2 Norge AS
O2 Communications (Ireland) Ltd.
Vimpel Communications
Belgacom Mobile - Proximus
Vodafone Romania
China Mobile Hong Kong Co
POLKOMTEL S.A.
Swisscom
Telefonica (O2 Germany GmbH & Co. OHG)
MTS Ukraine (Jeans (UMC))
Bharti Airtel Ltd
Vodafone D2
T-Mobile USA, Inc.
Telefonica UK
Level 3
Tele 2 Eesti
UAB Tele2
Orange
Telenor
A Telecom
Kyivstar
T-Mobile Czech Republic
Total Access Communication Plc. (TAC/DTAC)
Unknown Carrier

VoIP

Landline

Twilio
Bandwidth SMSEnabled
Google (Grand Central) BWI

Jersey Telecom
Sure (Guernsey) Limited
Telus Communications Inc.

Amount

33
23
15
13
13
13
10
9
8
7
7
6
6
5
5
5
5
4
4
4
4
4
3
3
3
3
3
3
3
3
3
2
2
2
2
1
1
1
1
1
1
1
1
1
1
1
12

78
69
2

5
4
2

TABLE X: Gateway numbers are placed in a wide variety of
carriers.

Country
United States
Canada
Germany
United Kingdom
Poland
Sweden
Spain
France
Russian Federation
Norway
Mexico
Romania
Australia
Belgium
India
Ukraine
Italy
Thailand
Hong Kong
Israel
Switzerland
Finland
Lithuania
Estonia
Ireland
Austria
Denmark
Czech Republic
Netherlands
Portugal
China
Indonesia
Nigeria
Serbia
Luxembourg
Iran
Japan
Pakistan
Moldova
Turkey
Malaysia
Morocco
Hungary
Algeria
Taiwan
Saudi Arabia
Ghana
Brazil
South Africa
Egypt
Bulgaria
Vietnam
Argentina
Iceland
Ivory Coast
Jordan
Myanmar
Sri Lanka
Iraq
Singapore
United Arab Emirates
Isle of Man
Kuwait
Bangladesh
Lebanon
New Zealand
Cambodia
Costa Rica
Jamaica
Maldives
Oman
Philippines
Reunion Island
Slovakia

Message Count

95138
77036
53497
44039
16103
14849
11323
8273
7344
6674
6431
6043
5964
5253
5064
4363
4326
4073
3251
1971
1722
1714
520
405
331
158
54
6
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-

URL Clicks

964
6
95
10
11
29
5
478
276
1
71
190
-
3
81
4
4
-
-
6
9
191
1
-
2
7
-
-
247
21
10
9
5
5
5
4
4
3
3
3
2
2
2
2
1
1
1
1
1
1
1
1
1
1
1
1
1
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-

Test Messages

744
56
65
89
17
9
1
20
14
11
14
-
43
10
13
-
11
1
13
6
14
1
-
2
3
8
-
3
12
1
6
7
7
1
-
18
-
11
-
-
8
1
-
-
144
6
5
4
4
3
1
1
-
-
-
-
-
9
7
6
5
4
4
3
3
3
2
1
1
1
1
1
1
1

TABLE XI: This table contains the counts of the geolocated
sender phone numbers for each country alongside the number
of URL clicks from users based in those countries and the
number of test messages sent to those countries. This data
underscores the variation between the users of the gateway
services and the numbers sending messages to the gateways.

356356

