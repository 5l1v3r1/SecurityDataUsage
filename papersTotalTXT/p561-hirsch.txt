Belief Semantics of Authorization Logic

Andrew K. Hirsch

Department of Computer Science

George Washington University
Washington, D.C., United States

akhirsch@gwu.edu

Michael R. Clarkson

Department of Computer Science

George Washington University
Washington, D.C., United States

clarkson@gwu.edu

ABSTRACT
A formal belief semantics for authorization logics is given.
The belief semantics is proved to subsume a standard Kripke
semantics. The belief semantics yields a direct representa-
tion of principals’ beliefs, without resorting to the techni-
cal machinery used in Kripke semantics. A proof system is
given for the logic; that system is proved sound with respect
to the belief and Kripke semantics. The soundness proofs
are mechanized in Coq.

Categories and Subject Descriptors
D.4.6 [Operating Systems]: Security and Protection—Ac-
cess controls; F.4.1 [Mathematical Logic and Formal
Languages]: Mathematical Logic—modal logic, model the-
ory, proof theory, mechanical theorem proving

Keywords
Authorization logic; NAL; CDD

1.

INTRODUCTION

Authorization logics are used in computer security to rea-
son about whether principals—computer or human agents—
are permitted to take actions in computer systems. The dis-
tinguishing feature of authorization logics is their use of a
says connective: intuitively, if principal p believes that for-
mula φ holds, then formula p says φ holds. Access control
decisions can then be made by reasoning about (i) the be-
liefs of principals, (ii) how those beliefs can be combined to
derive logical consequences, and (iii) whether those conse-
quences entail guard formulas, which must hold for actions
to be permitted.

Many systems that employ authorization logics have been
proposed (see [1, 10] for surveys; see also [5–9, 11, 12, 17,
23, 28, 29, 32–35, 40, 42, 45, 52]), but few authorization log-
ics have been given a formal semantics [4, 18, 19, 22, 26].
Though semantics might not be immediately necessary to
deploy authorization logics in real systems, semantics yield

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
CCS’13, November 4–8, 2013, Berlin, Germany.
Copyright 2013 ACM 978-1-4503-2477-9/13/11...$15.00.
http://dx.doi.org/10.1145/2508859.2516667.

insight into the meaning of formulas, and semantics en-
able proof systems to be proved sound—which might require
proof rules and axioms to be corrected, if there are any lurk-
ing errors in the proof system.

For the sake of security, it is worthwhile to carry out such
soundness proofs. Given only a proof system, we must trust
that the proof system is correct. But given a proof system
and a soundness proof, which shows that any provable for-
mula is semantically valid, we now have evidence that the
proof system is correct, hence trustworthy. The soundness
proof thus relocates trust from the proof system to the proof
itself—as well as to the semantics, which ideally oﬀers more
intuition about formulas than the proof system itself.

Semantics of authorization logics are usually based on pos-
sible worlds, as used by Kripke [31]. Kripke semantics posit
an indexed accessibility relation on possible worlds.
If at
world w, principal p considers world w(cid:48) to be possible, then
(w, w(cid:48)) is in p’s accessibility relation. We denote this as
w ≤p w(cid:48). Authorization logics use Kripke semantics to give
meaning to the says connective: semantically, p says φ holds
in a world w iﬀ for all worlds w(cid:48) such that w ≤p w(cid:48), formula
φ holds in world w(cid:48). Hence a principal says φ iﬀ φ holds in
all worlds the principal considers possible.1

The use of Kripke semantics in authorization logic thus
requires installation of possible worlds and accessibility re-
lations into the semantics, solely to give meaning to says.
That’s useful for studying properties of logics and for build-
ing decision procedures. But, unfortunately, it doesn’t seem
to correspond to how principals reason in real-world systems.
Rather than explicitly considering possible worlds and rela-
tions between them, principals typically begin with some
set of base formulas they believe to hold—perhaps because
they have received digitally signed messages encoding those
formulas, or perhaps because they invoke system calls that
return information—then proceed to reason from those for-
mulas. So could we instead stipulate that each principal p
have a set of beliefs ω(p), called the worldview of p, such
that p says φ holds iﬀ φ ∈ ω(p)? That is, a principal says φ
iﬀ φ is in the worldview2of the principal?

This paper answers that question in the aﬃrmative. We
give two semantics for an authorization logic: a Kripke se-
mantics (§3), and a new belief semantics (§2), which employs

1The says connective is, therefore, closely related to the
modal necessity operator 2 [27] and the epistemic knowl-
edge operator K [15].
2Worldviews were ﬁrst employed by NAL [43], which pio-
neered an informal semantics based on them.

561worldviews to interpret says.3 We show (§4) that belief se-
mantics subsume Kripke semantics, in the sense that a belief
model can be constructed from any Kripke model. A formula
is valid in the Kripke model iﬀ it is valid in the constructed
belief model. As a result, the technical machinery of Kripke
semantics can be replaced by belief semantics. This poten-
tially increases the trustworthiness of an authorization sys-
tem, because the semantics is closer to how principals reason
in real systems.

The particular logical system we introduce in this paper
is FOCAL, First-Order Constructive Authorization Logic.
FOCAL extends a well-known authorization logic, cut-down
dependency core calculus (CDD) [2], from a propositional
language to a language with ﬁrst-order functions and re-
lations on system state. Functions and relations are es-
sential for reasoning about authorization in a real operat-
ing system—as exempliﬁed in Nexus Authorization Logic
(NAL) [43], of which FOCAL and CDD are both fragments.
Having given two semantics for FOCAL, we then turn to
the problem of proving soundness. It turns out that the NAL
proof system is unsound with respect to the semantics pre-
sented here: NAL allows derivation of a well-known formula
(cf. §5.2) that our semantics deems invalid. A priori, the
fault could lie with our semantics or with NAL’s proof sys-
tem. However, if the logic is to be used in a distributed set-
ting without globally-agreed upon state, then the proof sys-
tem should not allow the formula to be derived. So if NAL
is to be used in such settings, its proof system needs to be
corrected. CDD is also unsound with respect to our seman-
tics. However, CDD has been proved sound with respect to
a diﬀerent semantics [19]. This seeming discrepancy—sound
vs. unsound—illuminates a previously unexplored diﬀerence
(§5.2) between how NAL and CDD interpret says.

To achieve soundness for FOCAL, we develop a revised
proof system; the key technical change is using localized hy-
potheses in the proof rules. In §5, we prove the soundness of
our proof system with respect to both our belief and Kripke
semantics. This result yields the ﬁrst soundness proof with
respect to belief semantics for an authorization logic.

Having relocated trust into the soundness proof, we then
seek a means to increase the trustworthiness of that proof.
We formalize the syntax, proof system, belief semantics, and
Kripke semantics in the Coq proof assistant,4 and we mech-
anize the proofs of soundness for both the belief semantics
and the Kripke semantics. That mechanization relocates
trust from our soundness proof to Coq, which is well-studied
and is the basis of many other formalizations. Our Coq for-
malization contains about 2,400 lines of code.5

This paper thus advances the theory of computer security

with the following novel contributions:

• the ﬁrst formal belief semantics for authorization logic,
• a proof that Kripke semantics can be transformed into

belief semantics,

• a proof system that is sound with respect to belief and

Kripke semantics, and

3Our belief models are an instance of the syntactic approach
to modeling knowledge [13, 15, 30, 37].
4http://coq.inria.fr
5Our implementation is available from http://faculty.cs.
gwu.edu/~clarkson/projects/focal/.

τ ::= x | f (τ, . . . , τ )
φ ::= true |

false | r(τ, . . . , τ ) | τ1 = τ2
| φ1 ∧ φ2 | φ1 ∨ φ2 | φ1 ⇒ φ2 | ¬φ
| (∀ x : φ) | (∃ x : φ)
| τ says φ | τ1 speaksfor τ2

Figure 1: Syntax of FOCAL

• the ﬁrst machine-checked proof of soundness for an

authorization-logic proof system.

We proceed as follows. §2 presents FOCAL’s belief se-
mantics; and §3, the Kripke semantics. §4 relates the belief
semantics to the Kripke semantics. §5 gives a proof system
and proves its soundness with respect to both semantics. §6
discusses related work, and §7 concludes. All proofs appear
in the appendix.
2. BELIEF SEMANTICS

FOCAL is a constructive, ﬁrst-order, multimodal logic.
The key features that distinguish it as an authorization logic
are the says and speaksfor connectives, invented by Lampson
et al. [32]. These are used to reason about authorization—
for example, access control in a distributed system can be
modeled in the following standard way:

Example 1. A guard implements access control for a print-
er p. To permit printing to p, the guard must be convinced
that guard formula PrintServer says printTo(p) holds, where
PrintServer is the principal representing the server process.
That formula means PrintServer believes printTo(p) holds.
To grant printer access to user u, the print server can is-
sue the statement u speaksfor PrintServer . That formula
means anything u says, the PrintServer must also say. So if
u says printTo(p), then PrintServer says printTo(p), which
satisﬁes the guard formula hence aﬀords the user access.

Figure 1 gives the formal syntax of FOCAL. There are two
syntactic classes, terms τ and formulas φ. Metavariable x
ranges over ﬁrst-order variables, f over ﬁrst-order functions,
and r over ﬁrst-order relations.

Formulas of FOCAL do not permit monadic second-order
universal quantiﬁcation, unlike CDD and NAL. In NAL,
that quantiﬁer was used only to deﬁne false and speaksfor
as syntactic sugar. FOCAL instead adds these as primi-
tive connectives to the logic. FOCAL also deﬁnes ¬φ as a
primitive connective, but it could equivalently be deﬁned as
syntactic sugar for φ ⇒ false.

Syntactically, FOCAL is thus CDD without second-order
quantiﬁcation, but with ﬁrst-order terms and quantiﬁcation
and a primitive speaksfor connective. Likewise, FOCAL
is NAL without second-order quantiﬁcation, subprincipals,
group principals, and restricted delegation, but with a prim-
itive speaksfor connective.
2.1 Semantic models

The belief semantics of FOCAL combines ﬁrst-order con-
structive models with worldviews, which are used to inter-
pret says and speaksfor. To our knowledge, this semantics
is new in the study of authorization logics. Our presenta-
tion mostly follows the semantics of intuitionistic predicate
calculus given by Troelstra and van Dalen [48].

562First-order models. A ﬁrst-order model with equality is a
tuple (D, =, R, F ). The purpose of a ﬁrst-order model is
to interpret the ﬁrst-order fragment of the logic, speciﬁcally
ﬁrst-order quantiﬁcation, functions, and relations. D is a
set, the domain of individuals. Semantically, quantiﬁca-
tion in the logic ranges over these individuals. R is a set
{ri | i ∈ I} of relations on D, indexed by set I. Likewise,
F is a set {fj | j ∈ J} of functions on D, indexed by set
J. There is a distinguished equality relation =, which is an
equivalence relation on D, such that equal individuals are
indistinguishable by relations and functions.

To interpret ﬁrst-order variables, the semantics employs
valuation functions, which map variables to individuals. We
write v(x) to denote the individual that variable x represents
in valuation v. And we write v[d/x] to denote the valuation
that is the same as v except that v(x) = d.

Constructive models. A constructive model is a tuple (W,
≤, s). The purpose of constructive models is to extend ﬁrst-
order models to interpret the constructive fragment of the
logic, speciﬁcally implication and universal quantiﬁcation.
W is a set, the possible worlds. We denote an individual
world as w. Intuitively, a world w represents the state of
knowledge of a constructive reasoner. Constructive accessi-
bility relation ≤ is a partial order on W . If w ≤ w(cid:48), then the
constructive reasoner’s state of knowledge could grow from
w to w(cid:48). But unlike in classical logic, the reasoner need not
commit to a formula φ being either true or false at a world.
Suppose that at world w(cid:48), where w ≤ w(cid:48), the reasoner con-
cludes that φ holds. And at world w(cid:48)(cid:48), where w ≤ w(cid:48)(cid:48), the
reasoner concludes that ¬φ holds. But at world w, the rea-
soner has not yet concluded that either φ or ¬φ holds. Then
Excluded Middle (φ ∨ ¬φ) doesn’t hold at w.

Function s is the ﬁrst-order interpretation function.

It
assigns a ﬁrst-order model (Dw, =w, Rw, Fw) to each world
w. Let the individual elements of Rw be denoted as ri,w,
and the elements of Fw as fj,w. Thus, s enables a potentially
diﬀerent ﬁrst-order interpretation at each world. But to help
ensure that the constructive reasoner’s state of knowledge
only grows—hence never invalidates a previously admitted
construction—we require s to be monotonic w.r.t. ≤. That
is, if w ≤ w(cid:48) then (i) Dw ⊆ Dw(cid:48) , (ii) d =w d(cid:48) implies d =w(cid:48)
d(cid:48), (iii) ri,w ⊆ ri,w(cid:48) , and (iv) for all tuples (cid:126)d of individuals
in Dw, it holds that fj,w( (cid:126)d) =w fj,w(cid:48) ( (cid:126)d).

It’s natural to wonder why we chose to introduce possible
worlds into the semantics here after arguing against them in
§1. Note, though, that the worlds in the constructive model
are being used to model only the constructive reasoner—
which we might think of as the guard, who exists outside the
logic and attempts to ascertain the truth of formulas—not
any of the principals reasoned about inside the logic. More-
over, we have not introduced any accessibility relations for
principals, but only a single accessibility relation for the con-
structive reasoner. So the arguments in §1 don’t apply. It
would be possible to eliminate our usage of possible worlds
by employing a Heyting algebra semantics [49] of construc-
tive logic. But possible worlds blend better with the Kripke
semantics in §3.

It’s also natural to wonder why FOCAL is constructive
rather than classical. Schneider et al. [43] write that con-
structivism preserves evidence: “Constructive logics are well
suited for reasoning about authorization. . . because construc-
tive proofs include all of the evidence used for reaching a

conclusion and, therefore, information about accountability
is not lost. Classical logics allow proofs that omit evidence.”
They argue that Excluded Middle, used as an axiom in a
proof, would omit evidence by failing to indicate whether
access was granted on the basis of φ holding or ¬φ hold-
ing. Garg and Pfenning [20] also champion the notion of
evidence in authorization logics, writing that “[constructive
logics] keep evidence contained in proofs as direct as possi-
ble.” Regardless, we believe that a classical version of FO-
CAL could be created without diﬃculty.

is a tuple (W,≤, s, P, ω).
Belief models. A belief model
The purpose of belief models is to extend constructive mod-
els to interpret says and speaksfor. The ﬁrst part of a belief
model, (W,≤, s), must itself be a constructive model. The
next part, P , is the set of principals. Although individuals
can vary from world to world in a model, the set of prin-
cipals is ﬁxed across the entire model. Assuming a ﬁxed
set of principals is consistent with other authorization log-
ics [18, 19, 22], with constructive multimodal logics [44, 51]
(which have a ﬁxed set of modalities), and with classical
multimodal epistemic logics [15] (which have an indexed
set modalities, typically denoted Ki, where the index set is
ﬁxed)—even though constructivist philosophy might deem
it more sensible to allow P to grow with ≤.

Because we make no syntactic distinction between individ-
uals and principals, all principals must also be individuals:
P must be a subset of Dw for every w. First-order quantiﬁ-
cation can therefore range over individuals as well as prin-
cipals. For example, to quantify over all principals, we can
write (∀ x :
IsPrin(x) ⇒ φ), where IsPrin is a relation
that holds for all x ∈ P . Nonetheless, this does not consti-
tute truly intuitionistic quantiﬁcation, because the domain
of principals is constant. Quantiﬁcation over a non-constant
domain of principals is theoretically of interest, but we know
of no authorization logic that has used it.

.
We deﬁne an equality relation
= on principals, such that
principals are equal iﬀ they are equal at all worlds. Formally,
= p(cid:48) iﬀ, for all w, it holds that p =w p(cid:48).
.
p
The ﬁnal part of a belief model, worldview function ω,
yields the beliefs of a principal p: the set of formulas that p
believes to hold in world w under ﬁrst-order valuation v is
ω(w, p, v). For sake of simplicity, §1 used notation ω(p) when
ﬁrst presenting the idea of worldviews. Now that we’re be-
ing precise, we also include w and v as arguments. To ensure
that the constructive reasoner’s knowledge grows monoton-
ically, worldviews must be monotonic w.r.t. ≤:

Worldview Monotonicity: If w ≤ w(cid:48) then ω(w, p, v)
⊆ ω(w(cid:48), p, v).

To ensure that whenever principals are equal they have the
same worldview, we require the following:

Worldview Equality: If p
v, it holds that ω(w, p, v) = ω(w, p(cid:48), v).

= p(cid:48), then, for all w and
.

And we also require the following conditions to ensure that
valuations cannot cause worldviews to distinguish alpha-
equivalent formulas:

Worldview Valuations:

1. If x /∈ FV (φ) then φ ∈ ω(w, p, v) iﬀ, for all d ∈

Dw, it holds that φ ∈ ω(w, p, v[d/x]).

5632. If x ∈ FV (φ) and y /∈ FV (φ) then, for all d ∈
Dw, it holds that φ ∈ ω(w, p, v[d/x]) iﬀ φ[y/x] ∈
ω(w, p, v[d/y]), where φ[y/x] denotes the capture-
avoiding substitution of y for x in formula φ.

Condition (1) ensures that if x is irrelevant to φ, then the
value of x is also irrelevant to whether p believes φ. Con-
dition (2) ensures that if x is relevant to φ, then only its
value—not its name—is relevant to whether p believes φ.
2.2 Semantic validity
Figure 2 gives a belief semantics of FOCAL. The validity
judgment is written B, w, v |= φ where B is a belief model
and w is a world in that model. As is standard, B |= φ holds
iﬀ, for all w and v, it holds that B, w, v |= φ; whenever B |=
φ, then φ is a necessary formula in model B. And B, v |=
φ holds iﬀ for all w, it holds that B, w, v |= φ; whenever
B, v |= φ, then φ is a valuation-necessary formula. Likewise,
|= φ holds iﬀ, for all B, it holds that B |= φ; and whenever
|= φ, then φ is a validity. Let B, w, v |= Γ, where Γ is a
set of formulas, denote that for all ψ ∈ Γ, it holds that
B, w, v |= ψ. Finally, Γ |= φ holds iﬀ, for all B, w, and
v, it holds that B, w, v |= Γ implies B, w, v |= φ; whenever
Γ |= φ, then φ is a logical consequence of Γ.

The semantics relies on an auxiliary interpretation func-
tion µ that maps syntactic terms τ to semantic individuals:

µ(x) = v(x)

µ(fj((cid:126)τ )) = fj,w(µ((cid:126)τ ))

Implicitly, µ is parameterized on belief model B, world w,
and valuation v, but for notational simplicity we omit writ-
ing these as arguments to µ unless necessary for disambigua-
tion. Variables x are interpreted by looking up their value
in v; functions fj are interpreted by applying their ﬁrst-
order interpretation fj,w at world w to the interpretation of
their arguments. Notation (cid:126)τ represents a list τ1, τ2, . . . , τn
of terms. And µ((cid:126)τ ) denotes the pointwise application of µ
to each element of that list, producing µ(τ1), . . . , µ(τn).

The ﬁrst-order, constructive fragment of the semantics is
routine. The semantics of says is the intuitive semantics we
wished for in §1: A principal µ(τ ) says φ exactly when φ is
in that principal’s worldview ω(w, µ(τ ), v). And a principal
µ(τ1) speaks for another principal µ(τ2) exactly when, in
all constructively accessible worlds, everything µ(τ1) says,
µ(τ2) also says.

Note that some syntactic terms may represent individuals
that are not principals. For example, the integer 42 is pre-
sumably not a principal in P , but it could be an individual
in some domain Dw. An alternative would be to make FO-
CAL a two-sorted logic, with one sort for individuals and
another sort for principals.
Instead, we allow individuals
who aren’t principals to have beliefs, because it simpliﬁes
the deﬁnition of the logic. The worldviews of non-principal
individuals contain all formulas. Formally, for any individ-
ual d such that d (cid:54)∈ P , and for any world w, valuation v, and
formula φ, it holds that φ ∈ ω(w, d, v).

We impose a few well-formedness conditions on world-
views in this semantics, in addition to Worldview Mono-
tonicity and Worldview Equality. Worldviews must be closed
under logical consequence—that is, principals must believe
all the formulas that are a consequence of their beliefs.

Worldview Closure: If Γ ⊆ ω(w, p, v) and Γ |= φ,
then φ ∈ ω(w, p, v).

Worldview Closure means that principals are fully logically
omniscient [15]. With its known beneﬁts and ﬂaws [39, 47],
this has been a standard assumption in authorization logics
since their inception [32].

The remaining well-formedness conditions are optional, in
the sense that they are necessary only to achieve soundness
of particular proof rules in §5. Eliminate those rules, and
the following conditions would be eliminated.

Worldviews must ensure that says is a transparent modal-
ity. That is, for any principal p, it holds that p says φ exactly
when p says (p says φ):

Says Transparency: φ ∈ ω(w, µ(τ ), v) iﬀ τ says φ ∈
ω(w, µ(τ ), v).

So says supports positive introspection: if p believes that φ
holds, then p is aware of that belief, therefore p believes that
p believes that φ holds. The converse of that holds as well.
Recent authorization logics include transparency [3,43], and
it is well known (though sometimes vigorously debated) in
epistemic logic [25, 27]. Says Transparency corresponds to
rules says-li and says-ri in ﬁgure 5.

Worldviews must enable principals to delegate, or hand-
oﬀ, to other principals:
if a principal q believes that
p speaksfor q, it should hold that p does speak for q. Hand-
oﬀ, as the following axiom, existed in the earliest authoriza-
tion logic [32]:

(q says (p speaksfor q)) ⇒ (p speaksfor q)

(1)

To support it, we adopt a condition that ensures whenever
q believes p speaks for q, then it really does:

Belief Hand-oﬀ: If (p speaksfor q) ∈ ω(w, q, v) then
ω(w, p, v) ⊆ ω(w, q, v).

Belief Hand-oﬀ corresponds to rule sf-i in ﬁgure 5.

3. KRIPKE SEMANTICS

A modal model

The Kripke semantics of FOCAL combines ﬁrst-order con-
structive models with modal (Kripke) models [15, 27, 44].
Similar semantic models have been explored before (see,
e.g., [18, 22, 51]). Indeed, the only non-standard part of our
semantics is the treatment of speaksfor, and that part turns
out to be a generalization of previous classical semantics.
Nonetheless, we are not aware of any authorization logic
semantics that is equivalent to or subsumes our semantics.
First-order and constructive models were already presented
in §2, so we begin here with modal models.
3.1 Modal models

is a tuple (W,≤, s, P, A). The purpose
of modal models is to extend constructive models to inter-
pret says and speaksfor. The ﬁrst part of a modal model,
(W,≤, s), must itself be a constructive model. The next
part, P , is the set of principals. As with belief models, all
principals must be individuals, so P must be a subset of Dw
.
= is deﬁned just
for every w. Principal equality relation
as in belief models. The ﬁnal part of a modal model, A,
is a set {≤p | p ∈ P} of binary relations on W , called the
principal accessibility relations.6 If w ≤p w(cid:48), then at world
w, principal p considers world w(cid:48) possible. To ensure that
equal principals have the same beliefs, we require
6In our notation, an unsubscripted ≤ always denotes the
constructive relation, and a subscripted ≤ always denotes a
principal relation.

564B, w, v |= true
B, w, v |= false
B, w, v |= ri((cid:126)τ )
B, w, v |= τ1 = τ2
B, w, v |= φ1 ∧ φ2
B, w, v |= φ1 ∨ φ2
B, w, v |= φ1 ⇒ φ2
B, w, v |= ¬φ
B, w, v |= (∀ x : φ)
B, w, v |= (∃ x : φ)
B, w, v |= τ says φ
B, w, v |= τ1 speaksfor τ2

always
never

iﬀ µ((cid:126)τ ) ∈ ri,w
iﬀ µ(τ1) =w µ(τ2)
iﬀ B, w, v |= φ1 and B, w, v |= φ2
iﬀ B, w, v |= φ1 or B, w, v |= φ2
iﬀ for all w(cid:48) ≥ w : B, w(cid:48), v |= φ1 implies B, w(cid:48), v |= φ2
iﬀ for all w(cid:48) ≥ w : B, w(cid:48), v (cid:54)|= φ
iﬀ for all w(cid:48) ≥ w, d ∈ Dw(cid:48) : B, w(cid:48), v[d/x] |= φ
iﬀ there exists d ∈ Dw : B, w, v[d/x] |= φ
iﬀ φ ∈ ω(w, µ(τ ), v)
iﬀ for all w(cid:48) ≥ w : ω(w(cid:48), µ(τ1), v) ⊆ ω(w(cid:48), µ(τ2), v)

Figure 2: FOCAL validity judgment for belief semantics

K, w, v |= τ says φ
K, w, v |= τ1 speaksfor τ2
K, w, v |= . . .

iﬀ for all w(cid:48), w(cid:48)(cid:48) : w ≤ w(cid:48) ≤µ(w(cid:48),τ ) w(cid:48)(cid:48) implies K, w(cid:48)(cid:48), v |= φ
iﬀ ≤w
iﬀ same as ﬁgure 2, but substituting K for B

µ(τ1) ⊇ ≤w

µ(τ2)

Figure 3: FOCAL validity judgment for Kripke semantics

Accessibility Equality: If p

= p(cid:48), then ≤p = ≤p(cid:48) .
.

the standard semantics of 2 in classical modal logic [27]:

That non-requirement raises an important question.

Like ≤ in a constructive model, we require s to be mono-
tonic w.r.t. each ≤p. This requirement enforces a kind of
constructivity on each principal p, such that from a world in
which individual d is constructed, p cannot consider possible
any world in which d has not been constructed. Unlike ≤,
none of the ≤p are required to be partial orders: they are not
required to satisfy reﬂexivity, anti-symmetry, or transitivity.
In
epistemic logics, the properties of what we call the “prin-
cipal accessibility relations” determine what kind of knowl-
edge is modeled [15]. If, for example, these relations must
be reﬂexive, then the logic models veridical knowledge:
if
p says φ, then φ indeed holds. But that is not the kind of
knowledge we seek to model with FOCAL, because princi-
pals may say things that in fact do not hold. So what are
the right properties, or frame conditions, to require of our
principal accessibility relations? We brieﬂy delay presenting
them, so that we can present the Kripke semantics.

3.2 Semantic validity
Figure 3 gives a Kripke semantics of FOCAL. The validity
judgment is written K, w, v |= φ where K is a modal model
and w is a world in that model. Only the judgments for the
says and speaksfor connectives are given in ﬁgure 3. For the
remaining connectives, the Kripke semantics is the same as
the belief semantics in ﬁgure 2. Interpretation function µ
remains unchanged from §2, except that it is now implicitly
parameterized on K instead of B.
To understand the semantics of says, ﬁrst observe the fol-
lowing. Suppose that, for all worlds w(cid:48), it holds that w ≤ w(cid:48)
implies w = w(cid:48).7 Then the semantics of says simpliﬁes to

7This condition corresponds to the axiom of excluded mid-
dle. So it makes sense that adding the frame condition would
result in the classical semantics of 2.

K, w, v |= τ says φ
iﬀ for all w

(cid:48)(cid:48)

: w ≤µ(τ ) w

(cid:48)(cid:48)

implies K, w, v |= φ.

That is, a principal believes a formula holds whenever that
formula holds in all accessible worlds. The purpose of the
quantiﬁcation over w(cid:48), where w ≤ w(cid:48), in the unsimpliﬁed se-
mantics of says is to achieve monotonicity of the constructive
reasoner:

then

If K, w, v |= φ and w ≤ w(cid:48)

Proposition 1.
K, w(cid:48), v |= φ.
That is, whenever φ holds at a world w, if the constructive
reasoner is able to reach an extended state of knowledge at
world w(cid:48), then φ should continue to hold at w(cid:48). Without the
quantiﬁcation over w(cid:48) in the semantics of says, monotonicity
is not guaranteed to hold. Constructive modal logics have,
unsurprisingly, also used this semantics for 2 [44, 51], and a
similar semantics has been used in authorization logic [18].
Note that, if there do not exist any worlds w(cid:48) and w(cid:48)(cid:48) such
that w ≤ w(cid:48) ≤µ(τ ) w(cid:48)(cid:48), then at w, principal τ will say any
formula φ, including false. When a principal says false at
world w, we deem that principal compromised at w.

As for the semantics of speaksfor, it might be tempting to

try deﬁning it as syntactic sugar:

τ1 speaksfor τ2 ≡ ∀φ : τ1 says φ ⇒ τ2 says φ

However, the formula on the right-hand side is not a well-
formed formula of FOCAL, because it quantiﬁes over syntac-
tic formulas. So the semantics of speaksfor cannot interpret
it directly in terms of says.8

Instead, the FOCAL semantics of speaksfor generalizes the

classical Kripke semantics of speaksfor [4, 26]. Classically,

K, w, v |= τ1 speaksfor τ2

(2)
8It is possible [19,43] to instead use second-order quantiﬁers
to achieve a direct interpretation. That solution would un-
necessarily complicate our semantics by introducing second-
order quantiﬁers solely for the sake of deﬁning speaksfor.

iﬀ ≤µ(τ1) ⊇ ≤µ(τ2).

565w(cid:48)
≤

w

≤p

u

IT
≤p

≤p
F1

≤p

w(cid:48)
≤

w

v

≤p

v(cid:48)

v

≤

≤p

w(cid:48)
≤

w

w(cid:48)
≤

w

≤p

v

v(cid:48)

v

≤

u

≤p
ID
≤p

≤p
F2

Figure 4: Frame conditions for Kripke semantics

That is, the accessibility relation of τ1 must be a superset
of the accessibility relation of τ2. However, that deﬁnition
does not account for constructive accessibility, and it even
turns out to interact badly with hand-oﬀ.

We therefore relax the classical semantics of speaksfor:

iﬀ ≤w

µ(τ1) ⊇ ≤w

K, w, v |= τ1 speaksfor τ2

µ(τ2)

(3)
µ(p) is deﬁned to be ≤p |[w]p ,9 and [w]p is deﬁned
where ≤w
to be the set of worlds w(cid:48) such that w(cid:48) is reachable from w,
or vice-versa, by relation (≤ ∪ ≤p)∗. Note that whenever
[w]p equals W (as it would in classical logic10), it holds that
µ(p) equals ≤p.
≤w
The validity judgment for FOCAL is therefore quite stan-
dard, except for speaksfor, where it generalizes classical logic.
Although we would prefer to adopt a well-known construc-
tive semantics of speaksfor, neither of the two we’re aware of
seems to work for FOCAL: ICL [19] would impose an axiom
called Unit that we do not want to include (cf. §5.2), and
BLsf [22] does not include hand-oﬀ (1), which we want to
optionally support (cf. §2.2 and §3.3).
3.3 Frame conditions

We now return to the discussion begun in §3.1 of the frame
conditions for FOCAL. The ﬁrst two frame conditions we
impose help to ensure Says Transparency:

IT: If w ≤p u ≤p v, then there exists a w(cid:48) such that
w ≤ w(cid:48) ≤p v.
ID: If w ≤p v, then there exists a w(cid:48) and u such that
w ≤ w(cid:48) ≤p u ≤p v.

Figure 4 depicts these conditions; dotted lines indicate exis-
tentially quantiﬁed edges. IT helps to guarantee if p says φ
then p says (p says φ); ID does the converse.11
9If R is a binary relation on set A, then R|X is the restriction
of R to A, where X ⊆ A. That is, R|X = {(x, x(cid:48)) | (x, x(cid:48)) ∈
R and x ∈ X and x(cid:48) ∈ X}.
10When frame condition ≤ = W × W is imposed, construc-
tive logic collapses to classical. Under that condition, every
world w(cid:48) would be reachable from w, hence [w]p = W .
11IT and ID are abbreviations for intuitionistic transitivity
and intuitionistic density.

Note how, if w = w(cid:48), the conditions reduce to the classical
deﬁnitions of transitivity and density. Those classical con-
ditions are exactly what guarantee transparency in classical
modal logic.

IT and ID are not quite suﬃcient to yield transparency.
By also imposing the following frame condition, we do achieve
transparency:12

F2: If w ≤p v ≤ v(cid:48), then there exists a w(cid:48) such that
w ≤ w(cid:48) ≤p v(cid:48).

F2 is depicted in ﬁgure 4.
It is diﬃcult to motivate F2
solely in terms of authorization logic, though it has been
proposed in several Kripke semantics for constructive modal
logics [14, 16, 41, 44]. But there are two reasons why F2 is
desirable for FOCAL:

• Assuming F2 holds, IT and ID are not only suﬃcient
but also necessary conditions for transparency—a re-
sult that follows from work by Plotkin and Stirling [41].
So in the presence of F2, transparency in FOCAL is
precisely characterized by IT and ID.

• Suppose FOCAL were to be extended with a 3 modal-
ity. It could be written τ suspects φ, with semantics
K, w, v |= τ suspects φ iﬀ there exists w(cid:48) such that
w ≤µ(τ ) w(cid:48) and K, w(cid:48), v |= φ. We would want says and
suspects to interact smoothly. For example, it would
be reasonable to expect that ¬(τ suspects φ) implies
τ says ¬φ. For if τ does not suspect φ holds anywhere,
then τ should believe ¬φ holds. Condition F2 guaran-
tees that implication [41]. So F2 prepares FOCAL for
future extension with a suspects modality.13

To ensure the validity of hand-oﬀ, we impose the following

frame condition:

H: For all principals p and worlds w, if there do not
exist any worlds w(cid:48) and w(cid:48)(cid:48) such that w ≤ w(cid:48) ≤p w(cid:48)(cid:48),
then, for all p(cid:48), it must hold that ≤w

µ(p) ⊆ ≤w

µ(p(cid:48)).

This condition guarantees that if a principal p becomes com-
promised at world w, then the reachable component of its
accessibility relation will be a subset of all other principals’.
By the FOCAL semantics of speaksfor, all other principals
therefore speak for p at w.

Finally, we impose one additional condition to achieve the

Each frame condition above was imposed, not for ad hoc
purposes, but because of a speciﬁc need in the proof of the
soundness result of §5. So with appropriate deletion of rules
from the proof system, each of the above frame conditions
could be eliminated. IT and ID should be removed if rules
says-li and says-ri (from ﬁgure 5) are removed; F2 should
be removed if rule says-lri is removed; and H should be
removed if rule sf-i is removed.
equivalence results (theorem 1 and proposition 2) of §4:
12F2 is the name given this condition by Simpson [44].
13Were suspects to be added to FOCAL, it would also be de-
if w ≤ w(cid:48) and
sirable to impose a fourth frame condition:
w ≤p v, then there exists a v(cid:48) such that v ≤ v(cid:48) and w(cid:48) ≤p v(cid:48).
This condition, named F1 by Simpson [44], guarantees [41]
that τ suspects φ implies ¬(τ says ¬φ). It also guarantees
monotonicity (cf. proposition 1) for suspects. Figure 4 de-
picts F1. Simpson [44, p. 51] argues that F1 and F2 could
be seen as fundamental, not artiﬁcial, frame conditions for
constructive modal logics.

566WSF: K, w, v |= τ speaksfor τ(cid:48) iﬀ, for all φ, if K, w, v |=
τ says φ then K, w, v |= τ(cid:48) says φ.

This condition restricts the class of Kripke models to those
where speaksfor is the weak speaksfor connective [4, 26]. In
fact, we’d prefer to use WSF directly as the semantics of
speaksfor in ﬁgure 3.14 But it wouldn’t be a well-founded
deﬁnition of |=, because φ could itself be τ speaksfor τ(cid:48),
leading to a circularity in the semantic deﬁnition. So we
instead impose WSF as a separate axiom.

4. SEMANTIC TRANSFORMATION
We have now given two semantics for FOCAL, a belief
semantics (§2) and a Kripke semantics (§3). How are these
two semantics related? It turns out that a Kripke model
can be transformed into a belief model, but the converse
does not hold—as we now explain.

Given a modal model K, there is a natural way to con-
struct a belief model from it: assign each principal a world-
view containing exactly the formulas that the principal says
in K. Call this construction k2b, and let k2b(K) denote the
resulting belief model.
To give a precise deﬁnition of k2b, we need to introduce
a new notation. Given a principal p ∈ P , formula p says φ
is not necessarily well-formed, because p is not necessarily
a syntactic term. So let K, w, v |= ˆp says φ be deﬁned as
for all w(cid:48) and w(cid:48)(cid:48) such that w ≤ w(cid:48) ≤p w(cid:48)(cid:48), it
follows:
holds that K, w(cid:48)(cid:48), v |= φ. This deﬁnition simply unrolls the
semantics of says to produce something well-formed.15
The precise deﬁnition of k2b is as follows: if K = (W,≤, s,
P, A), then k2b(K) is belief model (W,≤, s, P, ω), where
ω(w, p, v) is deﬁned to be {φ | K, w, v |= ˆp says φ}.

Our ﬁrst concern is whether k2b(K) produces a belief
model that is equivalent to K.
In particular, a formula
should be valid in K iﬀ it is valid in k2b(K). Construction
k2b does produce equivalent models:
Theorem 1. For all K, w, v, and φ, K, w, v |= φ iﬀ
k2b(K), w, v |= φ.

Our second concern is whether k2b(K) satisﬁes all the con-
ditions required by §2: Worldview Monotonicity, Worldview
Equality, Worldview Closure, Says Transparency, and Belief
Hand-oﬀ. If a belief model B does satisfy these conditions,
then B is well-formed. And modal model K is well-formed
if it satisﬁes all the conditions required by §3: Accessibility
Equality, IT, ID, F2, H, and WSF. Construction k2b does,
indeed, produce well-formed belief models:

Proposition 2. For all well-formed modal models K, belief
model k2b(K) is well-formed.

worldview contains X—i.e., for all v, it holds that
X ∈ ω(w, p, v)—and that p’s worldview does not
contain false. By the semantics of says, it holds
that B, w, v |= p says X.

When transforming B to a Kripke model K, what edges
could we put in ≤p? There are only two choices: ≤p could
be empty, or ≤p could contain the single edge (w, w). If ≤p
is empty, then p is compromised, hence p says false. That
contradicts our assumption that false is not in p’s worldview.
If w ≤p w, then for w(cid:48) and w(cid:48)(cid:48) such that w ≤ w(cid:48) ≤p w(cid:48)(cid:48),
it does not hold that K, w(cid:48)(cid:48), v |= X, because w and w(cid:48)(cid:48) can
only be instantiated as w, and because B, w, v (cid:54)|= X. Hence
p does not say X. That contradicts our assumption that X
is in p’s worldview. So we cannot construct an accessibility
relation ≤p that causes the resulting Kripke semantics to
preserve validity of formulas from the belief semantics.

There is, therefore, no construction that can soundly trans-
form belief models into Kripke models—unless, perhaps, the
set of worlds is permitted to change. We conjecture that it
is possible to synthesize a new set of possible worlds, and
equivalence relations on them, yielding a Kripke model that
preserves validity of formulas from the belief model.

5. PROOF SYSTEM

FOCAL’s derivability judgment is written Γ (cid:96) φ where
Γ is a set of formulas called the context.16 As is standard,
we write (cid:96) φ when Γ is the empty set. In that case, φ is a
theorem. We write Γ, φ to denote Γ ∪ {φ}.

Figure 5 presents the proof system. In it, φ[τ /x] denotes
capture-avoiding substitution of τ for x in φ. The ﬁrst-
order fragment of the proof system is routine (e.g., [38, 46,
50]).17 Because of imp-i, the deduction theorem holds for
FOCAL [24]. says-lri, says-li, and says-ri use notation
τ says Γ, which means that τ says all the formulas in set Γ.
Formally, τ says Γ is deﬁned as {τ says φ | φ ∈ Γ}.

The usual sequent calculus structural rules of contrac-
tion and exchange are admissible. But weakening (our rule
weak) is not admissible: it must be directly included in the
proof system, because the conclusions of says-{lri,li,ri}
capture their entire context Γ inside says.

says-lri corresponds [27] to standard axiom K along with
rule N from epistemic logic; says-ri, to standard axiom 4;
and says-li, to the converse C4 [3] of 4:

(cid:96) (p says (φ ⇒ ψ)) ⇒ (p says φ) ⇒ (p says ψ),

K :
N : From (cid:96) φ infer (cid:96) p says φ,
4 :

(cid:96) (p says φ) ⇒ (p says (p says φ)),
(cid:96) (p says (p says φ)) ⇒ (p says φ).

C4 :

We might wonder whether there is a construction that can
soundly transform belief models into Kripke models. Con-
sider trying to transform the following belief model B into
a Kripke model:

K and says-lri mean that modus ponens applies inside says.
They correspond to Worldview Closure. C4 and 4, along
with says-li and says-ri, mean that p says (p says φ) is
equivalent to p says φ; they correspond to Says Transparency

B has a single world w and a proposition (i.e., a
nullary relation) X, such that, for all v, it holds
that B, w, v (cid:54)|= X. Suppose that principal p’s

14If FOCAL included second-order quantiﬁcation as a logical
connective, speaksfor could be deﬁned as syntactic sugar [2],
avoiding the awkwardness of WSF.
15Another solution would be to stipulate that every principal
p can be named by a term ˆp in the syntax.

16These formulas are localized hypotheses, which the proof
system uses instead of the hypothetical judgments found in
natural deduction systems. Similar to the left-hand side Γ of
a sequent Γ =⇒ ∆, the localized hypotheses are assumptions
being used to derive right-hand side ∆. Unlike a sequent, Γ
is a set, not a sequence.
17Under the usual constructive deﬁnition of ¬φ as φ ⇒ false,
rules not-i and not-e are admissible and could be elimi-
nated from the proof system.

567Γ, φ (cid:96) φ

hyp

Γ (cid:96) φ ∧ ψ

Γ (cid:96) ψ

and-re

Γ (cid:96) φ
Γ, ψ (cid:96) φ
Γ (cid:96) φ1

Γ (cid:96) φ1 ∨ φ2

or-li

Γ (cid:96) φ2

Γ (cid:96) φ1 ∨ φ2

or-ri

weak

Γ (cid:96) true

true-i Γ (cid:96) false
Γ (cid:96) φ

false-e

Γ (cid:96) φ Γ (cid:96) ψ
Γ (cid:96) φ ∧ ψ

and-i

Γ (cid:96) φ ∧ ψ

Γ (cid:96) φ

and-le

Γ (cid:96) φ1 ∨ φ2 Γ, φ1 (cid:96) ψ Γ, φ2 (cid:96) ψ

Γ (cid:96) ψ

Γ (cid:96) φ x (cid:54)∈ FV (Γ)

Γ (cid:96) (∀ x : φ)

or-e

forall-i

Γ, φ (cid:96) ψ
Γ (cid:96) φ ⇒ ψ
Γ (cid:96) (∀ x : φ)
Γ (cid:96) φ[τ /x]
eq-r Γ (cid:96) τ1 = τ2
Γ (cid:96) τ2 = τ1
Γ (cid:96) τ = τ
Γ (cid:96) r(τ1, . . . , τn) Γ (cid:96) τi = τ(cid:48)

eq-s

i

exists-e

imp-i

forall-e

eq-fun

1, . . . , τ(cid:48)
n)
τ says Γ (cid:96) φ

τ says Γ (cid:96) τ says φ

1, . . . , τ(cid:48)
n)

Γ (cid:96) r(τ(cid:48)
Γ (cid:96) τ2 says (τ1 speaksfor τ2)

eq-rel

sf-i

says-ri

Γ (cid:96) τ1 speaksfor τ2
Γ (cid:96) τ1 speaksfor τ2 Γ (cid:96) τ2 speaksfor τ3

Γ (cid:96) τ1 speaksfor τ3

sf-t

Γ (cid:96) φ Γ (cid:96) φ ⇒ ψ

imp-e

Γ (cid:96) ψ
Γ (cid:96) φ[τ /x]
Γ (cid:96) (∃ x : φ)

exists-i

Γ (cid:96) φ Γ (cid:96) ¬φ

Γ, φ (cid:96) false
Γ (cid:96) ¬φ
Γ (cid:96) (∃ x : φ) Γ, φ (cid:96) ψ x (cid:54)∈ FV (Γ, ψ)

Γ (cid:96) false

not-e

not-i

Γ (cid:96) τ1 = τ2 Γ (cid:96) τ2 = τ3

Γ (cid:96) τ1 = τ3

eq-t

Γ (cid:96) ψ
Γ (cid:96) τi = τ(cid:48)

i

Γ (cid:96) f (τ1, . . . , τn) = f (τ(cid:48)

Γ (cid:96) φ

τ says Γ (cid:96) τ says φ

says-lri

Γ (cid:96) τ says φ

τ says Γ (cid:96) τ says φ

says-li

Γ (cid:96) τ1 speaksfor τ2 Γ (cid:96) τ1 says φ

Γ (cid:96) τ2 says φ

sf-e

Γ (cid:96) τ speaksfor τ

sf-r

Figure 5: FOCAL derivability judgment

In the Kripke semantics, says-ri
in the belief semantics.
corresponds to IT; and says-li, to ID. (Note, we do not
argue that 4 and C4 are necessary in authorization logics;
we simply show how to support them.)

sf-i corresponds to hand-oﬀ (1). sf-e uses speaksfor to
deduce beliefs. sf-r and sf-t state that speaksfor is reﬂexive
and transitive.
5.1 Soundness

Our ﬁrst soundness theorem for FOCAL states that if φ
is provable from assumptions Γ, and that if a belief model
validates all the formulas in Γ, then that model must also
validate φ. Therefore, any provable formula is valid in the
belief semantics:
Theorem 2. If Γ (cid:96) φ and B, w, v |= Γ, then B, w, v |= φ.

The result is, to our knowledge, the ﬁrst proof of soundness
for an authorization logic w.r.t. a belief semantics. The proof
of theorem 2 relies on the following proposition, which states
monotonicity of validity w.r.t. ≤:

Proposition 3.
B, w(cid:48), v |= φ.

If B, w, v |= φ and w ≤ w(cid:48)

then

Our second soundness theorem for FOCAL states that any

provable formula is valid in the Kripke semantics:
Theorem 3. If Γ (cid:96) φ and K, w, v |= Γ, then K, w, v |= φ.

The proof of that theorem relies on proposition 1 (mono-
tonicity of the Kripke semantics). We have mechanized the
proofs of theorems 2 and 3 and propositions 1 and 3 in Coq.
5.2 State in distributed systems

FOCAL was derived from CDD [2] and NAL [43]. But we
deliberately designed the FOCAL proof system such that its
theory diﬀers in one important way from theirs. We discuss
our motivation for this change, next.

There are two standard ways of “importing” beliefs into
a principal’s worldview. The ﬁrst is rule N from §5, also
known as the rule of Necessitation: from (cid:96) φ, infer (cid:96) p says
φ. The second is an axiom known as Unit: (cid:96) φ ⇒ (p says φ).
Though superﬁcially similar, it is well-known that Necessi-
tation and Unit lead to diﬀerent theories. Abadi [3] explores
some of the proof-theoretic diﬀerences, particularly some of
the surprising consequences of Unit in classical authoriza-
tion logic. In the example below, we focus on one diﬀerence
that does not seem to have been explored in constructive
authorization logic:

Example 2. Machines M1 and M2 execute processes P1 and
P2, respectively. M1 has a register R. Let Z be a proposition
representing “register R is currently set to zero.” According
to Unit, (cid:96) Z ⇒ (P1 says Z) and (cid:96) Z ⇒ (P2 says Z). The
former means that a process on a machine knows the current
contents of a register on that machine; the latter means that
a process on a diﬀerent machine must also know the current
contents of the register. But according to Necessitation, if (cid:96)
Z then (cid:96) P1 says Z and (cid:96) P2 says Z. Only if R is guaranteed
to be constant—i.e., it can never at any time be anything
other than zero—must the two processes say so.

Unit, therefore, is appropriate when propositions (or re-
lations or functions) represent global state upon which all
principals are guaranteed to agree. But when propositions
represent local state that could be unknown to some princi-
pals, Unit would arguably be an invalid axiom. A counter-
model demonstrating Unit’s invalidity is easy to construct—
for example, stipulate a world w at which Z holds, and let
P1’s worldview contain Z but P2’s worldview not contain
Z. That countermodel doesn’t apply to Necessitation, be-
cause Z is not a theorem in it, therefore the principals may
disagree on Z’s validity.
Prior work has objected to Unit for other reasons (cf. §6),
but not for this diﬀerence between local and global state.
We are unaware of any authorization logic that rejects Ne-

568cessitation, which is widely accepted along with axiom K
(cf. §5) in normal modal logic [27].

FOCAL is designed for reasoning about state in distributed
systems, where principals (such as machines) may have local
state, and where global state does not necessarily exist—the
reading at a clock, for example, is not agreed upon by all
principals. So Unit would be invalid for FOCAL principals;
Necessitation is the appropriate choice. We therefore in-
clude Necessitation in FOCAL in the form of rule says-lri.
Having that rule in our proof system is equivalent to having
both Necessitation and K in a natural-deduction proof sys-
tem [27, p. 214, where says-lri is called lr]. Unit, on the
other hand, is invalid in FOCAL’s semantics, and FOCAL’s
proof system is sound w.r.t. its semantics, so it’s impossible
to derive Unit in FOCAL.

Similarly, NAL principals do not necessarily agree upon
global state. NAL does include Necessitation as an inference
rule and does not include Unit as an axiom. However, NAL
permits Unit to be derived as a theorem:18

[φ]1

p says φ

φ ⇒ p says φ

nal-says-i

nal-imp-i1

NAL’s proof system is, therefore, arguably unsound w.r.t.
our belief semantics: there is a formula (Unit) that is a
theorem of the system but that is not semantically valid.

NAL extends CDD’s proof system, so we might suspect
that CDD is also unsound w.r.t. our semantics. And it is.
However, CDD has been proved sound w.r.t. a lax logic se-
mantics [19]. That semantics employs a diﬀerent intuition
about says than NAL. CDD understands p says φ to mean
“when combining the [statement φ] that the [guard] believes
with those that [p] contributes, the [guard] can conclude
φ. . . the [guard’s] participation is left implicit” [2, p. 13]. In
other words, the guard’s beliefs are imported into p’s beliefs
at each world. That results in a diﬀerent meaning of says
than FOCAL or NAL employs.

Since Abadi’s invention of CDD [2], the says connective
is frequently assumed to satisfy the monad [36] laws, which
include Unit. But FOCAL rejects Unit, so FOCAL’s says
connective is not a monad. The monad laws also include
an axiom named Bind, which turns out to be invalid in FO-
CAL’s semantics.19 We don’t know whether rejecting the
monad laws will have any practical impact on FOCAL. But
the seminal authorization logic, ABLP [4], didn’t adopt the
monad laws. Likewise, Garg and Pfenning [21] reject Unit
in their authorization logic BL0; they demonstrate that Unit
leads to counterintuitive interpretations of some formulas in-
volving delegation. And Abadi [1] notes that Unit “should
be used with caution (if at all),” suggesting that it be re-
placed with the weaker axiom (p says φ) ⇒ (q says p says φ).
Genovese et al. [22] carry out that suggestion. So in rejecting
the monad laws, FOCAL is at least in good company.

18Rules nal-imp-i and nal-says-i are given by Schneider et
al. [43]. The brackets around φ at the top of the proof tree
indicate that it is used as a hypothesis [50]. The appearance
of “1” as a super- and subscript indicate where the hypothesis
is introduced and cancelled.
19The terms “monad,”“lax logic,” and the combination of ax-
ioms Unit and Bind all three convey the same mathematical
structure, so it’s not surprising that FOCAL diﬀers from all
of them.

6. RELATED WORK

FOCAL has the ﬁrst formal belief semantics of any au-
thorization logic. Belief semantics have been used in only
one other authorization logic, NAL [43], which has only an
informal semantics based on worldviews.

But many of the pieces of FOCAL, including its semantics
and proof system, are naturally derived from previous work.
We summarize here what we borrowed vs. what we invented;
the main body of the paper contains detailed citations. FO-
CAL’s belief semantics is a standard ﬁrst-order constructive
semantics, but the addition of worldviews to interpret says
and speaksfor is novel (with the exception of NAL, which
used worldviews informally). FOCAL’s Kripke semantics
for everything except speaksfor is likewise standard, and
its frame conditions (except H and WSF) are already well-
known in constructive modal logic, but the application of IT
and ID to authorization logic seems to be novel. FOCAL’s
proof system, excluding says and speaksfor, is a straightfor-
ward ﬁrst-order constructive proof system. The fragment
for says is our own adaptation of natural-deduction rules for
the 2 connective. The fragment for speaksfor corresponds
to standard deﬁnitions used in many authorization logics.

Semantic structures similar to our belief models have been
investigated in the context of epistemic logic [13, 15, 37].
Konolige [30] proves an equivalence result for classical propo-
sitional logic similar to our theorem 1.

Garg and Abadi [19] give a Kripke semantics for a logic
they call ICL, which could be regarded as a propositional
fragment of FOCAL. The ICL semantics of says, however,
uses invisible worlds to permit principals to be oblivious to
the truth of formulas at some worlds. That makes Unit
(§5.2) valid in ICL, whereas Unit is invalid in FOCAL.

Garg [18] studies the proof theory of a logic called DTL0,
and gives a Kripke semantics that uses both invisible worlds
and fallible worlds, at which false is permitted to be valid.
Instead of Unit, it uses the axiom p says ((p says φ) ⇒ φ).
That axiom is unsound in FOCAL. DTL0 does not have a
speaksfor connective.

Genovese et al. [22] study several uses for Kripke seman-
tics with an authorization logic they call BLsf, which also
could be regarded as a propositional fragment of FOCAL.
They show how to generate evidence for why an access should
be denied, how to ﬁnd all logical consequences of an au-
thorization policy, and how to determine which additional
credentials would allow an access. However, the Kripke se-
mantics of BLsf diﬀers from FOCAL’s in its interpretation of
both says and speaksfor, so the results of Genovese et al. are
not immediately applicable to FOCAL.

Garg and Pfenning [20] prove non-interference properties
for a ﬁrst-order constructive authorization logic. Such prop-
erties mean that one principal’s beliefs cannot interfere with
another principal’s beliefs unless there is some trust relation-
ship between those principals. Abadi [2] also proves such a
property for dependency core calculus (DCC), which is the
basis of authorization logic CDD. We conjecture that similar
properties could be proved for FOCAL.

7. CONCLUDING REMARKS

This work began with the idea of giving a Kripke seman-
tics to NAL. Proving soundness—at ﬁrst on paper, not in
Coq—turned out to be surprising, because Unit is semanti-
cally invalid but derivable in NAL (§5.2). The complexity

569of the resulting Kripke semantics motivated us to seek a
simpler semantics. We were inspired by the informal world-
view semantics of the NAL rationale [43] and elaborated that
into our belief semantics (§2). In future work, we plan to up-
grade FOCAL to handle NAL’s advanced features, including
intensional group principals.

Mechanizing the proofs of soundness in Coq was frequently
rewarding. It exposed several bugs (in either our proof sys-
tem or our semantics) and gave us high conﬁdence in the
correctness of the result. We expect further beneﬁts, too.
Other researchers can now use our formalization as a ba-
sis for mechanizing results about authorization logics. And
from the formalization of the FOCAL proof system in Coq,
we could next extract a veriﬁed theorem checker. It would
input a proof of a FOCAL formula, expressed in the FO-
CAL proof system, and output whether the proof is correct.
Coq would verify that the checker correctly implements the
FOCAL proof system. After FOCAL is upgraded to handle
all of NAL’s features, the resulting theorem checker could
replace the current Nexus [45] theorem checker, which is im-
plemented in C. A veriﬁed theorem checker would arguably
be more trustworthy than the C implementation, thus in-
creasing the trustworthiness of the operating system.

Our goal was to increase the trustworthiness of authoriza-
tion logics, hence our concentration on soundness results.
Another worthwhile goal would to be increase the utility of
authorization logics, and toward that end we could inves-
tigate the completeness of FOCAL: are all valid formulas
provable? A few authorization logics—ICL [19], DTL0 [18],
and BLsf [22]—do have completeness results for Kripke se-
mantics; however, none of those is immediately applicable
to FOCAL.20 We leave adaptation of them as future work.

Acknowledgments
Fred B. Schneider consulted on the design of the proof sys-
tem and the Kripke semantics, and he suggested the idea of
proving an equivalence between belief and Kripke semantics.
We thank him, Mart´ın Abadi, Deepak Garg, Joe Halpern,
Dexter Kozen, Colin Stirling, and Kevin Walsh for discus-
sions related to this work. We also thank Adam Chlipala,
Kristopher Micinski, and the coq-club mailing list for as-
sistance with Coq. The anonymous reviewers of CSF 2013
and CCS 2013 provided invaluable feedback. The Kripke se-
mantics of FOCAL was created while Clarkson was a post-
doctoral researcher at Cornell. This work was supported in
part by AFOSR grants F9550-06-0019, FA9550-11-1-0137,
and FA9550-12-1-0334, NSF grants 0430161, 0964409, and
CCF-0424422 (TRUST), ONR grants N00014-01-1-0968 and
N00014-09-1-0652, and a grant from Microsoft.

8. REFERENCES
[1] M. Abadi. Logic in access control. In Proc. IEEE

Symposium on Logic in Computer Science (LICS),
pages 228–233, 2003.

[2] M. Abadi. Access control in a core calculus of

dependency. Electronic Notes in Theoretical Computer
Science, 172:5–31, Apr. 2007.

20ICL uses a lax logic semantics that is incompatible with
FOCAL’s deﬁnition of says. DTL0 uses a Kripke semantics
with invisible and fallible worlds, and it omits the speaksfor
connective. And BLsf encodes speaksfor as a ﬁrst-order rela-
tion, rather than deﬁning it with accessibility relations, and
it does not provide a weak speaksfor semantics.

[3] M. Abadi. Variations in access control logic. In Proc.

Conference on Deontic Logic in Computer Science
(DEON), pages 96–109, 2008.

[4] M. Abadi, M. Burrows, B. Lampson, and G. Plotkin.

A calculus for access control in distributed systems.
ACM Transactions on Programming Languages and
Systems, 15(4):706–734, Sept. 1993.

[5] A. W. Appel and E. W. Felten. Proof-carrying

authentication. In Proc. ACM Conference on
Computer and Communications Security (CCS), pages
52–62, 1999.

[6] L. Bauer, S. Garriss, J. M. McCune, M. K. Reiter,

J. Rouse, and P. Rutenbar. Device-enabled
authorization in the Grey system. In Proc.
Information Security Conference (ISC), pages
431–445, 2005.

[7] M. Y. Becker, C. Fournet, and A. D. Gordon. SecPAL:
Design and semantics of a decentralized authorization
language. Journal of Computer Security,
18(4):619–665, 2010.

[8] M. Y. Becker and P. Sewell. Cassandra: Distributed

access control policies with tunable expressiveness. In
Proc. IEEE Workshop on Policies for Distributed
Systems and Networks (POLICY), pages 159–168,
2004.

[9] J. G. Cederquist, R. Corin, M. A. C. Dekker,

S. Etalle, J. I. den Hartog, and G. Lenzini.
Audit-based compliance control. Int’l Journal of
Information Security, 6(2–3):133–151, 2007.

[10] P. Chapin, C. Skalka, and X. S. Wang. Authorization

in trust management: Features and foundations. ACM
Computing Surveys, 40(3):1–48, 2008.

[11] A. Cirillo, R. Jagadeesan, C. Pitcher, and J. Riely. Do

As I SaY! Programmatic access control with explicit
identities. In Proc. IEEE Computer Security
Foundations Symposium (CSF), pages 16–30, 2007.

[12] J. DeTreville. Binder, a logic-based security language.

In IEEE Symposium on Security and Privacy, pages
105–113, 2002.

[13] R. A. Eberle. A logic of believing, knowing and

inferring. Synthese, 26:356–382, 1974.

[14] W. B. Ewald. Intuitionistic tense and modal logic.

Journal of Symbolic Logic, 51(1):166–179, 1986.

[15] R. Fagin, J. Y. Halpern, Y. Moses, and M. Y. Vardi.
Reasoning About Knowledge. MIT Press, Cambridge,
Massachusetts, 1995.

[16] G. Fischer Servi. Semantics for a class of intuitionistic

modal calculi. In M. L. D. Chiara, editor, Italian
Studies in the Philosophy of Science, pages 59–72. D.
Riedel Publishing Company, Dordrecht, Holland, 1981.

[17] C. Fournet, A. D. Gordon, and S. Maﬀeis. A type

discipline for authorization policies. In Proc. European
Symposium on Programming (ESOP), pages 141–156,
2005.

[18] D. Garg. Principal-centric reasoning in constructive

authorization logic. In Workshop on Intuitionistic
Modal Logic and Applications (IMLA), 2008.

[19] D. Garg and M. Abadi. A modal deconstruction of

access control logics. In Proc. Conference on
Foundations of Software Science and Computational
Structures (FOSSACS), pages 216–230, 2008.

570[20] D. Garg and F. Pfenning. Non-interference in

[37] R. Moore and G. Hendrix. Computational models of

constructive authorization logic. In Proc. IEEE
Computer Security Foundations Workshop (CSFW),
pages 283–296, 2006.

[21] D. Garg and F. Pfenning. Stateful authorization logic:
Proof theory and a case study. In Proc. Conference on
Security and Trust Management (STM), pages
210–225, 2010.

[22] V. Genovese, D. Garg, and D. Rispoli. Labeled

sequent calculi for access control logics:
Countermodels, saturation and abduction. In Proc.
IEEE Computer Security Foundations Symposium
(CSF), pages 139–153, 2012.

[23] Y. Gurevich and I. Neeman. DKAL:

Distributed-knowledge authorization language. In
Proc. IEEE Computer Security Foundations
Symposium (CSF), pages 149–162, 2008.

[24] R. Hakli and S. Negri. Does the deduction theorem

fail for modal logic? Synthese, 187(3):849–867, 2012.

[25] J. Hintikka. Knowledge and Belief. Cornell University

Press, Ithaca, New York, 1962.

[26] J. Howell. Naming and Sharing Resources across
Administrative Domains. PhD thesis, Dartmouth
College, 2000.

[27] G. E. Hughes and M. J. Cresswell. A New

Introduction to Modal Logic. Routledge, London, 1996.
[28] L. Jia, J. A. Vaughan, K. Mazurak, J. Zhao, L. Zarko,

J. Schorr, and S. Zdancewic. AURA: A programming
language for authorization and audit. In Proc. ACM
Int’l Conference on Functional Programming (ICFP),
pages 27–38, 2008.

[29] T. Jim. SD3: A trust management system with

certiﬁed evaluation. In IEEE Symposium on Security
and Privacy, pages 106–115, 2001.

[30] K. Konolige. A Deduction Model of Belief. Morgan

Kaufmann, Los Altos, California, 1986.

[31] S. Kripke. A semantical analysis of modal logic I:
Normal modal propositional calculi. Zeitschrift f¨ur
Mathematische Logik und Grundlagen der
Mathematik, 9:67–96, 1963. Announced in Journal of
Symbolic Logic, 24:323, 1959.

[32] B. Lampson, M. Abadi, M. Burrows, and E. Wobber.

Authentication in distributed systems: Theory and
practice. ACM Transactions on Computer Systems,
10(4):265–310, Nov. 1992.

beliefs and the semantics of belief structures.
Technical Note 187, SRI International, 1979.

[38] S. Negri and J. von Plato. Sequent calculus in natural

deduction style. Journal of Symbolic Logic,
66:1803–1816, 2001.

[39] R. Parikh. Knowledge and the problem of logical

omniscience. In Proc. Int’l Symposium on
Methodologies for Intelligent Systems (ISMIS), pages
432–439, 1987.

[40] A. Pimlott and O. Kiselyov. Soutei, a logic-based

trust-management system. In Proc. Functional and
Logic Programming Symposium (FLOPS), pages
130–145, 2006.

[41] G. Plotkin and C. Stirling. A framework for

intuitionistic modal logics. In Proc. Conference on
Theoretical Aspects of Reasoning about Knowledge
(TARK), pages 399–406, 1986.

[42] J. Polakow and C. Skalka. Specifying distributed trust

management in LolliMon. In ACM Workshop on
Programming Languages and Analysis for Security
(PLAS), 2006.

[43] F. B. Schneider, K. Walsh, and E. G. Sirer. Nexus

authorization logic (NAL): Design rationale and
applications. ACM Transactions on Information and
System Security, 14(1):8:1–28, June 2011.

[44] A. K. Simpson. The Proof Theory and Semantics of
Intuitionistic Modal Logic. PhD thesis, University of
Edinburgh, 1994.

[45] E. G. Sirer, W. de Bruijn, P. Reynolds, A. Shieh,

K. Walsh, D. Williams, and F. B. Schneider. Logical
attestation: An authorization architecture for
trustworthy computing. In Proc. ACM Symposium on
Operating Systems Principles (SOSP), pages 249–264,
2011.

[46] M. H. Sørensen and P. Urzyczyn. Lectures on the

Curry-Howard Isomorphism, volume 149 of Studies in
Logic and the Foundations of Mathematics. Elsevier,
Amsterdam, 2006.

[47] R. Stalnaker. The problem of logical omniscience, I.

Synthese, 89:425–440, 1991.

[48] A. S. Troelstra and D. van Dalen. Constructivism in

Mathematics: Volume I, volume 121 of Studies in
Logic and the Foundations of Mathematics. Elsevier,
Amsterdam, 1988.

[33] C. Lesniewski-Laas, B. Ford, J. Strauss, R. Morris,

[49] A. S. Troelstra and D. van Dalen. Constructivism in

and M. F. Kaashoek. Alpaca: extensible authorization
for distributed services. In Proc. ACM Conference on
Computer and Communications Security (CCS), pages
432–444, 2007.

Mathematics: Volume II, volume 123 of Studies in
Logic and the Foundations of Mathematics. Elsevier,
Amsterdam, 1988.

[50] D. van Dalen. Logic and Structure. Springer, Berlin,

[34] N. Li, B. N. Grosof, and J. Feigenbaum. A practically
implementable and tractable delegation logic. In IEEE
Symposium on Security and Privacy, pages 27–42,
2000.

[35] N. Li, J. C. Mitchell, and W. H. Winsborough. Design
of a role-based trust-management framework. In IEEE
Symposium on Security and Privacy, pages 114–130,
2002.

[36] E. Moggi. Notions of computation and monads.

Journal of Information and Computation, 93(1):55–92,
July 1991.

fourth edition, 2004.

[51] D. Wijesekera. Constructive modal logics I. Annals of

Pure and Applied Logic, 50(3):271–301, Dec. 1990.

[52] E. Wobber, M. Abadi, M. Burrows, and B. Lampson.

Authentication in the Taos operating system. ACM
Transactions on Computer Systems, 12(1):3–32, Feb.
1994.

571APPENDIX: PROOFS
Proposition 1.
If K, w, v |= φ and w ≤ w(cid:48) then K, w(cid:48), v |= φ.

Proof. By structural induction on φ. This proof has been
mechanized in Coq.
Theorem 1.
For all K, w, v, and φ,
k2b(K), w, v |= φ.
Proof. First, we show the forward direction: K, w, v |= φ
implies k2b(K), w, v |= φ. All of the cases except says and
speaksfor are straightforward, because those are the only two
cases where the interpretation of formulas diﬀers in the two
semantics.

it holds that K, w, v |= φ iﬀ

• Case φ = τ says ψ. Suppose K, w, v |= τ says ψ. By the
deﬁnition of k2b, formula ψ ∈ ω(w, µ(τ ), v). By the be-
lief semantics of says, it must hold that k2b(K), w, v |=
τ says ψ.

• Case φ = τ speaksfor τ(cid:48). Assume K, w, v |= τ speaksfor
τ(cid:48). We need to show that, for all w(cid:48) ≥ w, it holds that
ω(w(cid:48), µ(τ ), v) ⊆ ω(w(cid:48), µ(τ(cid:48)), v). So let w(cid:48) and ψ be
arbitrary such that w(cid:48) ≥ w and ψ ∈ ω(w(cid:48), µ(τ ), v), and
we’ll show that ψ ∈ ω(w(cid:48), µ(τ(cid:48)), v). By the deﬁnition
of k2b, it holds that K, w(cid:48), v |= τ says ψ. Note that, by
proposition 1 and our original assumption, we have that
K, w(cid:48), v |= τ speaksfor τ(cid:48). From those last two facts,
and from the Kripke semantics of says and speaksfor, it
follows that K, w(cid:48), v |= τ(cid:48) says ψ. By the deﬁnition of
k2b, it therefore holds that ψ ∈ ω(w(cid:48), µ(τ(cid:48)), v).

Second, we show the backward direction: K, w, v |= φ is
implied by k2b(K), w, v |= φ. Again, all of the cases except
says and speaksfor are straightforward, because those are the
only two cases where the interpretation of formulas diﬀers
in the two semantics.

• Case φ = τ says ψ. Suppose k2b(K), w, v |= τ says
ψ. By the belief semantics of says, we have that ψ ∈
ω(w, µ(τ ), v). By the deﬁnition of k2b, it holds that
K, w, v |= τ says ψ.

• Case φ = τ speaksfor τ(cid:48). Assume k2b(K), w, v |=
τ speaksfor τ(cid:48). By the belief semantics of speaksfor, we
have that, for all w(cid:48) ≥ w, it holds that ω(w(cid:48), µ(τ ), v) ⊆
ω(w(cid:48), µ(τ(cid:48)), v). Let w(cid:48) be w. Then ω(w, µ(τ ), v) ⊆
ω(w, µ(τ(cid:48)), v). By the deﬁnitions of k2b and subset,
it follows that, for all φ, if K, w, v |= τ says φ then
K, w, v |= τ(cid:48) says φ. By WSF, we therefore have that
K, w, v |= τ speaksfor τ(cid:48).

Proposition 2.
For all well-formed modal models K, belief model k2b(K) is
well-formed.

Proof. Let B = k2b(K). For B to be well-formed it must
satisfy several conditions, which were deﬁned in §2. We now
show that these hold for any such B constructed by k2b.

1. Worldview Monotonicity. Assume w ≤ w(cid:48) and φ ∈
ω(w, p, v). By the latter assumption and the deﬁni-
tion of k2b, we have that K, w, v |= ˆp says φ. From
proposition 1, it follows that K, w(cid:48), v |= ˆp says φ. By

the deﬁnition of k2b, it then holds that φ ∈ ω(w(cid:48), p, v).
Therefore ω(w, p, v) ⊆ ω(w(cid:48), p, v).
2. Worldview Equality. Assume p

= p(cid:48). Then by Ac-
.
cessibility Equality, ≤p equals ≤p(cid:48) . By the Kripke se-
mantics of says, it follows that K, w, v |= p says φ iﬀ
K, w, v |= p(cid:48) says φ. By the deﬁnition of k2b, therefore,
ω(w, p, v) = ω(w, p(cid:48), v).

3. Worldview Closure. Assume Γ ⊆ ω(w, p, v) and Γ |= φ,
that is, φ is a logical consequence of Γ in belief struc-
ture B. By the deﬁnition of k2b, we have ω(w, p, v) =
{φ | K, w, v |= ˆp says φ}. So for all ψ ∈ Γ, it holds
that K, w, v |= ˆp says ψ. By the Kripke semantics
it follows that for all w(cid:48) and w(cid:48)(cid:48) such that
of says,
w ≤ w(cid:48) ≤p w(cid:48)(cid:48), it holds that K, w(cid:48)(cid:48), v |= ψ. Thus
K, w(cid:48)(cid:48), v |= Γ. So k2b(K), w(cid:48)(cid:48), v |= Γ by theorem 1.
By our initial assumption that Γ |= φ, it follows that
k2b(K), w(cid:48)(cid:48), v |= φ. Again applying theorem 1, we have
that K, w(cid:48)(cid:48), v |= φ. By the Kripke semantics of says,
it follows that K, w, v |= ˆp says φ. Therefore, by the
deﬁnition of k2b, we have φ ∈ ω(w, p, v).

4. Says Transparency. We prove the “iﬀ” by proving both
directions independently.
(⇒) Assume φ ∈ ω(w, p, v). By the deﬁnition of k2b, it
holds that K, w, v |= ˆp says φ. From IT and F2, it fol-
lows that K, w, v |= ˆp says (ˆp says φ). By the deﬁnition
of k2b, therefore, (ˆp says φ) ∈ ω(w, p, v).
(⇐) Assume (ˆp says φ) ∈ ω(w, p, v). By the deﬁnition
of k2b, it holds that K, w, v |= ˆp says (ˆp says φ). From
ID, it follows that K, w, v |= ˆp says φ. By the deﬁnition
of k2b, therefore, φ ∈ ω(w, p, v).

5. Belief Hand-oﬀ. We actually prove a stronger result—
an “iﬀ” rather than just an “if”. By the deﬁnitions of
subset and k2b, we have that ω(w, p, v) ⊆ ω(w, q, v)
holds iﬀ for all φ, if K, w, v |= ˆp says φ then K, w, v |=
ˆq says φ. By WSF, that holds iﬀ K, w, v |= ˆp speaksfor
ˆq. By the fact below, that holds iﬀ K, w, v |= ˆq says
(ˆp speaksfor ˆq). By the deﬁnition of k2b, that holds iﬀ
ˆq speaksfor ˆp ∈ ω(w, q, v).
Fact: in the Kripke semantics, |= ˆq says (ˆp speaksfor ˆq)
⇐⇒ ˆp speaksfor ˆq. The proof of that fact has been
mechanized in Coq.

Theorem 2.
If Γ (cid:96) φ and B, w, v |= Γ, then B, w, v |= φ.
Proof. By induction on the derivation of Γ (cid:96) φ. This proof
has been mechanized in Coq.
Theorem 3.
If Γ (cid:96) φ and K, w, v |= Γ, then K, w, v |= φ.
Proof. By induction on the derivation of Γ (cid:96) φ. This proof
has been mechanized in Coq.
Proposition 3.
If B, w, v |= φ and w ≤ w(cid:48) then B, w(cid:48), v |= φ.

Proof. By structural induction on φ. This proof has been
mechanized in Coq.

572