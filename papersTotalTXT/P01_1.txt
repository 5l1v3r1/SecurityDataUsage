Plaintext-Recovery Attacks Against Datagram TLS

Nadhem Alfardan and Kenneth Paterson

Information Security Group

Royal Holloway, University of London

6th Feb 2012

Results
Introduction to DTLS
Previous Attacks
Padding Oracle Realisation Against OpenSSL
Attacking the GnuTLS Implementation of DTLS
Lessons

Contents

1 Results

2 Introduction to DTLS

4 Padding Oracle Realisation

Against OpenSSL

5 Attacking the GnuTLS
Implementation of DTLS

3 Previous Attacks

6 Lessons

Nadhem Alfardan and Kenneth Paterson

Plaintext-Recovery Attacks Against Datagram TLS

Results
Introduction to DTLS
Previous Attacks
Padding Oracle Realisation Against OpenSSL
Attacking the GnuTLS Implementation of DTLS
Lessons

Results

1 Results

2 Introduction to DTLS

4 Padding Oracle Realisation

Against OpenSSL

5 Attacking the GnuTLS
Implementation of DTLS

3 Previous Attacks

6 Lessons

Nadhem Alfardan and Kenneth Paterson

Plaintext-Recovery Attacks Against Datagram TLS

Results
Introduction to DTLS
Previous Attacks
Padding Oracle Realisation Against OpenSSL
Attacking the GnuTLS Implementation of DTLS
Lessons

Plaintext-recovery attacks through which we were able to:

Decrypt arbitrary amount of ciphertext in the case of the
OpenSSL implementation of DTLS.
Decrypt the four most signiﬁcant bits of the last byte in every
block in the case of the GnuTLS implementation of DTLS.

Nadhem Alfardan and Kenneth Paterson

Plaintext-Recovery Attacks Against Datagram TLS

Results
Introduction to DTLS
Previous Attacks
Padding Oracle Realisation Against OpenSSL
Attacking the GnuTLS Implementation of DTLS
Lessons

Background
DTLS versus TLS

Introduction to DTLS

1 Results

2 Introduction to DTLS

Background
DTLS versus TLS

3 Previous Attacks

4 Padding Oracle Realisation

Against OpenSSL

5 Attacking the GnuTLS
Implementation of DTLS

6 Lessons

Nadhem Alfardan and Kenneth Paterson

Plaintext-Recovery Attacks Against Datagram TLS

Results
Introduction to DTLS
Previous Attacks
Padding Oracle Realisation Against OpenSSL
Attacking the GnuTLS Implementation of DTLS
Lessons

Background
DTLS versus TLS

Datagram Transport Layer Security (DTLS) was ﬁrst
introduced in NDSS 2004.
IETF assigned RFC 4347 to DTLS 1.0 in 2006. RFC 6347
updates RFC 4347 and was published in Jan 2012 under
DTLS 1.2.
By design, DTLS 1.0 is very similar to TLS 1.1. RFC 4347
presents only the changes to TLS 1.1 and refers to RFC 4346
for the rest of the speciﬁcation.
A number of RFC documents have been published on DTLS.
DTLS is used in a number of implementations.

Nadhem Alfardan and Kenneth Paterson

Plaintext-Recovery Attacks Against Datagram TLS

Results
Introduction to DTLS
Previous Attacks
Padding Oracle Realisation Against OpenSSL
Attacking the GnuTLS Implementation of DTLS
Lessons

Background
DTLS versus TLS

DTLS runs over an unreliable protocol such as Unreliable
Datagram Protocol (UDP).

Handshake 

Protocol 

Change 

Cipher Spec 

Alert 

Protocol 

Applications 

Record Protocol 

Reliable Transport Protocol 

Handshake 

Protocol 

Change 

Cipher Spec 

Alert 

Protocol 

Applications 

Record Protocol 

Unreliable Transport Protocol 

TLS!

DTLS!

Nadhem Alfardan and Kenneth Paterson

Plaintext-Recovery Attacks Against Datagram TLS

Results
Introduction to DTLS
Previous Attacks
Padding Oracle Realisation Against OpenSSL
Attacking the GnuTLS Implementation of DTLS
Lessons

Background
DTLS versus TLS

Changes to TLS 1.1 also include:

Implementations of DTLS should silently discard data with
bad MACs or padding. No error messages are generated in
both cases.
In DTLS, connections are not terminated in the case of an
error.
In DTLS, fragmentation of record messages is not permitted.
DTLS optionally supports record replay protection.
There are other changes, but they are not of relevance.

Nadhem Alfardan and Kenneth Paterson

Plaintext-Recovery Attacks Against Datagram TLS

Results
Introduction to DTLS
Previous Attacks
Padding Oracle Realisation Against OpenSSL
Attacking the GnuTLS Implementation of DTLS
Lessons

Vaudenay’s Padding Oracle
Canvel et al. Work

Previous Attacks

1 Results

2 Introduction to DTLS

4 Padding Oracle Realisation

Against OpenSSL

5 Attacking the GnuTLS
Implementation of DTLS

3 Previous Attacks

Vaudenay’s Padding Oracle
Canvel et al. Work

6 Lessons

Nadhem Alfardan and Kenneth Paterson

Plaintext-Recovery Attacks Against Datagram TLS

Results
Introduction to DTLS
Previous Attacks
Padding Oracle Realisation Against OpenSSL
Attacking the GnuTLS Implementation of DTLS
Lessons

Vaudenay’s padding oracle, (PO)
applies to CBC-mode encryption.
PO returns VALID if the padding
is correct and INVALID otherwise.

The realisation of this oracle relies
on the attacker having access to
TLS error messages;
decryption failed and
bad record mac which are
classiﬁed as fatal.

In the case of TLS 1.0, both of
these error messages are encrypted.

Connections are terminated
immediately whenever such errors
are encountered.

Vaudenay’s Padding Oracle
Canvel et al. Work

Algorithm 1: Decrypting a block
using a padding oracle PO for TL-
S/DTLS.
Data: C∗t−1, C∗t
Result: P∗t = Dk (C∗t ) ⊕ C∗t−1
Let R be a random b-byte block.;
for i = 0 to b − 1 do

for byte = 0 to 255 do

R[i] = byte;
C = R||C∗t ;
if PO(C ) = VALID then

P[i] = R[i] ⊕ C∗t−1[i] ⊕ i;

Break;

for j = 0 to i do

R[j] = R[j] ⊕ (i) ⊕ (i + 1);

Output P;

Nadhem Alfardan and Kenneth Paterson

Plaintext-Recovery Attacks Against Datagram TLS

Results
Introduction to DTLS
Previous Attacks
Padding Oracle Realisation Against OpenSSL
Attacking the GnuTLS Implementation of DTLS
Lessons

Vaudenay’s Padding Oracle
Canvel et al. Work

The work of Canvel et al. exploits the fact that processing a
message with valid padding may take longer than the
processing of a message with invalid padding:

The timing diﬀerence comes from the MAC veriﬁcation
process.

Canvel et al. were able to extract ﬁxed plaintext in the form
of TLS-encrypted passwords. Connections had to be
re-established after being terminated, making the attack
diﬃcult to implement.
Countermeasures were introduced in TLS 1.1:

One of them is to perform MAC veriﬁcation on packets that
fail the padding check.

Nadhem Alfardan and Kenneth Paterson

Plaintext-Recovery Attacks Against Datagram TLS

Results
Introduction to DTLS
Previous Attacks
Padding Oracle Realisation Against OpenSSL
Attacking the GnuTLS Implementation of DTLS
Lessons

OpenSSL Implementation of DTLS
Timing and Packet Processing
Results

Padding Oracle Realisation Against OpenSSL

1 Results

2 Introduction to DTLS

3 Previous Attacks

OpenSSL Implementation
of DTLS
Timing and Packet
Processing
Results

5 Attacking the GnuTLS
Implementation of DTLS

4 Padding Oracle Realisation

Against OpenSSL

6 Lessons

Nadhem Alfardan and Kenneth Paterson

Plaintext-Recovery Attacks Against Datagram TLS

Results
Introduction to DTLS
Previous Attacks
Padding Oracle Realisation Against OpenSSL
Attacking the GnuTLS Implementation of DTLS
Lessons

OpenSSL Implementation of DTLS
Timing and Packet Processing
Results

DTLS Packets with invalid padding
are silently discarded and MAC
veriﬁcation is not performed. No
error messages are generated when
the padding error is encountered.

This protects the system from
the attack introduced by
Canvel et al.

We constructed a new realisation
for the padding oracle to exploit
the OpenSSL implementation of
DTLS.

Algorithm 2: Padding Oracle for
OpenSSL implementation of DTLS
Data: C
Result: VALID or INVALID
for q = 1 to m do

RTTq = Timer(C );

RTT =Mean(RTT1, RTT2, ..., RTTm);
if RTT ≥ T then
return VALID;
else

return INVALID;

Timer(C )
Set Ts = current time;
Send n copies of PC , a DTLS packet containing C , to
the targeted system;
Send a Heartbeat request packet to the targeted system;
Set Te = time when Heartbeat response packet is seen;
return (Te − Ts )

Nadhem Alfardan and Kenneth Paterson

Plaintext-Recovery Attacks Against Datagram TLS

Results
Introduction to DTLS
Previous Attacks
Padding Oracle Realisation Against OpenSSL
Attacking the GnuTLS Implementation of DTLS
Lessons

OpenSSL Implementation of DTLS
Timing and Packet Processing
Results

We were able to use Heartbeat messages to compensate the
lack of error messages. The advisory sends a Heartbeat
request message right after the attack message(s).

The advisory calculates the time from sending the ﬁrst
message to receiving the Heartbeat response message.

To amplify the timing diﬀerence we used a train of packets.

Nadhem Alfardan and Kenneth Paterson

Plaintext-Recovery Attacks Against Datagram TLS

Results
Introduction to DTLS
Previous Attacks
Padding Oracle Realisation Against OpenSSL
Attacking the GnuTLS Implementation of DTLS
Lessons

Figure 11. Time-line for a train with n = 2 (not to scale).

OpenSSL Implementation of DTLS
Timing and Packet Processing
Results

packet 1

t1,0

t1,1

t1,2

t1,3

packet 2

t2,0

t2,1

t2,2

t2,3 Heartbeat Request

Heartbeat Response

Tf

Te

packet 1

t1,0

t1,1

t1,3

packet 2

t2,0

t2,1

t2,3 Heartbeat Request

Heartbeat Response

Tf

Te

Time-line for packet train
with valid padding

Time-line for packet train
with invalid padding

Ts

Ts

Nadhem Alfardan and Kenneth Paterson

Plaintext-Recovery Attacks Against Datagram TLS

Results
Introduction to DTLS
Previous Attacks
Padding Oracle Realisation Against OpenSSL
Attacking the GnuTLS Implementation of DTLS
Lessons

OpenSSL Implementation of DTLS
Timing and Packet Processing
Results

0.30

0.25

0.20

0.15

0.10

0.05

0.20

0.15

0.10

0.05

0.08

0.06

0.04

0.02

0.06

0.05

0.04

0.03

0.02

0.01

540

560

580

600

620

640

1240

1260

1280

1300

1320

1340

1660

1680

1700

1720

(a) l = 256
(c) l = 1456
Figure: 3DES – PDFs for trains of 10 packets and varying the DTLS payload length, l.

(b) l = 1024

0.15

0.10

0.05

0.12

0.10

0.08

0.06

0.04

0.02

520

530

540

550

560

570

580

1210

1215

1220

1225

1230

1580

1590

1600

1610

1620

1630

(a) l = 256

(b) l = 1024

(c) l = 1456

Figure: AES-256 – PDFs for trains of 10 packets and varying the DTLS payload length, l.

Nadhem Alfardan and Kenneth Paterson

Plaintext-Recovery Attacks Against Datagram TLS

Results
Introduction to DTLS
Previous Attacks
Padding Oracle Realisation Against OpenSSL
Attacking the GnuTLS Implementation of DTLS
Lessons

OpenSSL Implementation of DTLS
Timing and Packet Processing
Results

n and l

1
2
5
10
20
50

128
0.99
0.99
0.99
0.98
0.99
0.99

160
0.99
1.00
1.00
1.00
0.99
0.99

192
1.00
0.99
1.00
0.99
1.00
1.00

224
0.99
1.00
1.00
1.00
1.00
1.00

256
1.00
1.00
1.00
1.00
1.00
0.98

288
0.99
0.98
0.98
0.99
0.99
0.95

Table: Success probabilities per byte for AES, for various attack
parameters (with anti-replay disabled).

n is the train size and l is the DTLS payload size in bytes.

Nadhem Alfardan and Kenneth Paterson

Plaintext-Recovery Attacks Against Datagram TLS

Results
Introduction to DTLS
Previous Attacks
Padding Oracle Realisation Against OpenSSL
Attacking the GnuTLS Implementation of DTLS
Lessons

Attacking the GnuTLS Implementation of DTLS

1 Results

2 Introduction to DTLS

4 Padding Oracle Realisation

Against OpenSSL

5 Attacking the GnuTLS
Implementation of DTLS

3 Previous Attacks

6 Lessons

Nadhem Alfardan and Kenneth Paterson

Plaintext-Recovery Attacks Against Datagram TLS

Results
Introduction to DTLS
Previous Attacks
Padding Oracle Realisation Against OpenSSL
Attacking the GnuTLS Implementation of DTLS
Lessons

Unlike OpenSSL, GnuTLS share the same
code for TLS and DTLS.

GnuTLS implements the ﬁx introduced in
TLS 1.1 and hence is not vulnerable to
our attack against OpenSSL.

We were able to recover the four most
signiﬁcant bits of the last byte in each
ciphertext block by exploiting a diﬀerent
issue in the code and using the same
technique.

0.014

0.012

0.010

0.008

0.006

0.004

0.002

100

200

300

400

Figure: PDFs for AES-256 with
HMAC-SHA256, l = 176, n = 5, based
on 1000 trials, with outliers removed.

Nadhem Alfardan and Kenneth Paterson

Plaintext-Recovery Attacks Against Datagram TLS

Results
Introduction to DTLS
Previous Attacks
Padding Oracle Realisation Against OpenSSL
Attacking the GnuTLS Implementation of DTLS
Lessons

Fixes

On 4th of Jan 2012, OpenSSL issued releases 1.0.0f and
0.9.8s which included a ﬁx.
On 6th of Jan 2012, GnuTLS issued release 3.0.11 which
included a ﬁx.

Nadhem Alfardan and Kenneth Paterson

Plaintext-Recovery Attacks Against Datagram TLS

Results
Introduction to DTLS
Previous Attacks
Padding Oracle Realisation Against OpenSSL
Attacking the GnuTLS Implementation of DTLS
Lessons

Lessons

1 Results

2 Introduction to DTLS

4 Padding Oracle Realisation

Against OpenSSL

5 Attacking the GnuTLS
Implementation of DTLS

3 Previous Attacks

6 Lessons

Nadhem Alfardan and Kenneth Paterson

Plaintext-Recovery Attacks Against Datagram TLS

Results
Introduction to DTLS
Previous Attacks
Padding Oracle Realisation Against OpenSSL
Attacking the GnuTLS Implementation of DTLS
Lessons

Lack of error messages does not necessarily mean that the
system is not vulnerable.
Although the GnuTLS implementation of DTLS follows the
standard, we were able to deploy similar techniques to attack
the implementation and recover a limited amount plaintext.
Features of lower layer protocols can have a major inﬂuence
on security at higher layers.

Nadhem Alfardan and Kenneth Paterson

Plaintext-Recovery Attacks Against Datagram TLS

