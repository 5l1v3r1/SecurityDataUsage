Inferring Complex AS Relationships

Vasileios Giotsas
CAIDA / UC San Diego
vgiotsas@caida.org

Matthew Luckie

CAIDA / UC San Diego

mjl@caida.org

kc claffy

CAIDA / UC San Diego

kc@caida.org

Bradley Huffaker

CAIDA / UC San Diego
bradley@caida.org

ABSTRACT
The traditional approach of modeling relationships between
ASes abstracts relationship types into three broad categories:
transit, peering, and sibling. More complicated conﬁgura-
tions exist, and understanding them may advance our knowl-
edge of Internet economics and improve models of routing.
We use BGP, traceroute, and geolocation data to extend
CAIDA’s AS relationship inference algorithm to infer two
types of complex relationships: hybrid relationships, where
two ASes have diﬀerent relationships at diﬀerent intercon-
nection points, and partial transit relationships, which re-
strict the scope of a customer relationship to the provider’s
peers and customers. Using this new algorithm, we ﬁnd 4.5%
of the 90,272 provider-customer relationships observed in
March 2014 were complex, including 1,071 hybrid relation-
ships and 2,955 partial-transit relationships. Because most
peering relationships are invisible, we believe these numbers
are lower bounds. We used feedback from operators, and
relationships encoded in BGP communities and RPSL, to
validate 20% and 6.9% of our partial transit and hybrid in-
ferences, respectively, and found our inferences have 92.9%
and 97.0% positive predictive values. Hybrid relationships
are not only established between large transit providers; in
57% of the inferred hybrid transit/peering relationships the
customer had a customer cone of fewer than 5 ASes.

Categories and Subject Descriptors
C.2.5 [Local and Wide-Area Networks]: Internet; C.2.1
[Network Architecture and Design]: Network topology

Keywords
AS relationships; complex routing policies

1.

INTRODUCTION

Analysis and modeling of the Internet’s AS topology re-
quires accurate knowledge of AS relationships, which reﬂect
often private negotiations between ASes. The details of

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
IMC’14, November 5–7, 2014, Vancouver, BC, Canada.
Copyright 2014 ACM 978-1-4503-3213-2/14/11 ...$15.00.
http://dx.doi.org/10.1145/2663716.2663743.

these relationships are not comprehensively published any-
where, and many of them are subject to non-disclosure agree-
ments, motivating many researchers to develop algorithms
to heuristically infer AS relationships based on AS path in-
formation available in public BGP data [7–10, 12, 15, 22–24,
30, 32, 33]. To simplify the development of inference heuris-
tics, researchers traditionally abstracted relationships into
three (and sometimes only the ﬁrst two) classes: provider-
customer (p2c), peering (p2p) and sibling (s2s).
In a p2c
or transit relationship, a customer buys access to achieve
global reachability. In a p2p relationship, two ASes share
access to their networks and their customers’ networks. In
an s2s relationship, two ASes under common ownership may
provide mutual transit to each other.

This oversimpliﬁcation ignores more complex relationships
and may introduce artifacts into the study of inter-domain
routing [31], such as spurious relationship cycles [11], arti-
ﬁcial policy violations [24, 30], and generally inaccurate AS
path prediction [9,23]. These problems have inspired the de-
velopment of a relationship-agnostic AS topology model as
an alternative [25, 26]. While BGP is a preﬁx-based routing
protocol and AS relationships are a course-grained abstrac-
tion, operators themselves express their policies in terms of
AS relationships, and understanding classes of relationships
can help researchers predict routing decisions.

In this paper we propose an algorithm to infer the two
most common types of complex AS relationships: hybrid re-
lationships, where two ASes have diﬀerent relationships at
diﬀerent interconnection points [28] (e.g. p2c in one location
and p2p elsewhere), and partial transit relationships, which
restrict the scope of a p2c relationship to the provider’s peers
and customers (but not providers) [10,13,22,28,29]. We can
deﬁne these complex relationships as special cases of the
traditional p2c and p2p types, which allows us to leverage
CAIDA’s relationship inference algorithm instead of design-
ing an entirely new algorithm.

Section 2 provides an overview of Internet routing and re-
lated work. Section 3 describes the BGP, traceroute, and
geolocation data we used in this study, and presents our
methodology to infer complex AS relationships. Section 4
presents our inferences: 1,071 hybrid relationships and 2,955
partial transit relationships, used mostly by ASes with a
small customer cone. Our data suggests that IXPs facilitate
the establishment of hybrid relationships by stub ASes at di-
verse geographical locations. Using feedback from operators
and relationships encoded in BGP communities and RPSL,
we found that our hybrid and partial transit inferences had
positive predictive values of 92.9% and 97.0%, respectively.

23AS C

AS D

AS E

AS F

p1

p1

p1

p2
p1

p2

PoP1

p1

p2

AS B

PoP2

AS A

p1

AS X

AS Y

Y export p1 to X

AS X

AS Y

X provider of Y

AS X

AS Y

X and Y peers

Figure 1: Hybrid relationship between ASes A and
B at diﬀerent points of presence (PoPs). In P oP1, A
is a customer of B, while in P oP2 they are peers. B’s
export policy depends on the relationship between
the ASes at each P oP ; preﬁx p1 is announced to all
neighbors of B because A receives transit at P oP1,
while p2 is only announced to customers of B because
A receives peering at P oP2.

B

A

A

B

A

B

A

B

full transit (FT)

partial transit (PT)

peering (P)

provider

customer

customer

provider
customer

peer
partial transit

provider        customer     provider        customer
     peer         peer                  (partial transit)

Figure 2: Partial transit compared with traditional
relationship types. B’s export policy to A changes
based on B’s relationship to A, with routes from the
ﬁlled AS nodes exported to A in each scenario. In
a partial transit relationship with A, B exports only
customers and peers to A.

2. BACKGROUND

Interdomain routing is a collaborative eﬀort among ASes,
which interconnect and exchange routing information using
the BGP protocol. Many ASes negotiate contractual agree-
ments that impose technical restrictions on traﬃc exchange.
The export policies that derive from relationships between
ASes combined with traﬃc engineering largely deﬁne rout-
ing at the AS level. Unfortunately, operators are reluctant
to publish their AS relationships which are often conﬁden-
tial. For more than a decade, researchers have studied how
to infer the type of business relationships between networks
through the analysis of AS-level paths [7,10,12,15,22,23,32].
Gao’s seminal work [15] proposed a classiﬁcation into three
abstract relationship types; p2c, p2p, and s2s. Although
these classiﬁcations capture the majority of AS interconnec-
tions, more complicated relationships exist. Norton deﬁnes
two additional relationship types: hybrid and partial tran-
sit [28, 29]. Hybrid relationships arise when two ASes agree
to diﬀerent relationship types at diﬀerent inter-connection
points of presence (PoPs); typically, the ASes will be peers
in particular regions, but one AS will be a transit customer
of the other AS elsewhere. Figure 1 illustrates the routing
that results in such a relationship; B may advertise preﬁx p1

Type
Transit

Peering

Deﬁnition
An AS oﬀers another AS access to its
peers, customers, and providers.
Two ASes oﬀer access to their customer
routes to each other.

Partial transit An AS oﬀers another AS transit to its

Hybrid

peers and customers, but not providers.
An AS oﬀers another AS a combination
of full transit, partial transit, or peering
according to interconnection location.

Table 1: Relationship types that we inferred. This
paper focuses on methods to infer hybrid and partial
transit relationships.

to all of its neighbors, but B may only advertise p2 to its cus-
tomers. In some cases, B may only advertise p2 to customers
in the region served by P oP2. Partial transit relationships
arise when a provider sells access to its customers and peers
but not to its providers. Figure 2 compares the routing
diﬀerences between the traditional provider, peer, and cus-
tomer relationships and the partial transit relationship; in
the traditional customer relationship, A receives routes from
B’s customers, peers, and providers, but in the partial tran-
sit case A receives just customer and peer routes. Table 1
summarizes the four relationship types.

Using only conventional transit and peering relationships
to study the AS topology is problematic [31]. For exam-
ple, in 2005 Mao et al. concluded that complex relationships
may contribute to the inability to accurately predict AS-
level paths [23]; in 2013 Deng et al. [9] reached a similar con-
clusion. M¨uhlbauer et al. proposed a relationship-agnostic
AS topology model to capture complex BGP policies that
cannot be modeled based on the conventional relationship
abstraction [25, 26].

A survey of operators by Dimitropoulos et al. in 2007 [10]
conﬁrmed the existence of relationships that vary across
peering points and preﬁxes. In 2008, Faratin et al. suggested
that AS relationships will become increasingly complex be-
cause the growth of Content Distribution Networks (CDNs)
and eyeball networks change the perceptions of symmetry in
traﬃc delivery costs [13]. Yet, there is little work that tack-
les the complicated challenges of inferring complex relation-
ships, and little validation data available. In 2013, Neudor-
fer et al. proposed a method to infer complex relationships
by examining policy violations (unconventional export poli-
cies) using the conventional transit and peering deﬁnitions
at diﬀerent Points-of-Presence (PoPs) [27]. However, they
were only able to manually identify a single hybrid relation-
ship, illustrating the diﬃculties involved in the inference of
complex relationships.

In 2013, we presented and validated a new AS relation-
ship inference algorithm that also only inferred conventional
transit and peering relationships [22]. Our top-down ap-
proach began by inferring a Tier-1 clique, applied heuristics
to infer c2p links based primarily on how neighbors were
observed to export routes, and inferred the remainder to be
p2p. That algorithm inferred hybrid and partial transit re-
lationships as conventional transit relationships because at
least some routes from the neighbor AS were exported to
peers or providers. To account for the eﬀect of hybrid re-
lationships, we presented a new algorithm for inferring the
customer cone – the set of ASes that can be reached by

24an AS using its customer links. Previous customer cone
algorithms used a recursive model, inferring all customers
of downstream customers to be in an AS’s customer cone;
complex relationships and traﬃc engineering behavior can
distort such inferences. We addressed this limitation with
the provider/peer observed customer cone, where we com-
puted the customer cone of an AS using routes we observed
from providers and peers of the AS. Because B will not ex-
port routes received from the peering portion of a hybrid
relationship with customer C to provider A, we did not in-
clude these routes when computing the customer cone of A.
Similarly, because B will not export routes from a partial
transit customer C to provider A, we did not include these
routes when computing the customer cone of A.

3.

INFERENCE METHODOLOGY

Figure 3 shows a high-level overview of our process to
infer complex relationships. First, we infer conventional
transit and peering relationships and customer cones using
our IMC 2013 algorithm [22] and publicly available BGP
data. Because our IMC 2013 algorithm infers hybrid and
partial transit relationships as conventional transit relation-
ships, our new algorithm uses BGP data to infer per-preﬁx
export policy for all conventional transit relationships, re-
sulting in sets of partial transit and candidate hybrid re-
lationships. Then, we use traceroute and geolocation data
to infer if export policies of candidate hybrid relationships
diﬀer by geographic location. Our algorithm then classiﬁes
candidate hybrid relationships that have geographic charac-
teristics as hybrid, with speciﬁc export policy classiﬁcations
per geographic location.

3.1 Data

BGP data: We obtained routing information from BGP
table snapshots collected by Route Views (RV) [5] and RIPE
RIS (RIS) [4], which record BGP routing information by
peering with globally distributed ASes. For each RV and
RIS collector we downloaded one RIB ﬁle every ﬁve days for
March 2014; we retained only paths that were observed in
all ﬁles to reduce false positive complex relationship infer-
ences. We extracted three attributes from each BGP route:
the AS path, the preﬁx, and the communities string. We
discarded AS paths with symptoms of misconﬁguration or
poisoning, e.g., loops, unassigned ASes, and non-adjacent
Tier-1 ASes [22]. We also discarded preﬁxes longer than /24,
which many ASes do not route. We used path and preﬁx
attributes to identify partial transit and candidate hybrid
relationships. We used available communities strings as a
source of geographically-tagged interconnection points and
to validate our complex relationship inferences.

Traceroute data: To derive the geographical footprint of
AS relationships, we processed interface-level paths derived
from two sources of traceroute data to infer the PoP-level
AS connectivity. First, we used CAIDA’s IPv4 Routed /24
Topology Dataset gathered by the Archipelago (Ark) [34]
measurement infrastructure in March 2014 [19]. As of March
2014, Ark supports continual Paris traceroute measurements
from 94 monitors in 84 diﬀerent ASes distributed in 39 diﬀer-
ent countries, probing to one random IP address in each /24
of the entire routed IPv4 space approximately every three
days. Second, we coordinated probing from thousands of
public traceroute servers to expand coverage beyond what
these existing Ark measurements capture. We developed

BGP
Data

RIPE RIS

Route 
Views

BGP  

Geolocation 
Communities

BGP

AS paths 

BGP 

AS Preﬁxes

IMC '13 Algorithm

Infer AS 

Relationships

Infer AS

Customer Cones

Peering  
AS Links

Transit
AS Links

AS Customer 

Cones

Infer AS Link Per 
Preﬁx Export Policy

§ 3.2

Hybrid Ingress 
Geolocation

Hybrid 

Candidate

§ 3.3

Infer PoP location with 

geolocation communities 

IP Preﬁxes not
in communities

Search for Ark IP paths 

to preﬁxes

IP Preﬁxes
No Ark Path

Use public 

traceroute servers 
to collect IP paths

IP Paths

IP Path Geolocation

Geolocated Ingress Points

Traceroute
Data

Ark

Ark IP
Paths

traceroute 

ARKARK
servers

Geolocation
Data

PeeringDB

DRoP

NetAcuity

Infer PoP-level links

§ 3.4

Peering

FT / PT / P

PT/ P

Partial
Transit

Transit

Conventional

FT / PT 

FT / P 

Hybrid

AS Relationships

Full Transit (FT) Partial Transit (PT) Peering (P)

Figure 3: Overview of our process to infer com-
plex AS relationships. We begin by inferring con-
ventional peering and transit relationships and cus-
tomer cones using AS paths from public BGP data.
We infer partial transit and candidate hybrid rela-
tionships using paths and preﬁxes from BGP and
conventional relationships. We use traceroute and
geolocation data to infer hybrid relationships, and
classify the arrangement by policy and location.

25an overlay interface to interact with 2,509 public traceroute
servers among 507 diﬀerent ASes in 77 diﬀerent countries.
To avoid being blocked by traceroute servers for too frequent
probing, we limited probing through this interface to one
query every 10 seconds per server. We used customer cone
data to inform target selection so that we would traceroute
paths toward destinations most likely to cross a candidate
hybrid relationship and therefore help with geolocation.

Geolocation data: To infer if export policies diﬀer by
geographic location, we used four sources of data, in order
of preference: published BGP community information; Peer-
ingDB’s reverse DNS scan on IXP peering preﬁxes; strings
found in DNS hostnames; and a commercial database.

Some ASes use communities to record the ingress loca-
tion where a route entered their network. Community val-
ues and their corresponding meanings are not standardized,
but many operators document their usage of communities in
IRR records or network support pages, allowing us to com-
pile a dictionary of values and their corresponding meanings.
In total, we interpreted 1,533 values from 117 ASes that en-
coded the geographic location of AS interconnection points.
We used three data sources to map addresses observed
in traceroute to geographic locations: PeeringDB’s reverse
DNS lookups of IXP preﬁxes [3], CAIDA’s DNS-based Rou-
ter Positioning (DRoP) [17], and Digital Envoy’s NetAcu-
ity [2]. We used PeeringDB’s list to map addresses to IXP
locations. We used DRoP to interpret DNS strings for ge-
ographic hints such as airport codes, city names, and CLLI
codes (a geographic naming convention developed by the
telecommunication industry [1]).
If neither PeeringDB or
DRoP reveals a location, we used NetAcuity, a commercial
geolocation provider, to map the IP address to a geographic
location. NetAcuity is more accurate at router positioning
than other commercial geolocation databases, though it is
optimized to infer edge host location (servers and end users)
rather than router infrastructure IP addresses [18].

3.2 Inferring Preﬁx Export Policies

Hybrid relationships result in diﬀerent export policies for
diﬀerent sets of preﬁxes across the same AS relationship.
We therefore divide export policies into three types of in-
creasingly restrictive policy: full transit (FT), partial tran-
sit (PT), and peering (P). To illustrate, in ﬁgure 2, FT is
the only policy where the provider exports preﬁxes from its
providers (in addition to peers and customers) to the cus-
tomer. PT is more restrictive because the provider does not
export provider routes, and P is the most restrictive because
the provider exports only customer routes. We therefore an-
notate a PoP where two ASes interconnect with the most re-
strictive policy we observe in BGP for all preﬁxes we observe
with traceroute to cross the link at that PoP.

Our algorithm begins by inferring the most restrictive ex-
port policy we observe in BGP for link-preﬁx tuples: for each
link our IMC 2013 algorithm inferred to have a conventional
transit relationship, we tag individual preﬁxes that propa-
gate in BGP through the link. Figure 4 illustrates the ap-
proach; for a transit relationship between A and B where
our IMC 2013 algorithm inferred A is a customer of B, we
tag each preﬁx px that B exports to other neighbors it re-
ceived from A. If we observe a triplet where B exports px
to a provider, we tag the A-B px tuple with FT. If we do
not observe an FT-triplet, but do observe a triplet where B
exports px to a peer, we tag the tuple with PT. If we do not

Increasingly restrictive

Full Transit (FT):

Partial Transit (PT):

Peering (P):

FT

FT

A

A

PT

PT

A

A

P

A

A

P

B

px

B

px

B

px

B

py

B

py

B

py

Figure 4: Tagging a link-preﬁx tuple between ASes
A and B where our IMC 2013 algorithm infers A to
be a customer of B. px is a preﬁx from A exported
by B; py is exported by B to A. We tag a link-preﬁx
tuple with the most restrictive export policy that
could explain the observed routing for the preﬁx:
FT if exported by B to (from) its providers; PT if
exported by B to (from) its peers and customers
but no further; P if exported by B to (from) its
customers but no further.

observe either FT or PT triplets, we tag the tuple with P.
We use a similar process with each preﬁx py that B exports
to A, and it is rare to BGP-observe B export the same preﬁx
both to and from A, i.e., px 6= py for any A-B link.

If all tuples for a link are tagged FT, the relationship
remains conventional provider-customer, and if all tuples are
tagged PT, we classify the relationship as PT. However, if a
given link has a mixture of FT, PT, or P tuples, we tag it as
a candidate hybrid. At the end of this process, we infer 2,955
partial transit and 6,682 candidate hybrid relationships.

3.3 Candidate Hybrid Exploration

The presence of diﬀerent export policies for diﬀerent pre-
ﬁxes for the same AS link is an indication of a hybrid rela-
tionship, but it may also reﬂect traﬃc engineering practices
that restrict the scope of route advertisements. To distin-
guish between hybrid relationships and traﬃc engineering,
our technique relies on the ability to geolocate the ingress
point of each link-preﬁx tuple. Depending on the combina-
tion of preﬁxes tagged as FT, PT, and P, a candidate hybrid
relationship may fall into one of four categories; FT + PT +
P, FT + PT, FT + P, or PT + P. We attempt to group pre-
ﬁxes with the same tag into mutually exclusive PoPs such
that each PoP has a consistent BGP-observed export policy.
For example, if all FT-tagged preﬁxes can be geolocated to
paths that cross P oP1 and all the P preﬁxes to P oP2, then
we infer the hybrid relationship to be FT + P. Conversely, if
a preﬁx tagged as P crosses P oP2, but so do preﬁxes tagged
as FT or PT, then P oP2 cannot represent a peering PoP,
and we infer P oP2 as FT or PT.

Therefore, given a candidate hybrid relationship with NP
preﬁxes tagged P, NP T preﬁxes tagged PT, and NF T preﬁxes
tagged FT, we begin by inferring all interconnection PoPs
for the P preﬁxes. We then try to rule out the PoPs as being
peering PoPs by testing as many PT preﬁxes as necessary
to ﬁnd the same set of PoPs with a PT export policy; i.e.,
an AS cannot have a P policy at a PoP if it also exports PT
preﬁxes at the PoP. Finally, we test as many FT preﬁxes as
necessary to ﬁnd the same set of PoPs as found for the P
and PT cases.

26We used a combination of BGP, traceroute, and geoloca-
tion data to infer PoPs for candidate hybrid relationships.
For each candidate hybrid relationship’s preﬁxes we searched
BGP paths for a community that stores a geographic hint,
which is our most trusted source of data. For each remaining
preﬁx we tried to obtain a traceroute path toward the preﬁx
that crosses the link. If a link is not observed with traceroute
in any path toward a tagged preﬁx, we cannot infer the re-
lationship as hybrid because we do not have adequate data
to make a robust classiﬁcation.
In this case, the inferred
relationship remains conventional transit to avoid misinter-
preting traﬃc engineering as a complex relationship.

3.3.1 Obtaining traceroute paths

To minimize the workload we impose on public tracer-
oute servers, we begin by using traceroute paths collected in
existing Ark traces. For the set of preﬁxes and candidate hy-
brid relationships for which we ﬁnd no usable Ark trace, we
coordinate a distributed traceroute campaign using public
traceroute servers. We traceroute only to preﬁxes that B ex-
ports from A, rather than the inverse, because in some cases
B may export a complete routing table to A; i.e., in ﬁgure 4
we use px but not py. For each candidate hybrid link, we
divide the available traceroute servers into two sets, depend-
ing on their relationship to the provider of the candidate hy-
brid relationship. The full-visibility set includes traceroute
servers under the customer cone of the provider of the can-
didate relationship, which may be able to reach any of the
targeted preﬁxes through the candidate hybrid relationship.
The limited-visibility set includes traceroute servers in ASes
that peer with the provider of the candidate relationship,
or in ASes under whose customer cone the provider belongs.
We consider traceroutes from these servers able to reach pre-
ﬁxes tagged either FT or PT through the candidate hybrid
relationship, but not preﬁxes tagged P, since a peer should
not export preﬁxes obtained from a peer to another peer. In
ﬁgure 1, a traceroute server inside AS E would belong to the
full-visibility set for the B-A relationship, a server inside AS
C or AS D would belong to the limited-visibility set, and a
server in a provider of D would not be used.

After classifying traceroute servers, we randomly select
an IP address from each target preﬁx and traceroute it with
the servers. Note that having a traceroute server in the full
or limited-visibility groups does not imply that a traceroute
will cross the targeted link, only that it could. Capturing
possible peering PoP-level connectivity for a candidate hy-
brid relationship requires at least one traceroute server of
full-visibility reaching the target preﬁxes through the link.
For 97% of the candidate hybrid relationships we have at
least one traceroute monitor of full-visibility, and for 85% of
the of the links we have more than 10 full-visibility moni-
tors. For 462 of our 6,682 candidate hybrid relationships, we
could not identify ingress points due to lack of full-visibility
traceroute servers and geographic communities.

3.3.2 Geolocation of Hybrid Links

If a traceroute toward a selected preﬁx crosses the candi-
date hybrid relationship, we use the path to geolocate the
PoP. Identifying the interdomain link is diﬃcult, since it is
not clear who assigned the preﬁx used to establish routing.
Consider the observed IP path a0 a1 b0 in ﬁgure 5: changing
the interdomain link from a0–a1 to a1–b0 has no eﬀect on the
IP path. Although it is not clear whether the interdomain

1

a

PoP1

B

1

a

0

a

0

a

A

A

B

0

b

0

b

A

B

PoP1

link

router/PoP

internal
border

3

x

X

PoP3

IP address x3
owned by X
in region 3

Figure 5: Regardless of which two routers form the
interdomain link, interface a1 is always part of the
pair forming the interdomain link and so will be lo-
cated in the same region.

Geolocation
Communities
PeeringDB
DRoP
Netacuity

Number Percent
34.4%
3.5%
31.5%
30.6%

61,198
6,228
56,111
54,590

Table 2: The number of link-preﬁx tuples which
were geolocated by each system, in the order they
were geolocated.

link was just before or after the AS changed in the path, it
does not matter for geolocation. The IP address just before
the change will be on one of the two routers connected to
the interdomain link and so will be in the same location as
the target link. Therefore, we geolocate the IP address just
before the AS changed, ﬁrst using PeeringDB’s reverse DNS
scan, then by DRoP’s inference given the hostname string,
and then with Netacuity.

3.3.3 Classiﬁcation of Hybrid Links

We use the BGP, traceroute, and geolocation data we col-
lected and the logic in section 3.3 to infer which candidate
hybrid links represent hybrid links. Table 2 shows which
method geolocated each link-preﬁx tuple. For hybrid rela-
tionships where we ﬁnd PoPs with a consistent export policy,
we annotate the geolocated PoPs with speciﬁc FT, PT, and
P classiﬁcations.

4. RESULTS

Of the 90,272 p2c relationships we inferred for March
2014, we inferred 4,026 (4.5%) of these relationships to be
complex, including 1,071 hybrid AS relationships and 2,955
partial-transit relationships. The inferred hybrid relation-
ships include 969 FT/P relationships, 72 PT/P relation-
ships, 30 FT/PT relationships, and 4 FT/PT/P relation-
ships. We found that hybrid relationships are not only es-
tablished between large transit providers; in 57% of the hy-
brid transit/peering (T/P) relationships the customer had
a customer cone size of less than 5 ASes. However, other
metrics reﬂect network size diﬀerently than customer cone.
For instance, we inferred 21 hybrid relationships that involve
Akamai (AS 20940); although Akamai has no customers it
is reported to be one of the top 10 networks in terms of
inter-domain traﬃc volume [21]. For 34.6% of the hybrid
T/P relationships the customers have traﬃc levels of at least
100 Gbps, according to traﬃc volumes self-reported in Peer-
ingDB. The corresponding percentage for FT (customer re-
lationships) in the whole BGP-observed graph is only 13.3%.
For 68.5% of the inferred hybrid T/P relationships, the
peering link crossed a European IXP. Some ASes with open
or selective peering policies are establishing peering relation-

27Hybrid

Partial

FN
1
4
-

158
38

TP FP
2
0
5
-

TP FP
33
2
10
124
45
-
214 / 1,071: 20.0% 203 / 2,955: 6.9%
202 / 1,071: 18.9% 198 / 2,955: 6.7%
157 / 169: 92.9%
160 / 165: 97.0%

FN
0
0
-

Direct report
Communities
RPSL
Validated
Conﬁrmed
PPV

Table 3: Validation results, showing true positives
(TP), false positives (FP), and false negatives (FN).
We validate 20.0% of our hybrid inferences and 6.9%
of our partial transit inferences and found our in-
ferences have 92.9% and 97.0% positive predictive
values (PPV = TP/TP+FP), respectively.

ships with their customers over IXPs, sometimes unknow-
ingly, as revealed by our discussions with some operators.

Partial transit relationships are also more frequently ob-
served among European ASes. 88% of the inferred partial
transit relationships were established in European PoPs. We
believe that the dense peering connectivity among European
ASes [6,16] makes partial transit more attractive, since par-
tial transit providers can oﬀer discounted access to a large
fraction of their routing table through partial transit only.
For instance, Init7 (AS13030), a large European provider,
reports that 60% of their routing table is accessible through
peering links [20] as of September 2014.

Despite the many complex relationships we inferred, and
positive validation, we are limited by the well-known AS
topology incompleteness problem [31], as our algorithm can
only infer complex relationships where the peering compo-
nent is revealed in public BGP data.

5. VALIDATION

We used three sources of validation data: direct e-mail
feedback, BGP communities that signal relationship type,
and relationship types expressed in diﬀerent Routing Policy
Speciﬁcation Language (RPSL) objects.

Direct feedback: We obtained feedback from seven op-
erators (of twelve contacted) that previously contributed AS
relationship corrections through CAIDA’s web interface [22].
We sent each operator our inferences for their ASes and
asked them to specify if they were correct, and asked them
if they were involved in other hybrid or partial-transit rela-
tionships not included in our inferences.

BGP communities: We compiled a dictionary of 1,502
communities deﬁned by 281 ASes, which we used to extract
a set of 40,820 relationships for March 2014, as explained
in [22]. Relationship communities enable the implementa-
tion of sophisticated routing policies, so operators have a
strong incentive to conﬁgure community values with correct
relationship annotations [14]. We considered ﬁve types of
relationship communities: customer, partial-customer, peer,
partial-provider, and provider. We used the partial-customer
and partial-provider communities to obtain validation data
for partial transit relationships. We captured hybrid rela-
tionships when we observed that an AS tagged diﬀerent in-
bound preﬁxes from the same neighbor with diﬀerent com-
munity values depending on the ingress PoP. To mitigate
transient misconﬁgurations we required that the same com-
munities be observed in all BGP snapshots we collected.

RPSL: We used RPSL objects to evaluate only true posi-
tives, since RPSL objects are commonly expressed at a high
level and in most cases do not encode complex relationships.
Table 3 summarizes our validation results. Overall, we
were able to conﬁrm 202 hybrid relationships (18.9% of the
total hybrid inferences), and 198 partial-transit relationships
(6.7% of the total partial-transit inferences). For the vali-
dation datasets that allowed us to test both true and false
positives (directly reported and BGP communities) we had
the correct inference for 157/169 (92.9%) of the inferred hy-
brid relationships, and for 160/165 (97.0%) of inferred the
partial transit relationships. We failed to infer ﬁve hybrid
relationships present in our validation dataset. For four,
both the transit and the peering PoP were located in the
same city, and our city-level geolocation granularity was too
coarse to identify the diﬀerent PoPs.

Via operator feedback we found that three of the inferred
hybrid relationships were the result of misconﬁgurations,
where the intended relationship was provider-customer. One
operator followed up with a request for a semi-live system
to alert operators of hybrid peering relationships, since they
may be unintentional.

6. CONCLUSION

We presented a new algorithm to infer the two most com-
mon types of complex AS relationships: hybrid and partial
transit using BGP, traceroute, and geolocation data. We in-
ferred 1,071 hybrid and 2,955 partial-transit relationships for
March 2014. We validated our inferences against direct feed-
back from operators, BGP communities, and RPSL data and
found our hybrid and partial transit inferences have 92.9%
and 97.0% positive predictive values, respectively. We have
published our complex relationship inferences and validation
data derived from BGP communities and RPSL at http:
//www.caida.org/publications/papers/2014/complex

We believe this is the ﬁrst partly validated attempt to infer
complex AS relationships. Our results reveal that complex
relationships are more prevalent in the periphery of the AS
topology than previously thought, while 61% of hybrid peer-
ing and 88% of partial transit relationships were inferred be-
tween European ASes that leverage Europe’s extensive IXP
ecosystem. Generally, unconventional relationships can have
arbitrary complexity that may not be expressible in terms
of relationship types, which is why we focused on the two
most common types of complex relationships according to
operator feedback and the existing literature, which are hy-
brid and partial transit. In the future we plan to expand
our active measurements by integrating traceroute probes
from RIPE Atlas, and we will continue to interact with AS
operators for input and feedback to improve our inferences.

Acknowledgments
We thank the reviewers and Phillipa Gill for their feed-
back. The work was supported by CAIDA members, U.S.
NSF grant CNS-1414177, DHS S&T Cyber Security Divi-
sion BAA 11-02 and SPAWAR Systems Center Paciﬁc via
N66001-12-C-0130, by Defence Research and Development
Canada (DRDC) pursuant to an Agreement between the
U.S. and Canadian governments for Cooperation in Science
and Technology for Critical Infrastructure Protection and
Border Security. This work represents the position of the au-
thors and not of CAIDA’s members, NSF, DHS, or DRDC.

28[21] C. Labovitz, S. Iekel-Johnson, D. McPherson,

J. Oberheide, and F. Jahanian. Internet inter-domain
traﬃc. In ACM SIGCOMM, pages 75–86, Aug. 2010.

[22] M. Luckie, B. Huﬀaker, A. Dhamdhere, V. Giotsas,
and k claﬀy. AS relationships, customer cones, and
validation. In ACM SIGCOMM IMC, pages 243–256,
Oct. 2013.

[23] Z. M. Mao, L. Qiu, J. Wang, and Y. Zhang. On
AS-level path inference. In ACM SIGMETRICS,
pages 339–349, June 2005.

[24] R. Mazloum, M.-O. Buob, J. Aug ˜A´l, B. Baynat,

D. Rossi, and T. Friedman. Violation of interdomain
routing assumptions. In PAM, pages 173–182, Apr.
2014.

[25] W. M¨uhlbauer, A. Feldmann, O. Maennel,

M. Roughan, and S. Uhlig. Building an AS-topology
model that captures route diversity. In ACM
SIGCOMM, pages 195–206, Aug. 2006.

[26] W. M¨uhlbauer, S. Uhlig, B. Fu, M. Meulle, and

O. Maennel. In search for an appropriate granularity
to model routing policies. In ACM SIGCOMM, pages
145–156, Aug. 2007.

[27] L. Neudorfer, Y. Shavitt, and N. Zilberman. Improving

AS relationship inference using PoPs. In IEEE
INFOCOM Workshops, pages 459–464, Apr. 2013.

[28] W. Norton. Dual Transit/Peering.

http://drpeering.net/white-papers/Art-Of-
Peering-The-Peering-Playbook.html#4.

[29] W. Norton. Partial Transit (Regional).

http://drpeering.net/white-papers/Art-Of-
Peering-The-Peering-Playbook.html#7.

[30] S. Qiu, P. McDaniel, and F. Monrose. Toward

valley-free inter-domain routing. In IEEE ICC, pages
2009–2016, June 2007.

[31] M. Roughan, W. Willinger, O. Maennel, D. Perouli,
and R. Bush. 10 lessons from 10 years of measuring
and modeling the Internet’s autonomous systems.
IEEE Journal on Selected Areas in Communications,
29(9):1810–1821, Oct. 2011.

[32] U. Weinsberg, Y. Shavitt, and E. Shir.

Near-deterministic inference of AS relationships. In
IEEE ConTEL, pages 191–198, June 2009.

[33] H. Yihua, M. Faloutsos, S. Krishnamurthy, and

M. Chrobak. Obtaining provably legitimate Internet
topologies. IEEE/ACM Transactions on Networking,
20(1):271–284, Feb. 2012.

[34] Young Hyun. CAIDA: Archipelago Measurement
Infrastructure. http://caida.org/projects/ark.

7. REFERENCES

[1] Common Language Location Identiﬁer (CLLI) code.

http://en.wikipedia.org/wiki/CLLI_code.

[2] NetAcuity. http://www.digitalelement.com/our_

technology/our_technology.html.

[3] PeeringDB. http://www.peeringdb.com.
[4] RIPE RIS. http://www.ripe.net/ris.
[5] RouteViews. http://www.routeviews.org/.
[6] B. Ager, N. Chatzis, A. Feldmann, N. Sarrar, S. Uhlig,
and W. Willinger. Anatomy of a large European IXP.
In ACM SIGCOMM, pages 163–174, Aug. 2012.

[7] G. D. Battista, T. Erlebach, A. Hall, M. Patrignani,
M. Pizzonia, and T. Schank. Computing the types of
the relationships between autonomous systems.
IEEE/ACM Transactions on Networking,
15(2):267–280, Apr. 2007.

[8] H. Chang, S. Jamin, and W. Willinger. To peer or not

to peer: Modeling the evolution of the Internet’s
AS-level topology. In INFOCOM, pages 1–12, Apr.
2006.

[9] W. Deng, W. Muhlbauer, Y. Yang, P. Zhu, X. Lu, and

B. Plattner. Shedding light on the use of AS
relationships for path inference. Communications and
Networks, 14(3):336–345, June 2013.

[10] X. Dimitropoulos, D. Krioukov, M. Fomenkov,

B. Huﬀaker, Y. Hyun, k. claﬀy, and G. Riley. AS
relationships: inference and validation. ACM
SIGCOMM CCR, 37(1):29–40, Jan. 2007.

[11] X. Dimitropoulos, M. A. Serrano, and D. Krioukov.

On cycles in AS relationships. ACM SIGCOMM CCR,
38(3):102–104, July 2008.

[12] T. Erlebach, A. Hall, and T. Schank. Classifying

customer-provider relationships in the Internet. In
IASTED International Conference on
Communications and Computer Networks, Nov. 2002.
[13] P. Faratin, D. Clark, S. Bauer, W. Lehr, P. Gilmore,

and A. Berger. The growing complexity of Internet
interconnection. Communications and Strategies,
(72):51–71, Dec. 2008.

[14] K. Foster. Application of BGP communities. The

Internet Protocol Journal, 6(2):2–9, June 2003.

[15] L. Gao. On inferring autonomous system relationships

in the Internet. IEEE/ACM Transactions on
Networking, 9(6):733–745, Dec. 2001.

[16] V. Giotsas, S. Zhou, M. Luckie, and k claﬀy. Inferring

multilateral peering. In ACM CoNEXT, pages
247–258, Dec. 2013.

[17] B. Huﬀaker, M. Fomenkov, and k. claﬀy. DRoP:
DNS-based router positioning. ACM SIGCOMM
CCR, 44(3):6–13, July 2014.

[18] B. Huﬀaker, M. Fomenkov, and k. claﬀy. Geocompare:

A comparison of public and commercial geolocation
databases. Technical report, CAIDA, May 2011.
http://www.caida.org/publications/papers/2011/
geocompare-tr/.

[19] Y. Hyun, B. Huﬀaker, D. Andersen, M. Luckie, and

K. C. Claﬀy. The IPv4 Routed /24 Topology Dataset,
2014. http://www.caida.org/data/active/ipv4_
routed_24_topology_dataset.xml.

[20] INIT7. Init7 partial transit. http:

//www.init7.net/en/wholesale/partial-transit/.

29