Dissecting Web Latency in Ghana

Yasir Zaki, Jay Chen
New York University Abu
yasir.zaki@nyu.edu
jchen@cs.nyu.edu

Dhabi, UAE

Thomas Pötsch
University of Bremen
Bremen, Germany

thp@comnets.uni-

bremen.de

Talal Ahmad,

Lakshminarayanan

Subramanian

CS, NYU and CTED, NYUAD
{ahmad, lakshmi}@cs.nyu.edu

ABSTRACT
Web access is prohibitively slow in many developing regions
despite substantial eﬀort to increase bandwidth and network
penetration. In this paper, we explore the fundamental bot-
tlenecks that cause poor web performance from a client’s
perspective by carefully dissecting webpage load latency con-
tributors in Ghana. Based on our measurements from 2012
to 2014, we ﬁnd several interesting issues that arise due to
the increasing complexity of web pages and number of server
redirections required to completely render the assets of a
page. We observe that, rather than bandwidth, the primary
bottleneck of web performance in Ghana is the lack of good
DNS servers and caching infrastructure. The main bottle-
necks are: (a) Recursive DNS query resolutions; (b) HTTP
redirections; (c) TLS/SSL handshakes. We experiment with
a range of well-known end-to-end latency optimizations and
ﬁnd that simple DNS caching, redirection caching, and the
use of SPDY can all yield substantial improvements to user-
perceived latency.

Categories and Subject Descriptors
C.2.2 [Computer-Communication Networks]: Network
Protocols; C.4 [Performance of Systems]: Measurement
techniques

Keywords
Web; HAR; DNS; Developing countries

1.

INTRODUCTION

Web access in developing regions suﬀers from a continu-
ally widening content-connectivity gap: the rate of growth in
connectivity is outstripped by the growth in the complexity
of web pages. Despite lagging broadband and latency statis-
tics relative to the Organisation for Economic Co-operation
and Development (OECD) countries, Internet infrastructure
in developing regions has been improving steadily over the
past decade [1]. For example, Accra (the capital of Ghana)

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
IMC’14, November 5–7, 2014, Vancouver, BC, Canada.
Copyright is held by the owner/author(s). Publication rights licensed to ACM.
ACM 978-1-4503-3213-2/14/11 ...$15.00.
http://dx.doi.org/10.1145/2663716.2663748.

has several major undersea cable landing sites including:
ACE, Main One, Glo1, and WACS [5]. Although this ap-
pears promising, the web has seen a 30 to 50-fold increase
in average page complexity over the same decade [4, 11, 15,
19], which signiﬁcantly outpaces the growth in connectivity.
Recent works have explored facets of slow Internet in de-
veloping regions from diﬀerent perspectives, geographic lo-
cations, and infrastructural contexts. Some works ﬁnd that
high latency, buﬀer bloat, and packet loss are the central
causes of poor performance [25]. Other works examine prob-
lems caused by the interaction between low bandwidth links
and high network contention by TCP ﬂows [16]. Yet other
research cites routing protocols and architectural issues such
as Content Distribution Networks (CDN) server placement
among the central problems [4].

In this paper, we aim to understand the causes of user-
perceived web latency in Ghana as it represents one of the
most well connected developing countries in the world [5].
Unlike prior work in developing regions [16, 18, 25] that
focus on access link performance in developing regions, our
measurements detail the core infrastructural issues that lead
to a poor web browsing experience. A number of works
study similar web performance issues in ﬁxed/wired or mo-
bile environments such as [14, 31], but our unique context
results in a diﬀerent set of issues.

In our measurement driven approach, we collected down-
load traces of Alexa’s [2] top webpages from diﬀerent loca-
tions in Ghana from 2012 to 2014. We also collected simi-
lar measurements in three diﬀerent well-connected locations
around the world over the same time period for compari-
son. We found the following key results: bandwidth is less
of a bottleneck than several other factors, the actual time
spent downloading content represents only a small fraction
of the end-to-end page download time, and the main cul-
prit of user-perceived web latency is actually DNS resolu-
tion. Speciﬁcally, DNS caching along with placement of the
root and top level domain DNS servers play the most sig-
niﬁcant role in the overall web performance. We ﬁnd that
caching DNS records can decrease page load times in Ghana
by ﬁve times. We also observe that other important fac-
tors for high end-to-end latency include HTTP redirections
and TLS/SSL handshakes for secure pages. Caching HTTP
redirects can enhance the page load time by 20%, and long
TLS/SSL handshakes are present in 15% of Alexa page re-
quests. Finally, to understand the eﬀects of ﬂow contention,
we experimented with SPDY and found that depending on
the server locations, SPDY can reduce some page load times
in Ghana by up to 30%.

241Figure 1: HAR trace visualization of craigslist.com from Accra, Ghana cellular in 2012

2. MOTIVATION

Information and Communication Technologies (ICTs) have
been linked to development [26], where in the last four years,
developing nations have experienced a signiﬁcant increase in
the number of Internet users, which is a promising trend.
Between 2009 and 2011, Ghana experienced a huge increase
in the number of Internet users from 5.4% to 14.1% [12],
which is the largest increase in the country’s history. A
similar trend is being reﬂected in other developing coun-
tries, resulting in millions of new Internet users every year.
However, the Internet that these users encounter is often
extremely slow and cannot take advantage of all available
content on the web.

Very little eﬀort has been expended on understanding and
solving the Internet problems in developing regions relative
to the number of people these issues aﬀect. Even very basic
questions like why the Internet is so slow is a challenging
question to answer due not only to the myriad of diﬃculties
in collecting data in these regions, but also due to the mul-
titude of answers depending on the context. Interestingly,
when these problems are investigated, ﬁndings range widely
from the relatively obvious, e.g. low bandwidth, high latency,
unreliability, and loss, to the esoteric, e.g. mis-routing due
to lack of peering points, small-packet regimes, etc. [20, 13,
25, 16]. Solutions to these problems are similarly varied [24,
23, 17]. Motivated by these diﬀering ideas, in this paper we
seek to answer why page loading times are so slow in Ghana.

3. METHODOLOGY

We used standard oﬀ-the-shelf tools to collect our traces.
We collected HTTP Archive (HAR) browser-level traces us-
ing Firefox Version 13 with the Firebug extension and Se-
lenium [7] to automate the process. The browser cache is
cleared after each webpage. We also used the Linux dig
command-line tool to examine DNS requests in more detail.

Table 1: Experiments details

Time

Type

Alexa’s top
500 global Wiﬁ & 3G

August 2012

March -
July 2013

August 2014

DNS

dig+trace

DNS

dig+trace

April 2014

SPDY

August 2014

Alexa’s top
1000 global Wiﬁ & 3G

Both

August 2014

Alexa’s top

Both

500 local Wiﬁ & 3G

Link
Both

Wiﬁ

Wiﬁ

Wiﬁ

Location
Accra and
Hohoe (3G)

Accra, Abu Dhabi
NY and Bremen

Accra

Accra, Abu Dhabi
NY and Bremen
Accra, Abu Dhabi
NY, Bremen and

Kumawu (3G)

Accra, Abu Dhabi
NY, Bremen and

Kumawu (3G)

We ran our experiments from six locations in total: New
York City, Bremen (Germany), Abu Dhabi (UAE), Accra

(Ghana), Kumawu and Hohoe (both small cities in Ghana).
In New York, Bremen, Abu Dhabi, and Accra the machines
we used were state-of-the-art with a standard Linux dis-
tribution (Ubuntu and CentOS), and the experiments were
conducted on university campus networks with over 10Mbps
connections using Wiﬁ connectivity and 3G HSPA cellular
network connections. In Hohoe/Kumawu, our traces were
collected from a 3G HSPA connection. In Hohoe, the fastest
wired network was limited to ADSL at a single Internet Cafe
and we were not able to collect data from that location.
For our experiments, we collected web traces of Alexa’s [2]
top 1000 global and top 500 local websites, collected results
of DNS performance using the “dig +trace” command, and
evaluated SPDY performance in Ghana, see Table 1.

4. DISSECTING PAGE LOADS

In this section we focus on identifying problems associated
with the webpage download process in Ghana by examining
the set of browser-level traces we collected from Ghana in
2012.1 Some of the timing information we are able to collect
from the HAR ﬁles include:
• Blocking: waiting time of a request in the queue, due
to the maximum number of parallel TCP connections
that a browser can open per server
• DNS Lookup: time required to resolve a host name
• Connecting: TCP connection setup time
• Sending: the time required to send HTTP request to
• Waiting: the time required to receive a response from
• Receiving: the time required to read the entire re-

or an URL

the server

the server

sponse from the server

Figure 1 gives an example of a HAR ﬁle visualized as a

waterfall chart.
4.1 Domain Name Server (DNS)

From our Ghana traces, the immediate observation is that
the dominant contributor to the long page download times
is the DNS lookup. Figure 2 shows the statistics taken from
our measurements in Ghana 2012. The timing breakdown
categories (i.e., ”Blocking” and ”Waiting”) are identical to
those deﬁned previously in Section 4. We observe that DNS
requests account for 37-40% of the user-perceived latency.2

1While the issues we observe here serve to highlight the ex-
treme nature of the latency problem in developing countries,
Accra actually has one of the fastest Internet infrastructures
in Africa. Other developing regions suﬀer from even worse
network conditions, e.g. South Africa has higher latencies
[30], East Africa and Southeast Asia have fewer major net-
work cables [10].
2A number of these requests occur simultaneously and we
removed such overlapping timings. However, these ﬁgures
do still include timings that do not contribute to the overall
page load time, because they are not on the critical path.

742ms5.599s4.842s6.255s896ms1.256s 735ms1.026scraigslist.org www.craigslist.org geo.craigslist.org accra.craigslist.org /styles/craigslist.css /js/jquery-1.4.2.js /js/homepage.js/js/formats.js8 requestspage load time: 18.568s10.Blocked4%DNS38.1%Connect5.6%Wait34.6%11.4%ReceiveBlocked DNS ConnectWaitReceive2424.4 TLS/SSL

Our 2012 traces from Ghana showed that approx. 8% of
the overall object requests require a secure connection. In
2014 this number has nearly doubled to 15%. This corrob-
orates with the trend of increased adoption of secure con-
tent exchange on the web. However, in developing regions
like Ghana this can severely impact user-perceived latency
because establishing a Transport Layer Security (TLS) con-
nection is a lengthy procedure and is severely impacted by
latency. The TLS handshake procedure depends on whether
only the server is authenticated or both the server and the
client are authenticated, but the basic TLS handshake con-
sists of up to 9 round trips [9].
5. SPEEDING UP PAGE LOADS

Here we assess the potential of several straightforward im-
provements that can cost orders of magnitude less than ex-
tending the existing network infrastructure.
5.1 DNS Caching

In order to understand the eﬀect and potential gain of
DNS caching, we analyze our traces in more detail. Fig-
ure 4 shows an example on long DNS requests of one of the
webpages taken from the Accra 2012 cellular traces.

In this example, the page requests objects from eleven
external domains, where a DNS request must be issued for
each single domain.
In order to evaluate the ratio of the
DNS request to the total page time we calculate the overall
delay caused by DNS. This is not a simple summation of
all DNS requests, as can be seen in Figure 4. To calculate
the potential beneﬁt of DNS caching we leverage the Wprof
tool [31] to identify the critical path in the page request
and calculate the contribution to that critical path by DNS
requests. We ﬁnd that the ratio of the overall DNS delays to
the overall page load time is about 72% of the overall page
load time in Figure 4.

(a) Accra 3G

(b) Accra Wiﬁ

(c) Hohoe 3G

Figure 2: Web page requests (Alexa’s top global 2012)

Although, “Wait” accounts for roughly 30% of the load
time in all cases, we do not focus on it because link latency
challenges in developing countries like Ghana have already
been studied elsewhere [18, 25]. In these studies, the authors
suggested several methods to improve the link latencies by
investing in local server infrastructure or placing web caches
and content on servers within the local service provider.
4.2 HTTP redirects

Looking more closely at the Ghana traces, we ﬁnd that
in about 80% of the cases, the ﬁrst HTTP GET request ac-
tually gets redirected into another page. These redirects
are caused either by the HTTP status code response of
301 Moved Permanently or 302 Found. We ﬁnd that in
most cases a redirection is due to directing a browser to
a www URL of the same page, i.e. if we look at the ex-
ample shown in Figure 1, we can see that the client asks
for page craigslist.org and gets redirected to the domain
www.craigslist.org.
4.3 HTTP blocking

Another interesting eﬀect that we observe is blocking. In
Figure 2 we see that blocking causes more than 10% of
the page load time. This is due to the conﬁgured maxi-
mum number of TCP connections to a server within the
web browser. From the example in Figure 3, we see that
the browser has already requested six objects simultaneously
using six TCP connections (style splash.css, logo.jpg, etc.),
and the next object that has to be requested from the same
server (header left.jpg) now has to wait until one of the pre-
vious object is downloaded.

Figure 3: Blocking example of tribalfusion.com from Ac-
cra, Ghana cellular in 2012

In addition to the maximum number of TCP connections,
modern web browsers also use HTTP pipelining with 4 − 8
pipelined objects. HTTP pipelining is a way for the client
browser to request several objects at the same time within
one TCP connection, but Head-Of-Line blocking (HOL block-
ing) may occur because of this limit as well.

Figure 4: DNS example (www.merchantcircle.com) from
Accra, Ghana cellular 2012

Figure 5 shows the DNS delays in our traces from Ghana,
taken from all embedded domains within Alexa’s top web-
sites. The DNS delays are measured at the application
layer by means of HAR ﬁles, thus they represent the user-
perceived performance. These DNS delays also include all
DNS retry attempts and redirects. The ﬁgure shows how
the overall DNS performance in Ghana has changed over
the past two years.

10.Blocked4%DNS38.1%Connect5.6%Wait34.6%11.4%ReceiveBlocked DNS ConnectWaitReceive10.Blocked4%DNS38.1%Connect5.6%Wait34.6%11.4%ReceiveBlocked DNS ConnectWaitReceive10.Blocked4%DNS38.1%Connect5.6%Wait34.6%11.4%ReceiveBlocked DNS ConnectWaitReceive10.Blocked4%DNS38.1%Connect5.6%Wait34.6%11.4%ReceiveBlocked DNS ConnectWaitReceive10.Blocked4%DNS38.1%Connect5.6%Wait34.6%11.4%ReceiveBlocked DNS ConnectWaitReceive10.4%38.1%5.6%34.6%11.4%11.2%40.1%5.3%29.3%14.1%10.5%37.1%5.7%33.3%13.4%5.472s383ms1.315s1.465s 966ms1.496s1.522s 1.146s 1.146s1.385s1.619s 1.276stribalfusion.com/style_splash.css/img_splash/logo.jpg/img_splash/learn.png/img_splash/see-more.gif /img_splash/reach.png/img_splash/engage.png /img_splash/header_left.jpg /img_splash/bg_bar.jpg/img_splash/hover.gif/img_splash/low_bar.gif/img_splash/line.gif12 requestspage load time: 7.221s10.Blocked4%DNS38.1%Connect5.6%Wait34.6%11.4%ReceiveBlocked DNS ConnectWaitReceive10.Blocked4%DNS38.1%Connect5.6%Wait34.6%11.4%ReceiveBlocked DNS ConnectWaitReceive10.Blocked4%DNS38.1%Connect5.6%Wait34.6%11.4%ReceiveBlocked DNS ConnectWaitReceive10.Blocked4%DNS38.1%Connect5.6%Wait34.6%11.4%ReceiveBlocked DNS ConnectWaitReceive10.Blocked4%DNS38.1%Connect5.6%Wait34.6%11.4%ReceiveBlocked DNS ConnectWaitReceive1.391s5.039s1.203s856ms4.317s4.338s4.313s4.771s4.433s4.656s735ms4.448s172ms186ms1.028s420ms1.196s982ms677ms1.268s1.436s2.106s316ms1.734s367ms457ms239ms222ms291ms240msmerchantcircle.com 1.836s/root/static/blue/css/master.css/static/js/s_code.v1.1.js/ajax/libs/jquery/1.7.1/jquery.min.js/static/js/novum/jquery.json-2.3.min.js/static/blue/js/tabSlide.js/static/track.js/api/dcs//static/js/allWidgetInPage.js/b/ss/mcirdev/1/H.22.1/s26425354551632/ga.js/beacon.js/static/blue/images/moreArrow.png/static/blue/images/borderSide.png/static/blue/images/logoMain.png/static/blue/images/searchBgSh.png/static/blue/images/searchBgHome.png/static/blue/images/MCSprite.png/static/blue/images/homeFootBorder.png/static/blue/images/sHomeSprit.png/static/blue/images/nFooter.png/static/blue/images/mainSprite.png/api/dcs/modules/o.js/static/blue/images/searchMapBg1.jpgndler/CityStateZipValidationHandler.ashx/root/ajaxContent/__utm.gif/b/b/ss/mcirdev/1/H.22.1/s26425354551632/b231 requestspage load time: 12.956s... 1.391s5.039s1.203s856ms4.317s4.338s4.313s4.771s4.433s4.656s735ms4.448s172ms186ms1.028s420ms1.196s982ms677ms1.268s1.436s2.106s316ms1.734s367ms457ms239ms222ms291ms240msmerchantcircle.com 1.836s/root/static/blue/css/master.css/static/js/s_code.v1.1.js/ajax/libs/jquery/1.7.1/jquery.min.js/static/js/novum/jquery.json-2.3.min.js/static/blue/js/tabSlide.js/static/track.js/api/dcs//static/js/allWidgetInPage.js/b/ss/mcirdev/1/H.22.1/s26425354551632/ga.js/beacon.js/static/blue/images/moreArrow.png/static/blue/images/borderSide.png/static/blue/images/logoMain.png/static/blue/images/searchBgSh.png/static/blue/images/searchBgHome.png/static/blue/images/MCSprite.png/static/blue/images/homeFootBorder.png/static/blue/images/sHomeSprit.png/static/blue/images/nFooter.png/static/blue/images/mainSprite.png/api/dcs/modules/o.js/static/blue/images/searchMapBg1.jpgndler/CityStateZipValidationHandler.ashx/root/ajaxContent/__utm.gif/b/b/ss/mcirdev/1/H.22.1/s26425354551632/b231 requestspage load time: 12.956s10.Blocked4%DNS38.1%Connect5.6%Wait34.6%11.4%ReceiveBlocked DNS ConnectWaitReceive10.Blocked4%DNS38.1%Connect5.6%Wait34.6%11.4%ReceiveBlocked DNS ConnectWaitReceive10.Blocked4%DNS38.1%Connect5.6%Wait34.6%11.4%ReceiveBlocked DNS ConnectWaitReceive10.Blocked4%DNS38.1%Connect5.6%Wait34.6%11.4%ReceiveBlocked DNS ConnectWaitReceive10.Blocked4%DNS38.1%Connect5.6%Wait34.6%11.4%ReceiveBlocked DNS ConnectWaitReceive243In 2012, Ghana’s DNS CDFs (Figure 5a Wiﬁ and cellular)
split into two regions: a low delay region in the order of
milliseconds and a high delay region in the order of seconds.
When we examined the websites that belonged to the high
delay group, we did not ﬁnd any distinctive patterns, e.g.,
all are .com domains etc. However, by cross-referencing the
domains behind each region, we found that 15% of the low
delay domains were also present in the high delay region.
This suggested that the low delay region is likely due to
DNS caching at the local ISP DNS server.

(a) Alexa’s top global websites

(b) Alexa’s top local websites

Figure 5: Per location DNS delay (HAR ﬁles)

In 2014, we have redone new experiments in Ghana using
Alexa’s top 1000 global websites and top 500 local websites.
We also compare the Ghana results to measurements per-
formed in other locations around the world. We observe
a clear improvement in Accra’s Wiﬁ DNS performance due
to better DNS caching on the university network for both
the global and the local measurements. However, the DNS
performance over cellular is only improved in Accra’s case,
but Kumawu’s cellular DNS performance is still very poor
(Figure 5a right side).

Figure 6 shows the pie chart of the page load time in
Ghana for the 2014 measurements. We can see that the
DNS response times have improved compared to the 2012
measurements (Figure 2). In contrast, the TCP connection
time has increased to 3-4 times in terms of proportion of
overall page load time.

(a) Accra 3G

(b) Accra Wiﬁ

(c) Kumawu 3G

Figure 6: Web page requests (Alexa’s top global 2014)

5.2 DNS Server Placement

Besides caching, DNS server placement plays an impor-
tant role to reduce DNS latency. There are over 300 root
servers scattered around the globe operated by 12 diﬀerent
organizations. Although only 13 root servers appear in re-
sponse to a request, these servers are reachable with 13 any-
cast IP addresses [6]. The root DNS servers are not provi-
sioned uniformly around the world or in proportion to popu-
lation densities. The authoritative DNS servers for Top-level
domains (TLDs) is similarly unevenly distributed.

To get a better understanding of the high DNS delay re-
gion from Figure 5a, we analyzed the DNS performance us-
ing the dig command-line tool. The dig tool is used in Linux
to query DNS nameservers.
It can be combined with the
“+trace” option to follow the full lookup process from the
root servers up until getting the IP address of the requested
domain while displaying the answer for each involved server.
The “dig +trace” output can be divided into diﬀerent hier-
archical categories starting with the ﬁrst category where the
local DNS server gives back the answer to the root servers
(i.e., the ’.’ domains) all the way to the last category that
gives back the IP address of the requested domain. Figure
7 shows the “dig +trace” results for Accra (2013 and 2014)
in comparison with New York, Bremen, Abu Dhabi (2013).
The total DNS delay depicted in Figure 7 is a combination of
several hierarchical requests from the local DNS server, root
server, TLD servers, and sub domains servers. Although,
the number of categories of the DNS hierarchy can be more
than four, we have observed that the most dominant number
is four, which is why we only present the ﬁrst four results.
Figures 8a to 8d are CDFs of DNS delays per hierarchy.

Figure 7: Per location DNS delay on Wiﬁ (“dig +trace”)

Figure 8a shows the local DNS server delay (to retrieve
the root authoritative servers). Apart from Accra’s 2013 up-
per 30%, the results show that the local DNS server replies
back with an answer within milliseconds. For Accra’s 2013
upper 30% some network performance issues degrade the
performance. Figure 8b and 8c show the DNS delay of the
root and TLD servers respectively. The results show that
both New York’s and Bremen’s root and TLD authorita-
tive servers have faster response times compared to Abu
Dhabi and Accra. This indicates that these servers are ge-
ographically closer to New York and Bremen. Accra has
the worst delay proﬁle compared to all other locations. Fig-
ure 8d shows the delay CDF for the next DNS hierarchy.
The result shows that Abu Dhabi and Accra have slightly
higher delays than New York and Bremen. This is due to
the increased geographical distance to the DNS resolvers.
Although, in the previous section, we have seen better DNS
performance for Accra’s 2014 over Wiﬁ network; the results
depicted in this section show that the physical distance to
the DNS resolvers is still a problem.

012345DNS delay in s0.00.20.40.60.81.0CDFWifi global websites012345DNS delay in s0.00.20.40.60.81.0Cellular global websitesAccra '12 Accra '14Abu Dhabi '14 Hohoe '12Bremen '14 Kumawu '14New York '14012345DNS delay in s0.00.20.40.60.81.0CDFWifi local websites012345DNS delay in s0.00.20.40.60.81.0Cellular local websites10.Blocked4%DNS38.1%Connect5.6%Wait34.6%11.4%ReceiveBlocked DNS ConnectWaitReceive10.Blocked4%DNS38.1%Connect5.6%Wait34.6%11.4%ReceiveBlocked DNS ConnectWaitReceive10.Blocked4%DNS38.1%Connect5.6%Wait34.6%11.4%ReceiveBlocked DNS ConnectWaitReceive10.Blocked4%DNS38.1%Connect5.6%Wait34.6%11.4%ReceiveBlocked DNS ConnectWaitReceive10.Blocked4%DNS38.1%Connect5.6%Wait34.6%11.4%ReceiveBlocked DNS ConnectWaitReceive13.9%14.7%18.2%30.1%23.1%12.8%14.0%19.4%31.3%22.6%11.9%24.2%14.7%29.9%19.4%01342Delay in s0.00.20.40.60.81.0CDFWifi global websitesBremen 2013 Accra 2013 Accra 2014 New York 2013 Abu Dhabi 2013 Abu Dhabi 2013 w/o root & TLD Accra 2013 w/o root & TLD244(a) Local DNS server

(b) Root server

(c) TLD server

(d) Sub-domain server

Figure 8: Per location/hierarchy delay CDFs

In order to evaluate the distance from Ghana to the DNS
resolvers, we have performed several experiments using the
destination, showing how many hops are in between, and
the IP addresses of these hops. We used traceroute against
all 13 root domain servers from Accra, recorded the routes,
and repeated each experiment about 50 times. We found
that nearly all of the traceroutes’ ﬁrst hops were outside
Ghana and somewhere in Europe (Switzerland, UK, etc.),
from where, the route sometimes diverts to the US or Asia.
None of the routes went to DNS root servers that are geo-
graphically nearby.

In summary, there are large potential gains for enhanc-
ing the overall DNS delay in Ghana in case more root and
TLD servers are deployed in that particular region. Figure 7
shows the potential performance gain when root and TLD
servers are placed hypothetically with zero latency to Abu
Dhabi and Accra. These additional root servers would give
very similar performance to what is currently observed for
New York and Bremen.
5.3 Caching Redirects

In section 4.2, we discussed the issue of the ﬁrst HTTP
GET redirection. One way to overcome this is to cache
redirects, where the client could be informed about the redi-
rection immediately. Caching redirection can enhance the
overall page load time by about 20% (see Table 2).

Caching redirects can cause revocation problems since even
after removing the redirection, the cached redirections can-
not be removed and clients will still be redirected and never
reach the new server.

Table 2: Redirects delay to total page load time (2012)

Location

Accra cellular

Accra Wiﬁ

Hohoe cellular

Websites with Average

Redirects

79%
78%
81%

Ratio
25%
20%
21%

Standard
Deviation

15%
16%
17%

5.4 SPDY vs TCP Optimizations

SPDY [8] is an application layer protocol proposed to en-
hance the webpage loading time. The SPDY protocol in-
cludes header compression and allows servers to send back
additional responses without the client asking for them, e.g.,
the server might send back the style sheet of a page along
with the HTML, which can speed up the page load time.

Since blocking was an issue we identiﬁed in Section 4.3,
we wanted to examine the utility of SPDY, as it oﬀers the
potential to reduce the overhead of blocking times. We re-
quested 42 pages from four diﬀerent locations: Accra, Abu
Dhabi, Bremen, and New York.3 Each experiment was re-
peated ﬁve times to have enough randomness for a better
CDF population. Figure 9 shows the overall comparison
between SPDY and HTTP for all locations.

For the 42 websites that supported SPDY in our exper-
iments, we have found that SPDY does not show signiﬁ-
cant performance gain compared to regular HTTP in devel-
oped regions (e.g., New York, Bremen). Whereas, in Accra,
SPDY shows a performance gain in the upper 40% of the
page load times. This is because SPDY reduces the number
of TCP connections by multiplexing HTTP requests into a
single TCP connection per domain. As found in [32], SPDY
reduces the page load times especially for links with less
bandwidth and higher RTTs.

Figure 9: Per location SPDY vs HTTP in 2013

In Ghana where the connections are latency, not band-
width, constrained (at least for the purposes of web brows-
ing), SDPY is a better solution than multiple TCP connec-
tions. Almost all popular browsers are conﬁgured by default
to use multiple persistent TCP connections when download-
ing a page over HTTP to avoid HOL blocking, but increasing
the number of persistent TCP connections does not always
improve the HTTP performance [27]. Furthermore, in devel-
oping countries where the bandwidth is scarce and sharing
is high, increasing the number of TCP sessions can degrade
HTTP performance [16].
5.5 TLS/SSL Speedups

Although the TLS protocol has a resume handshake that
signiﬁcantly reduces the handshake traﬃc and latency, it re-
quires the server to store the TLS session in its cache. Thus,
many servers store the TLS session only for a short period
of time resulting in the full handshake being used instead.
Approximately 15% of our latest web requests contained
a secure connection establishment handshake.
Improving
handshake procedure can reduce the overall load time, and
combining the handshake with SPDY can potentially im-

3These were the only websites out of the Alexa’s top 500
websites that supported SPDY.

0.00.20.40.60.81.0Delay in s0.00.20.40.60.81.0CDFWifi global websitesBremen '13Accra '13 Accra '14New York '13 Abu Dhabi '130.00.20.40.60.81.0Delay in s0.00.20.40.60.81.0CDFWifi global websitesBremen '13Accra '13 Accra '14New York '13 Abu Dhabi '130.00.20.40.60.81.0Delay in s0.00.20.40.60.81.0CDFWifi global websitesBremen '13Accra '13 Accra '14New York '13 Abu Dhabi '130.00.20.40.60.81.0Delay in s0.00.20.40.60.81.0CDFWifi global websitesBremen '13Accra '13 Accra '14New York '13 Abu Dhabi '1301020304050Page load time in s0.00.20.40.60.81.0CDFAccra HTTP Accra SPDY Abu Dhabi HTTP Abu Dhabi SPDY New York HTTP New York SPDY Bremen HTTP Bremen SPDY245prove the overall page load time without adding signiﬁcant
computational load on the servers [3].

Fast-Track [28] is a proposed mechanism where the server’s
public and negotiated parameters are cached at the client
side, since the server’s parameters are nearly static. This
helps reduce the overall TLS handshake traﬃc and the num-
ber of RTTs required, thus providing substantial gain in high
latency developing countries. Unfortunately, Fast-Track re-
quires modiﬁcations to both the client and the server side
by means of TLS extensions and not all servers will have the
Fast-Track support option implemented. We do not present
measurements of the potential of TLS/SSL speedups of these
solutions because they require control over the server.

6. OTHER RELATED WORK

There is a wide range of related work in the networking
literature and we include in this section only works we have
not yet referenced. Stream Control Transmission Protocol
(SCTP) is a transport-layer protocol to replace TCP, which
provides multiplexed streams and stream-aware congestion
control [29]. HTTP 1.1 over SCTP may be used to avoid the
HOL blocking problem where when one transport protocol
data unit (TPDU) is lost, TCP does not deliver successive
TPDUs until the one that is lost is recovered. Structured
Stream Transport (SST) is a protocol that uses “structured
streams”:
lightweight, independent streams to be carried
over a common transport sharing the same congestion con-
trol context [22].

Recent work [32] investigates the conditions under which
SPDY provides improvements over HTTP. The work shows
that SPDY performs better when few network losses, high
RTTs and low bandwidth are given. We corroborate these
ﬁndings for high RTT conditions in developing countries like
Ghana.
In [21], the authors propose a simple solution to
increase TCP’s initial window size to at least ten segments,
which may also help for developing regions.

7. CONCLUSIONS

In this paper, we have presented an analysis of the key fac-
tors that trigger high end-to-end latency for web page down-
loads in Ghana. From our measurements over the past two
years, we observed that DNS is a critical bottleneck in page
load times and even the deployment of simple ideas such as
DNS caching can help improve the end-to-end performance.
Apart from DNS, we found that because of the lack of server
infrastructure within the country, every request needs to be
routed to US or European countries thereby incurring a high
network latency penalty; hence, even simple operations such
as HTTP redirections and TLS/SSL handshakes represent a
non-trivial fraction of the page load time. We experimented
with a host of well known optimizations and describe the
eﬀectiveness of some of the promising approaches including
DNS caching, DNS server placement, caching redirects, us-
ing SPDY, and TLS/SSL speedups.

8. ACKNOWLEDGEMENTS

We thank Kessir Adjaho and David Hutchful for their help
in collecting measurement data from Ghana. We would also
like to thank our shepherd Harsha V. Madhyastha and the
anonymous reviewers for their valuable feedback. Talal Ah-
mad was partially supported by the Center for Technology
and Economic Development at NYUAD (CTED).

9. REFERENCES
[1] Akamai: State of the Internet.

http://www.akamai.com/stateoftheinternet. Accessed:
2014-05-04.

[2] Alexa - The top 500 sites on the web.

http://www.alexa.com/topsites. Accessed: 2014-04-05.

[3] Is TLS Fast Yet? https://istlsfastyet.com/. Accessed:

2014-08-15.

[4] Make the Web Faster - Web metrics: Size and number of

resources. http:
//developers.google.com/speed/articles/web-metrics.
Accessed: 2014-05-04.

[5] Ookla Download Index 2012.

http://www.netindex.com/download/allcountries/.
Accessed: 2013-02-05.

[6] Root Servers. http://www.root-servers.org/. Accessed:

2013-03-15.

[7] SeleniumHQ Browser Automation, Version 2.41.0.

http://docs.seleniumhq.org/.

[8] SPDY: An experimental protocol for a faster web.
http://www.chromium.org/spdy/spdy-whitepaper.
Accessed: 2014-05-04.

[9] SSL Proﬁles: Part 1 by Jason Rahm. http:

//devcentral.f5.com/articles/ssl-profiles-part-1.
Accessed: 2014-04-05.

[10] The World in 2010: ICT Facts and Figures - ITU. http://
www.itu.int/ITU-D/ict/material/FactsFigures2010.pdf.
Accessed: 2014-05-04.

[11] Web Site Optimization: Maximum Website Performance.

http://www.websiteoptimization.com/. Accessed:
2013-05-04.

[12] World Bank Group - World Development Indicators.

http://data.worldbank.org/country/ghana. Accessed:
2013-04-30.

[13] E. Brewer, M. Demmer, M. Ho, et al. The challenges of

technology research for developing regions. Pervasive
Computing, IEEE, 5(2):15–23, 2006.

[14] M. Butkiewicz, Z. Wu, S. Li, et al. Enabling the transition

to the mobile web with websieve. In Proc. of the 14th
Workshop on Mobile Computing Systems and Applications,
HotMobile, pages 14:1–14:6, New York, NY, USA, 2013.

[15] J. Charzinski. Traﬃc properties, client side cachability and
cdn usage of popular web sites. In B. M¨uller-Clostermann,
K. Echtle, and E. P. Rathgeb, editors, MMB/DFT, Lecture
Notes in Computer Science, pages 136–150. Springer.

[16] J. Chen, L. Subramanian, J. Iyengar, and B. Ford. TAQ:

enhancing fairness and performance predictability in small
packet regimes. In Proc. of the 9th European Conference on
Computer Systems, page 7. ACM, 2014.

[17] J. Chen, L. Subramanian, and J. Li. Ruralcafe: Web search

in the rural developing world. In Proc. of the 18th
International World Wide Web Conference, 2009.

[18] M. Chetty, S. Sundaresan, S. Muckaden, et al. Measuring
Broadband Performance in South Africa. In Proc. of the
4th Annual Symposium on Computing for Development,
pages 1:1–1:10, New York, NY, USA, 2013. ACM.

[19] Sahuquillo J. Pont A. Domenech J., Gil J.A. Ddg: An

eﬃcient prefetching algorithm for current web generation.
In Proc. of the 1st IEEE Workshop on Hot Topics in Web
Systems and Technologies (HotWeb). IEEE, 2006.

[20] B. Du, M. Demmer, and E. Brewer. Analysis of WWW

traﬃc in Cambodia and Ghana. In Proc. of the 15th
International Conference on WWW, pages 771–780, 2006.
[21] N. Dukkipati, T. Reﬁce, Y. Cheng, et al. An Argument for

Increasing TCP’s Initial Congestion Window. SIGCOMM
Comput. Commun. Rev., 40(3):26–33, June 2010.

[22] B. Ford. Structured streams: A new transport abstraction.
In Proc. of the Conference on Applications, Technologies,
Architectures, and Protocols for Computer
Communications, SIGCOMM ’07, pages 361–372, New
York, NY, USA, 2007. ACM.

246[23] S. Guo, MH Falaki, EA Oliver, et al. Very low-cost internet

[28] H. Shacham and D. Boneh. Fast-track session establishment

access using KioskNet. SIGCOMM Comput. Commun.
Rev., 2007.

[24] B. Hull, V. Bychkovsky, Y. Zhang, et al. CarTel: A

distributed mobile sensor computing system. Sensys, pages
125–138, 2006.

[25] Z. Koradia, G. Mannava, A. Raman, et al. First

impressions on the state of cellular data connectivity in
india. In Proc. of the 4th Annual Symposium on Computing
for Development, Cape Town, South Africa, 2013.

[26] O. Ngwenyama, F. K. Andoh-Baidoo, F. Bollou, and

O. Morawczynski. Is There A Relationship Between ICT,
Health, Education And Development? An Empirical
Analysis of ﬁve West African Countries from 1997-2003.
The Electronic Journal of Information Systems in
Developing Countries, 23, 2006.

[27] F. Baker P. Natarajan and P. D. Amer. Multiple TCP

Connections Improve HTTP Throughput Myth or Fact? In
Proc. of the IEEE 28th Int’l Performance Computing and
Communications Conference. IEEE, 2009.

for TLS. In Mahesh Tripunitara, editor, Proc. of NDSS
2002, pages 195–202. Internet Society (ISOC), 2002.
[29] R. Stewart. Stream Control Transmission Protocol,

September 2007. RFC4960.

[30] S. Sundaresan, N. Feamster, R. Teixeira, and N. Magharei.
Measuring and Mitigating Web Performance Bottlenecks in
Broadband Access Networks. In Proc. of the ACM Internet
Measurement Conference, Barcelona, Spain, 2013.

[31] X. S. Wang, A. Balasubramanian, et al. Demystify Page
Load Performance with WProf. In Proc. of the USENIX
conference on Networked Systems Design and
Implementation (NSDI), 2013.

[32] X. S. Wang, A. Balasubramanian, A. Krishnamurthy, and
D. Wetherall. How Speedy is SPDY? In Proc. of the 11th
USENIX Symposium on Networked Systems Design and
Implementation (NSDI), pages 387–399, Seattle, WA, 2014.

247