Challenges in Inferring Internet Interdomain Congestion

Matthew Luckie

CAIDA / UC San Diego

mjl@caida.org

Amogh Dhamdhere
CAIDA / UC San Diego
amogh@caida.org

David Clark

MIT

ddc@csail.mit.edu

Bradley Huffaker
CAIDA / UC San Diego
bradley@caida.org

ABSTRACT
We introduce and demonstrate the utility of a method to
localize and quantify inter-domain congestion in the Inter-
net. Our Time Sequence Latency Probes (TSLP) method
depends on two facts: Internet traﬃc patterns are typically
diurnal, and queues increase packet delay through a router
during periods of adjacent link congestion. Repeated round
trip delay measurements from a single test point to the two
edges of a congested link will show sustained increased la-
tency to the far (but not to the near) side of the link, a
delay pattern that diﬀers from the typical diurnal pattern
of an uncongested link. We describe our technique and its
surprising potential, carefully analyze the biggest challenge
with the methodology (interdomain router-level topology in-
ference), describe other less severe challenges, and present
initial results that are suﬃciently promising to motivate fur-
ther attention to overcoming the challenges.

Categories and Subject Descriptors
C.2.5 [Local and Wide-Area Networks]: Internet; C.2.1
[Network Architecture and Design]: Network topology

Keywords
Interdomain congestion; Internet topology

1.

INTRODUCTION

Unlike traﬃc congestion on links within a single network
(AS), where responsibility for resolving the congestion un-
ambiguously belongs to that network, congestion on AS in-
terconnection links (or interdomain congestion) may reﬂect a
peering dispute, accompanied by ﬁnger-pointing over which
network should pay to upgrade the link to handle the traf-
ﬁc demand. The two primary forms of interconnection are
transit, when one AS sells another ISP access to the global
Internet, and peering, when two ISPs interconnect to ex-
change customer traﬃc. The historical basis for settlement-
free peering was a presumed balance of value to both parties.

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
IMC’14, November 5–7, 2014, Vancouver, BC, Canada.
Copyright 2014 ACM 978-1-4503-3213-2/14/11 ...$15.00.
http://dx.doi.org/10.1145/2663716.2663741.

kc claffy

CAIDA / UC San Diego

kc@caida.org

Peering disputes arise when one party believes the ex-
change is no longer beneﬁcial to them. Historically, peer-
ing disputes were between large transit networks (e.g. [5,10,
32]) where one party would fall out of compliance with the
agreement and be disconnected by the other party until a
new agreement was reached. More recent peering disputes
are fueled by exploding demand for high-bandwidth content
(e.g., streaming video), and growing concentration of con-
tent among a few content distribution networks (e.g. [1, 3,
4, 6, 13, 14, 37]), some large and sophisticated enough to ad-
just loading (and thus congestion levels) on interconnection
links [9,15]. Many disputes do not lead to disconnection but
stalled negotiation about who should pay for installation of
new capacity to handle the demand, leaving the congested
link as an externality for all users of the link until the dispute
is resolved.

Unsurprisingly, there is growing public policy interest in
the extent and scope of congestion induced by persistently
unresolved peering disputes, and how harmful it is to con-
sumers. Unfortunately, almost no data is available for re-
searchers to study interconnection controversies. Traﬃc data
and peering terms are almost always under NDA for news-
worthy peering disputes; providers obfuscate network iden-
tities when they discuss congestion at all [35].

We provide three contributions to understanding the preva-
lence of interdomain congestion. First, we introduce and
demonstrate the utility of a highly scalable probing method
that allows us, from the edge of a given network to localize
and characterize congestion on its interdomain links (sec-
tion 2). Second, we analyze the many challenges associated
with using this method to create a map of interdomain con-
gestion, and how we have either started or plan to handle
them (section 3). Third, we apply our method to illustrate
evidence of persistent interdomain congestion involving large
access and content providers (section 4). We compare our
approach with related work in section 5 and identify ongoing
future work in section 6.

2. TIME SEQUENCE LATENCY PROBES
The idea behind the time-sequence latency probes (TSLP)
method is to frequently repeat round trip time (RTT) mea-
surements from a vantage point (VP) to the near and far
routers of an interdomain link. The measured RTTs are a
function of the queue lengths of the routers on the forward
and reverse paths: as queue lengths increase, so does RTT.
When RTTs increase to the far router but not to the near
router, we infer that a queue between these two routers in-
duced the delay.

15 120

 100
 80

 60

 40
 20

 0
 3
 2
 1
 0
Thu
7th

)
s

m

(
 
T
T
R

)

%

(
 
e
t
a
r
 
s
s
o
L

RTT measurements of border routers

Cogent (far)
Comcast (near)

Loss rate to far border router

Wed
Fri
13th
8th
Day of week in November 2013 (in New York)

Mon
11th

Tue
12th

Sat
9th

Sun
10th

Thu
14th

Figure 1: Comparing link utilization (top panel)
with measured RTT (middle panel) on a 50Mbps
customer link operated by a R&E network. The
bottom scatterplot suggests that as the 1-minute
average load exceeds ≈85%, increasing numbers of
probes to the far side of the link encounter a queue,
suggesting congestion at that moment.

Lending some conﬁdence to this method, ﬁgure 1 plots
a week of traﬃc (SNMP byte counters sampled per-minute)
and RTT measurements across a research and education net-
work link known by the operator to be well utilized. The 30-
minute average utilization on the link (top graph) correlates
with periods when some probes experience increased RTT
to the far end of the interdomain link (middle graph). The
bottom graph shows that most RTT measurements above
10ms occur when the average utilization is above 85%. To
maximize the chance of observing RTT variation across a
speciﬁc link, TSLP sends TTL-limited packets toward the
same destination that expire at the near and far routers,
rather than send packets addressed to the border routers.

If a link is so busy that a tail-drop queue is always close
to full, a time series of RTT measurements to the far router
will approximate a square wave, with the minimum RTT
during the low state reﬂecting probes that did not experi-
ence delay, and the minimum RTT during the high state
reﬂecting probes consistently encountering a queue close to
full. Queue lengths are ﬁnite, limiting the delay contributed
by any one queue, reﬂected by the top of the square wave.
Figure 2 shows such an RTT pattern on a peering link be-
tween Comcast and Cogent; the minimum RTT measured
every ﬁve minutes to the Cogent router increased from 20ms
to 70ms for 14-18 hours per day. We also probed every sec-
ond to observe packet loss across this link, which we only
observed in periods where we also observed increased RTT.
We hypothesize that the increasing loss rate correlates with
increasing demand on the link, and that the width of the
period with elevated delays reﬂects the length of time the

Figure 2: Congestion on an interdomain link be-
tween Comcast and Cogent, measured from a VP
within Comcast. The RTT to the Cogent (far)
router increases from 20ms to 70ms while the RTT
to the Comcast (near) router is stable at 20ms. The
approximate square wave indicates the queue is al-
ways close to full when the RTT increases to 70ms.
The loss rate from the Cogent router increases af-
ter this level shift occurs, as the load on the link
continues to increase.

link was congested. The height of the elevated period is not
an indication of the degree of congestion, but rather the size
of a queue in a router serving the interdomain link.

We asked the ISPs involved to validate our inferences of
this and other links that exhibit this behavior, but they
are generally blocked by NDAs from sharing traﬃc data.
Informal feedback from content, transit, and access network
operators has given us conﬁdence in our observations.

We believe the TSLP approach is a relatively lightweight
method for obtaining data to map which interdomain links
attached to the local network are congested. Compared
with available bandwidth measurement techniques, such as
pathload which sends 12 streams of 100 packets in 15 sec-
onds [21] and requires tomography to identify which is the
constraining link, TSLP uses 2 packets every 5 minutes to
sample a targeted interdomain link, and does not require a
cooperative end-host at the other end of the path. However,
TSLP does send enough traﬃc that it would not scale to
deployment in video players for diagnostic purposes. Many
concurrent TSLP ﬂows would trigger router ICMP response
rate-limiting which defeats the method. Furthermore, TSLP
requires a delay history to detect level shifts, and consumer
video devices tend to operate only when the user wants to
view a video. The value of TSLP is not in its potential uni-
versal deployment, but the insight that a remarkably sparse
deployment can provide to all users sending or receiving traf-
ﬁc over TSLP-measured interconnection links.

Tulip [27] sends ICMP timestamp messages directly to
routers to infer per-hop queuing delay for routers in the for-
ward path as part of a system for diagnosing and pinpointing
faults in Internet paths. Compared with their work, we are
focused on ﬁnding which interdomain links are consistently
underprovisioned, and we do not sample an interdomain link
by sending packets directly to routers.

16Figure 3: Challenges in AS boundary inference from traceroute for network X. In (a), it is unclear whether
x2, announced by X, or a1 announced by A correspond to the far border router. In (b), X’s peer C responds
using an address d1 originated by D, which could cause a false AS link inference X-D. In (c), we observe X’s
(unseen) peer with address x6 originated by X, which could cause E’s customers F and G to be incorrectly
inferred as connected to X. In (d), we do not observe any responding address in H, which could cause us to
not infer that x8 represents H’s border router.

3. METHODOLOGICAL CHALLENGES

3.2 Inferring Interdomain Links

While TSLP is a simple and surprisingly eﬀective method
for inferring congested links, there are many challenges to
applying it eﬀectively: identifying congestion on links with
active queue management and/or weighted fair queueing
policies; accurately ﬁnding and identifying all interdomain
links involving the AS hosting a vantage point; proving the
response from the far router returns over the targeted inter-
domain link; determining the direction of congestion; robust-
ness to ICMP queuing behavior; adapting to path dynamics;
and scaling processing to thousands of interdomain links.

3.1 AQM and WFQ

Active Queue Management (AQM) and Weighted Fair
Queueing (WFQ) present challenges to TSLP. AQM tech-
niques such as Random Early Detection [17] (RED) and
successors try to maintain a small average queue size by dis-
carding packets before a queue becomes full, as a function
of the queue’s current length. RED tries to prevent TCP
global synchronization, where multiple senders experience
packet loss at the same time and collectively reduce their
transmission rate, resulting in an ineﬃcient use of capacity.
However, AQM techniques are not widely deployed [31], in
part because operators traditionally provision links to meet
forecasted demand; the only measurement study of RED de-
ployment we know of was among access networks [12] rather
than interdomain links. Where AQM techniques such as
RED are deployed on congested links such as that in ﬁg-
ure 2, we hypothesize that the level shift from low to high
state will be more gradual as TCP connections encounter
earlier loss, though we still expect to see the queue approach
a state where it is nearly always full with this oﬀered load.
A larger challenge is links that use a fair queueing strategy,
where the router places packets in diﬀerent queues accord-
ing to some property, such as the incoming port or sender.
TSLP cannot infer link congestion when our packets are
placed in a queue that does not experience delay. From
an interaction with one network operator, we learned that
they had deployed WFQ on some of their persistently con-
gested links; TSLP observed no level shift on these links,
presumably due to the WFQ behavior.

If a public BGP view of the AS hosting a VP is provided
to RouteViews or RIPE’s RIS, then identifying interdomain
links and paths where their border routers can be found is
relatively simple. While some large access ISPs (including
Verizon and AT&T) provide a public view, most large ac-
cess ISPs (including Comcast, Time Warner, Cox, and RCN)
do not, so we must infer AS links and corresponding border
routers with traceroute, which is known to be diﬃcult [8,39].
For each VP, we tracerouted to the ﬁrst (.1) address in each
of the 465,944 non-overlapping preﬁxes observed by Route-
Views collector rv2, used BGP data to map the encountered
IP addresses to ASes, and inferred an interdomain link when
we observed the ﬁrst address in a traceroute path that maps
to an AS outside the VP’s hosting network. However, this
method may not correctly identify the border routers, or
their owners, depending on how interfaces are numbered.

Figure 3 illustrates the variety of things that can go wrong.
In ﬁgure 3a, when we observe traceroute path x1, x2, a1, a
simple IP-AS mapping incorrectly suggests the interdomain
link is between R2 and R3, when it is between R1 and R2.
More generally, the interdomain hop could be either the hop
at which the IP-AS mapping changed, or one hop before.
The convention in a customer-provider interconnection is to
number the customer router interface from the provider’s
address space, which identiﬁes R2 as the customer border
router and the interdomain link as between R1 and R2, but
there is no address assignment convention for peers.

It is usually simple to identify a border router connect-
ing multiple peers as owned by the VP’s network. However,
some addresses observed after a border router may cause
false interdomain link inferences because they map to third-
party ASes, a well known challenge in AS topology map-
ping [39]. Figure 3b illustrates the danger: R4, owned by
AS C, may respond with address d1 which maps to AS D.
We can improve the robustness of our inferences in the pres-
ence of third party addresses with two heuristics. First, if
we require interface d1 to have been observed in a tracer-
oute path toward a preﬁx announced by D, d1 is unlikely
to be a third-party address. However, this ﬁlter discards
many true adjacencies if no paths toward a preﬁx in B cross
a speciﬁc interconnection with B. A second heuristic can re-

17tain some of these adjacencies by proving b1 is not a third-
party address: b1 represents the incoming interface on R3
and a point-to-point interdomain link between X and B if
b2 is in the same /30 or /31 subnet and is an alias of x4.
We used this heuristic to prove that most addresses in a
traceroute path represent the inbound interface on a point-
to-point link [26]. Finally, if the interfaces used to infer
an adjacency with D were x4 and d1, and address d1 was
probed, we have learned to be skeptical of the x4 - d1 ad-
jacency, as a router with d1 conﬁgured will reply to probes
to d1 with that address; d1 might be conﬁgured on R3 and
connect a subnet one hop away. When we receive a response
directly from d1, we try to discern the router it is connected
to by probing another address in the same preﬁx as d1 to
solicit a TTL-exceeded response from the router on the path.
We have encountered related cases where we only observed
the neighbor’s border router and no further hops owned by
the neighbor network. Figure 3c illustrates the implications
of this challenge: R2 is owned by E, but we observe only
x6 on the router, and subsequent interfaces f1 and g1 could
falsely imply interdomain links between X and F, G. We
resolve these ambiguities by ﬁnding a common provider AS
E for both F and G which we derive from CAIDA’s AS
relationship inferences [25].

In some cases we never observed an address in a neighbor
network. Figure 3d illustrates this challenge: R2 is owned
by H but R2’s address x8 is the last address we observed
in the traceroute. To infer R2 is owned by H, we infer a
common origin AS to the preﬁxes probed.

Chen et al. [8] used traceroute and BGP data to derive
AS links from traceroute paths using heuristics more robust
than a simple IP-AS mapping. Their work addressed the
third-party address (ﬁgure 3b) and one-hop in neighbor net-
work (ﬁgure 3c) problems by comparing AS paths inferred
with traceroute to AS paths observed in BGP for the cor-
responding preﬁx.
If they found an extra AS hop (D in
X-D-C in ﬁgure 3b) they removed D from the traceroute-
inferred AS path.
If they found a missing AS hop (E in
X-E-F in ﬁgure 3c) they added E to the traceroute-inferred
path. However, they do not adjust IP-AS mappings or as-
sign owners to routers. Integration of their techniques would
likely improve our router ownership heuristics.

Mao et al. [29] adjusted IP-AS mappings by changing the
owner of /24 preﬁxes to make traceroute-inferred AS paths
congruent with BGP AS paths collected in the same AS.
However, individual addresses (x2 and x8 in ﬁgure 3) are not
mapped to diﬀerent owner ASes. Zhang et al. [38] adjusted
IP-AS mappings using the same approach as Mao et al. [29]
but at /32 granularity; they did not use AS relationship data
(customer relationships) to infer owners of border routers so
did not adjust x2 unless it made traceroute AS paths more
congruent. Huﬀaker et al. [19] evaluated heuristics using
router alias, AS relationships, and AS degrees. For routers
with addresses from multiple ASes, assigning ownership to
the AS with most addresses on the router yielded the most
accurate results.

3.3 Asymmetric paths

A TTL-limited response from the far border router might
not return via the near router, because the far router is
operated by a diﬀerent AS that might have a more preferred
path toward our VP. In general, we hypothesize that a peer
will respond via the near router, a provider will respond

via the near router except in cases where the VP’s AS (i.e.,
the customer) is doing traﬃc engineering, and a customer
will respond via the near router unless it has a lower-cost
path. We evaluated two methods to gain conﬁdence that an
increase in measured RTT from a near to a far router is due
solely to traﬃc on the link connecting the two routers; that
is, the link behavior was isolated. Katz-Bassett et al. used
these two methods in reverse traceroute [22].

Pre-speciﬁed timestamps (PSTS): The PSTS IP op-
tion allows a host to request other hosts embed a timestamp
in the packet. Using the notation in [33], G|BCDE denotes
a probe to destination G that requests hosts with addresses
B, C, D, and E to include timestamps. The option includes
a pointer to the next timestamp slot in the packet, which
advances when a router embeds a timestamp; if the packet
visits C but not B ﬁrst, then C will not embed a timestamp.
Using the topology in ﬁgure 3a, to test if R3 returns packets
to our VP via R2, we send an ICMP echo request packet in
the form a1|a1x2. If both a1 and x2 embed a timestamp, we
infer the packet was returned across the R2-R3 link.

Record Route (RR): The RR IP option allows a host
to request that up to nine hosts embed an IP address as they
forward the packet. To test if R3 returns packets to our VP
via R2, we send an ICMP echo request packet with the RR
option set to R3. If we observe an address belonging to R3
in the RR option in the response, and an address belonging
to R2 immediately after, we infer the packet returned across
the R2-R3 link.

Preliminary Evaluation: Both the PSTS and RR op-
tions are known to have limitations due to routers that ei-
ther do not implement the functionality, discard packets that
contain options, or (in the case of RR) do not have suﬃcient
space to embed the addresses of interest. Of the 599 inter-
domain router links involving Comcast that we assembled
from our Ark VP (mry-us) deployed in Monterey, California
we use either PSTS or RR to infer that 179 (29.9%) returned
over the targeted link; 72 (12.0%) were isolated only with
RR, and 78 (13.0%) were isolated with only PSTS. We could
not isolate 71 (11.9%) because all nine slots were used, and
the remainder (58.2%) were unresponsive to these IP op-
tions or inconclusive; diﬀerent addresses in traceroute and
RR may belong to the same router but resist alias resolu-
tion. We manually checked a few paths that RR suggests
did not return over the targeted link; we observed, for ex-
ample, Comcast’s provider Tata forwarding packets that it
received in Los Angeles to the San Jose interconnection.

3.4 Other challenges

ICMP queuing behavior: A concern with using ICMP
TTL-exceeded responses is that routers may delay these re-
sponses (process them through the slow path), especially
during periods of high load; we may thus measure load on
the router and not congestion on a speciﬁc link. But it is un-
likely that slow path processing would induce the same delay
for each probe response, so using the minimum RTT during
a given time window will more likely reﬂect the queue size,
improving TSLP’s robustness to potential idiosyncrasies in
ICMP behavior. In some routers, the ICMP response gener-
ation delay spikes every 60 seconds due to periodic mainte-
nance activity [27]. This behavior will mislead TSLP when
our 5-minute samples synchronize with the maintenance ac-
tivity. To avoid this problem we could randomize the send
time of our probes in each 5-minute measurement round.

18Figure 4: FFT analysis of time series data from the
Comcast-Cogent interdomain link in ﬁgure 2. The
sharp peak at f =1/day implies a strong diurnal pat-
tern in the time series.

Determining the direction of congestion: Even when
we are conﬁdent that the TTL-exceeded response from the
far end of the router returns via the target link, we do not
know whether the congestion on that link is in the forward
or reverse direction (from the perspective of our VP). To
determine the direction of congestion on the targeted link
we could use the prespeciﬁed timestamp option, sending a
sequence of probes toward the target link, soliciting times-
tamp t1
n from the near router, tf from the far interface,
and t2
n from the near router again. Clock skew between the
routers prevents use of the diﬀerence in these timestamps to
estimate queuing delay; however, if tf - t1
n shows a diurnal
pattern, then we can infer that the link is congested in the
forward direction. If t2
n - tf shows a diurnal pattern, then
the link is congested in the reverse direction.

Adapting to change: Our probing setup infers interdo-
main links from traceroutes, and notes the distance from the
VP at which each target is seen. However, network routing
may change over time; the path to a destination may tra-
verse a diﬀerent interdomain link, or the same interdomain
link may be seen at a a diﬀerent distance from the VP. To
adapt to change, each VP runs a topology discovery process
in the background to continuously map interdomain links
and their distance from the VP. We then adapt our probing
to respond to changes in the measured topology.

Automated trace processing: A VP that tests every
interconnection link out of its AS can yield hundreds (ac-
cess) or thousands (tier-1) of interdomain links, requiring
some automated method to detect evidence of congestion.
In our initial study, a repeating diurnal pattern with a con-
sistent duration of RTT change, such as that presented in
the Comcast-Cogent interdomain link in ﬁgure 2, manifested
clearly in a frequency domain transformation using a Fast
Fourier Transform (FFT) with power density at f = 1/day in
ﬁgure 4. A time series of RTT samples that contains a power
density at 1 can be automatically identiﬁed as interdomain
congestion. However, some RTT patterns imply congestion
is present for only part of the week or weekend. In this case
a wavelet transform may reveal the structure of frequencies
across time. In the limit, there is a decision as to whether
these cases represent noteworthy congestion, which is not an
issue any classiﬁer will resolve.

4. CASE STUDIES

We present ﬁve case studies showing the potential of the
TSLP method to provide empirical data on peering disputes.
Evolution of congestion on Comcast links: A resi-
dential Ark monitor in Comcast’s network in Monterey, Cal-
ifornia continuously performs ICMP Paris traceroutes to-
ward randomly chosen destinations in all routed IPv4 /24

Figure 5:
Inferred congestion duration (using
CUSUM-based [36] level shift detection) for links
connecting three major networks to Comcast. By
February 2014, the Cogent and Level3 links were
congested up to 18 and 14 hours per day, respec-
tively. After Netﬂix and Comcast signed a peering
agreement in February 2014, congestion on those
links disappeared.

preﬁxes [20]. Large transit networks that are in the path
to many destinations have their interdomain links sampled
frequently. Our packets traversed interdomain links with
Cogent, Level3, and Tata, which also transited Netﬂix traf-
ﬁc. To discover elevated RTTs in this data we used a level
shift detection method that relies on the rank-based non-
parametric statistical test CUSUM [36], which is robust to
outliers and makes no assumptions about the distribution of
underlying RTTs. Figure 5 shows the inferred duration of
congestion on these links (in hours per day) from February
2013 to April 2014. Both the Cogent and Level3 links grow
from being congested 4-6 hours per day in February 2013
to a maximum of 18 hours (Cogent) and 14 hours (Level3)
in February 2014. From mid-May to mid-July, the conges-
tion signal on the Level3 link is replaced with congestion on
the TATA link, suggesting a signiﬁcant volume of traﬃc was
shifted from the Level3 to the TATA link. In late February
2014, Netﬂix and Comcast agreed to peer directly, and then
congestion on the Cogent and Level3 links disappeared.

Netﬂix and Comcast direct peering: After the Febru-
ary 2014 agreement between Comcast and Netﬂix, our TSLP
probes from the Comcast network started traversing direct
peering links toward Netﬂix preﬁxes. For most interconnec-
tions, there was no level shift in RTT values that indicated
a queue was always close to full. However, the peering link
between Comcast and Netﬂix in San Jose, CA still appeared
congested for 2-3 hours per day in April 2014 (ﬁgure 6a). We
asked Netﬂix about it and learned that they had not fully
deployed their peering with Comcast at San Jose.

Google and Free: Inspired by customer reports of poor
performance of Youtube videos on Free’s network [1], we
used our Ark monitor in Free’s network to measure the near
and far end of a link between Google and Free with TSLP.
Figure 6b shows a link that appears congested for 4-6 hours
at peak time on weekdays, and more than 12 hours on the
weekends (March 22nd and 23rd).

Level3 and AT&T, Verizon:

In April 2014, Level3
published an article on their persistently congested links
with six large broadband consumer networks: ﬁve were in
the US and one in Europe [35]. They published an MRTG
graph of their interconnect with an unnamed peer in Dallas,

19)
s

m

(
 
T
T
R

 160
 140
 120
 100
 80

1st
Tues

(a)

Comcast (near) and Netflix (far)

2nd

3rd

4th

5th

Date in April 2014 (localtime in San Jose)

6th

7th

 40

 30

 20

)
s

m

(
 
T
T
R

 10

28th
Fri

(c)

Level3 (near) and AT&T (far)

29th
3rd
Date in March/April 2014 (localtime in Dallas)

30th

31st

2nd

1st

 70
 60
 50
 40
 30

19th
Weds

)
s

m

(
 
T
T
R

8th
Tues

 40

 30

 20

)
s

m

(
 
T
T
R

4th
Fri

 10

28th
Fri

(b)

Free (near) and Google (far)

20th

21st

22nd

23rd

24th

25th

Date in March 2014 (localtime in France)

(d)

Level3 (near) and Verizon (far)

29th
Date in March/April 2014 (localtime in Dallas)

30th

31st

2nd

1st

3rd

26th
Weds

4th
Fri

Figure 6: Case studies of four interdomain connections, discussed in section 4.

Texas. From our Ark monitor in Level3’s network, we were
able to observe congestion on Level3’s interconnections with
both AT&T and Verizon (we presume two of the broadband
consumer networks) in Dallas (ﬁgures 6c and 6d). These
links appear congested for 6 hours during weekdays and up
to 16 hours during weekends in March/April 2014, and both
are consistent with the anonymized MRTG graph published
by Level3. While both time series are similar for this se-
lected week (we chose to coincide with the MRTG graph in
the Level3 article) we observe diﬀerences in the diurnal pat-
tern on March 31st: AT&T was congested longer, and we
believe it is the anonymized example [35]. For Verizon, the
last day we observed the diurnal pattern was June 22nd. For
AT&T, the last day we observed the pattern was July 14th;
our Ark monitor was down until the 19th, and the signal was
gone when the monitor restarted. This example illustrates
the power of our technique to (1) provide independent evi-
dence of speciﬁc congestion, (2) identify the parties involved
where the parties themselves cannot do so because of their
NDA agreements, and (3) inform the public debate.

5. OTHER RELATED WORK

Current methods of measuring systematic congestion re-
quire instrumentation at both ends of a path being mea-
sured [18, 30], but our TSLP method can potentially mea-
sure congestion from any VP hosted in an AS to any inter-
domain link involving that AS provided the link can be iso-
lated. More recently researchers have studied in-home [7,11],
and broadband access [2, 16, 23, 34] performance issues, and
whether these components are the end-to-end performance
bottlenecks for most users. Liu and Crovella used simula-
tion to show that the loss-pairs methodology [24] can infer
if a router uses AQM or tail-drop. Mahimkar et al. used a
level shift detection algorithm to correlate changes in net-
work performance with network upgrades [28].

6. CONCLUSION

We developed and tested a simple method of identifying
congestion on interdomain links, and used it to study sev-
eral incidents of reported congestion on interdomain links
that correlate with reports of contested business negotia-
tions between the ASes. The advantages of this method are
its conceptual, implementation, and deployment simplicity.

In contrast to experiments that produce broadband perfor-
mance maps, which require VPs at many access points, we
can measure interdomain links from a given serving area of
an ISP with one VP. Most importantly, the TSLP method
does not require a server on the other side of the link be-
ing probed. Approaches that depend on a server may re-
veal evidence of congestion from one measurement, but re-
quire either instrumentation in the right two places, and/or
complex correlation and tomography to localize the point of
congestion. Since the vast majority of links do not exhibit
persistent congestion, being able to localize congestion deep
in the network from a single endpoint has beneﬁts that jus-
tify further attention by the research community to resolve
the many challenges we have described.

The major challenge is not ﬁnding evidence of congestion
but associating it reliably with a particular link. This diﬃ-
culty is due to inconsistent interface numbering conventions,
and the fact that a router may have (and report in ICMP
responses) IP interface addresses that come from third-party
ASes. This problem is well understood, but not deeply stud-
ied. Going forward we will study this problem, as well as
focus on localizing the directionality of congestion.

We have reported early results from a new project to
detect and measure congestion at Internet interconnection
points, an issue of recent interest due to the changing nature
of Internet traﬃc over the last decade. For the thousands of
interconnection links we have probed thus far, we have not
found evidence of widespread persistent congestion, which is
good news, but also suggests the value of a lightweight tech-
nique that can locate interdomain congestion from a VP at
the edge. We plan to deploy VPs in as many access networks
as possible, to generate a global “congestion heat map” of the
Internet, cross-validate with non-ICMP traﬃc, and publish
evidence of congestion over time.

Acknowledgments
We thank the operators who discussed aspects of their net-
work’s operations, Ahmed Elmokashﬁ who provided an im-
plementation of CUSUM-based level shift detection, and the
anonymous reviewers and Ethan Katz-Bassett for their feed-
back. This work was supported by the U.S. NSF CNS-
1414177 and CNS-1413905, by Comcast, and by Verisign,
but the material represents only the position of the authors.

207. REFERENCES
[1] R. Andrews and S. Higginbotham. YouTube sucks on
French ISP Free, and French regulators want to know
why. GigaOm, 2013.

[2] S. Bauer, D. Clark, and W. Lehr. Understanding
Broadband Speed Measurements. In TPRC, 2010.

[3] J. Brodkin. Time Warner, net neutrality foes cry foul

over Netﬂix Super HD demands, 2013.

[4] J. Brodkin. Why YouTube buﬀers: The secret deals

that make-and break-online video. Ars Technica, July
2013.

[5] S. Buckley. Cogent and Orange France ﬁght over

interconnection issues. Fierce Telecom, 2011.

[6] S. Buckley. France Telecom and Google entangled in

peering ﬁght. Fierce Telecom, 2013.

[7] K. L. Calvert, W. K. Edwards, N. Feamster, R. E.

Grinter, Y. Deng, and X. Zhou. Instrumenting home
networks. ACM SIGCOMM CCR, 41(1), Jan. 2011.

[8] K. Chen, D. R. Choﬀnes, R. Potharaju, Y. Chen,

F. E. Bustamante, D. Pei, and Y. Zhao. Where the
sidewalk ends: Extending the Internet AS graph using
traceroutes from P2P users. In ACM CoNEXT, Dec.
2009.

[9] Y. Chen, S. Jain, V. K. Adhikari, and Z.-L. Zhang.

Characterizing roles of front-end servers in end-to-end
performance of dynamic content distribution. In ACM
SIGCOMM IMC, Nov. 2011.

[10] S. Cowley. ISP spat blacks out Net connections.

InfoWorld, 2005.

[11] L. DiCioccio, R. Teixeira, M. May, and C. Kreibich.

Probe and Pray: Using UPnP for Home Network
Measurements. In PAM, pages 96–105, 2012.

[12] M. Dischinger, A. Haeberlen, K. P. Gummadi, and

S. Saroiu. Characterizing residential broadband
networks. In ACM SIGCOMM IMC, Oct. 2007.

[13] J. Engebretson. Level 3/Comcast dispute revives

eyeball vs. content debate, Nov. 2010.

[14] J. Engebretson. Behind the Level 3-Comcast peering

settlement, July 2013.
http://www.telecompetitor.com/behind-the-
level-3-comcast-peering-settlement/.

[15] P. Faratin, D. Clark, S. Bauer, W. Lehr, P. Gilmore,

and A. Berger. The growing complexity of Internet
interconnection. Communications and Strategies,
(72):51–71, 2008.

[16] FCC. Measuring Broadband America, 2011.

http://www.fcc.gov/measuring-broadband-america.

[17] S. Floyd and V. Jacobson. Random early detection

(RED) gateways for congestion avoidance. IEEE/ACM
Transactions on Networking, 1(4):397–413, 1993.
[18] D. Genin and J. Splett. Where in the Internet is

congestion?, 2013. http://arxiv.org/abs/1307.3696.

[19] B. Huﬀaker, A. Dhamdhere, M. Fomenkov, and

kc claﬀy. Toward topology dualism: Improving the
accuracy of AS annotations for routers. In PAM, Apr.
2010.

[20] Y. Hyun, B. Huﬀaker, D. Andersen, M. Luckie, and

K. C. Claﬀy. The IPv4 Routed /24 Topology Dataset,
2014. http://www.caida.org/data/active/ipv4_
routed_24_topology_dataset.xml.

[21] M. Jain and C. Dovrolis. End-to-end available

bandwidth: Measurement methodology, dynamics,
and relation with TCP throughput. IEEE/ACM
Transactions on Networking, 11(4):537–549, 2003.

[22] E. Katz-Bassett, H. V. Madhyastha, V. K. Adhikari,
C. Scott, J. Sherry, P. vas Wesep, T. Anderson, and
A. Krishnamurthy. Reverse traceroute. In USENIX
NSDI, Apr. 2010.

[23] C. Kreibich, N. Weaver, B. Nechaev, and V. Paxson.

Netalyzr: Illuminating the Edge Network. In ACM
SIGCOMM IMC, 2010.

[24] J. Liu and M. Crovella. Using loss pairs to discover

network properties. In ACM SIGCOMM IMW, Nov.
2001.

[25] M. Luckie, B. Huﬀaker, A. Dhamdhere, V. Giotsas,
and k claﬀy. AS relationships, customer cones, and
validation. In ACM SIGCOMM IMC, 2013.

[26] M. Luckie and kc claﬀy. A second look at detecting

third-party addresses in traceroute traces with the IP
timestamp option. In PAM, 2014.

[27] R. Mahajan, N. Spring, D. Wetherall, and

T. Anderson. User-level Internet path diagnosis. In
ACM SOSP, Oct. 2003.

[28] A. A. Mahimkar, H. H. Song, Z. Ge, A. Shaikh,

J. Wang, J. Yates, Y. Zhang, and J. Emmons.
Detecting the performance impact of upgrades in large
operational networks. In ACM SIGCOMM, Aug. 2010.

[29] Z. M. Mao, D. Johnson, J. Rexford, J. Wang, and

R. Katz. Scalable and accurate identiﬁcation of
AS-Level forwarding paths. In IEEE INFOCOM, Mar.
2004.

[30] M. Mathis. Model Based Bulk Performance Metrics.

http://datatracker.ietf.org/doc/draft-ietf-
ippm-model-based-metrics/, Oct 2013.

[31] K. Nichols and V. Jacobson. Controlling queue delay.

ACM Queue, 10(5), May 2012.

[32] M. Ricknas. Sprint-Cogent dispute puts small rip in

fabric of Internet. PCWorld, Oct. 2008.

[33] J. Sherry, E. Katz-Bassett, M. Pimenova, H. V.

Madhyastha, T. Anderson, and A. Krishnamurthy.
Resolving IP aliases with prespeciﬁed timestamps. In
ACM SIGCOMM IMC, Nov. 2010.

[34] S. Sundaresan, W. de Donato, N. Feamster,

R. Teixeira, S. Crawford, and A. Pescap`e. Broadband
Internet performance: A view from the gateway. In
ACM SIGCOMM, 2011.

[35] M. Taylor. Observations of an Internet Middleman,

May 2014. http://blog.level3.com/global-
connectivity/observations-internet-middleman/.
[36] W. A. Taylor. Change-point analysis: A powerful new

tool for detecting changes, 2000. http:
//www.variation.com/cpa/tech/changepoint.html.

[37] Verizon. Unbalanced peering, and the real story
behind the Verizon/Cogent dispute, June 2013.
http://publicpolicy.verizon.com/blog/.

[38] B. Zhang, J. Bi, Y. Wang, Y. Zhang, and J. Wu.

Reﬁning IP-to-AS mappings for AS-level traceroute.
In IEEE ICCCN, July 2013.

[39] Y. Zhang, R. Oliveira, H. Zhang, and L. Zhang.

Quantifying the pitfalls of traceroute in AS
connectivity inference. In PAM, 2010.

21