Let Me Answer That For You: Exploiting Broadcast 

Information in Cellular Networks

Nico Golde, Kévin Redon, and Jean-Pierre Seifert, 

Technische Universität Berlin and Deutsche Telekom Innovation Laboratories

Open access to the Proceedings of the 22nd USENIX Security Symposium is sponsored by USENIXThis paper is included in the Proceedings of the 22nd USENIX Security Symposium.August 14–16, 2013 • Washington, D.C., USAISBN 978-1-931971-03-4Let Me Answer That For You: Exploiting Broadcast Information in Cellular

Networks

Nico Golde, K´evin Redon, Jean-Pierre Seifert

Technische Universit¨at Berlin and Deutsche Telekom Innovation Laboratories

{nico, kredon, jpseifert}@sec.t-labs.tu-berlin.de

Abstract

Mobile telecommunication has become an important part
of our daily lives. Yet, industry standards such as GSM
often exclude scenarios with active attackers. Devices
participating in communication are seen as trusted and
non-malicious. By implementing our own baseband
ﬁrmware based on OsmocomBB, we violate this trust
and are able to evaluate the impact of a rogue device with
regard to the usage of broadcast information. Through
our analysis we show two new attacks based on the pag-
ing procedure used in cellular networks. We demonstrate
that for at least GSM, it is feasible to hijack the trans-
mission of mobile terminated services such as calls, per-
form targeted denial of service attacks against single sub-
scribers and as well against large geographical regions
within a metropolitan area.

1 Introduction

While past research on Global System for Mobile Com-
munications (GSM) mainly focused on theoretical re-
search [17, 18], a very recent research direction chal-
lenged the fundamental GSM security assumptions with
respect to the practical availability of open GSM equip-
ment. The assumptions have been made on both sides of
the radio part of the cellular network. One side of the
radio link is the Base Station System (BSS) consisting of
the Base Transceiver Station (BTS) and the Base Station
Controller (BSC), while the other side of the radio part is
the modem or the so-called baseband of a cellular phone.
Traditionally, both radio stacks have been carefully kept
out of reach for any kind of malicious activities.

But a booming market for used telecommunication
equipment, cheap software deﬁned radios, leakage of
some hardware speciﬁcations, and a well-trained open
source community ﬁnally broke up this closed cellular
world. The overall community work culminated in three
open source projects: OpenBSC, OpenBTS, and Osmo-

comBB [20, 25, 45]. These open source projects consti-
tute the long sought and yet publicly available counter-
parts of the previously closed radio stacks. Although all
of them are still constrained to 2G network handling, re-
cent research provides open source software to tamper
with certain 3G base stations [24]. Needless to say that
those projects initiated a whole new class of so far uncon-
sidered and practical security investigations within the
cellular communication research, [28, 30, 34].

Despite the recent roll-out of 4G networks, GSM re-
mains the dominant cellular standard in many countries.
Moreover, as most new LTE devices are backwards com-
patible to GSM, this older standard will not vanish soon
at all, but rather complement 3G and LTE connectivity
in areas with pure GSM coverage. Several other rea-
sons such as worse indoor coverage and the lower num-
ber of deployed UMTS and LTE base stations contribute
to this. Additionally, telecommunication providers have
already begun to reuse their existing GSM infrastructure
within non-voice scenarios which require a much slower
data communication than modern network technologies
are capable of. This is especially the case for Machine
to Machine (M2M) or so-called Internet of Things (IoT)
communications over GSM. Corresponding applications
will soon become parts of our daily life and will make us
more dependent than ever on GSM, cf. [19, 35]. Given
this pervasive GSM usage, it is very important to evalu-
ate the security offered by a standard which is more than
20 years old and is based on assumptions, many of which
no longer hold true.

This paper continues the challenge of the mobile
security assumption that certain active attacks can be
safely excluded from the threat model. Towards this
goal we show novel attacks against mobile terminated
services. While the root cause also exists in newer
standards such as UMTS or LTE, we demonstrate the
impact of it in commercially deployed GSM networks.
To the best of our knowledge, the limitations of currently
available hard- and software would make it very difﬁcult

USENIX Association  

22nd USENIX Security Symposium  33

Figure 1: Simpliﬁed GSM network infrastructure.

to test these attacks in UMTS and LTE networks. Prior
to publishing this research, we responsibly notiﬁed the
respective standard organisations via a carrier of our
research results.

In summary, we make the following main contributions:

• We present the paging response attack, a novel and
practical attack against mobile terminated services.

• We show the feasibility and the implementation of
a mobile phone ﬁrmware which is capable to steal a
short message over-the-air and to perform denial of
service attacks against mobile terminated services
in GSM networks. Furthermore, we evaluated these
attacks to be present in major European operator
networks.

• We eventually assess the boundary conditions for a
large-scale paging response attack in order to cause
denial of service conditions within a large geo-
graphical area of a major city.

The remainder of the paper is structured as follows.
Section 2 provides an overview of the 3GPP GSM net-
work infrastructure, as well as details about logical chan-
nels and paging protocol procedures required to under-
stand our attacks; Section 3 details our novel attack that
exploits the paging procedure as used in GSM; Sec-
tion 4 describes characteristics of location areas in a
large metropolitan area and the respective requirements
to perform a large-scale denial of service attack against
these regions; Section 5 discusses two different counter-
measures to address the attacks; Section 6 provides an
overview of related research; Section 7 concludes our re-
search.

2.1 GSM Infrastructure

Despite the complexity of a complete GSM mobile net-
work architecture [3], only a few entities are relevant to
this work. In the following paragraph, we provide the
necessary background on the infrastructure components
of relevance to this research. Figure 1 illustrates the ar-
chitecture and connections between these components:

• BTS: The Base Transceiver Station is a phone’s ac-
cess point to the network. It relays radio trafﬁc to
and from the mobile network and provides access
to the network over-the-air. A set of BTSs is con-
trolled by a Base Station Controller (BSC) and is
part of a Base Station System (BSS).

• MS: The Mobile Station is the mobile device inter-
acting with the mobile operator network. It com-
prises hardware and software required for mobile
communication (baseband processor, SIM card, and
a GSM stack implementation). The MS interacts
with the BTS over a radio link, also known as the
Um interface. In this paper, the mobile phone of a
victim is often referred to as MS. We will also use
the term MS, user, subscriber, phone, and mobile
device interchangeably.

• MSC: The Mobile Switching Center [6] is a core
network entity responsible for routing services,
such as calls and short messages, through the net-
work. It utilizes components from BSSs to establish
connections to mobile devices, organizes hand-over
procedures and connects the cellular network to the
Public Switched Telephone Network (PSTN).

• VLR: The Visitor Location Register maintains loca-
tion and management data for mobile subscribers
roaming in a speciﬁc geographical area handled by
an MSC. It acts as a local database cache for vari-
ous subscriber information obtained from the cen-
tral Home Location Register (HLR), e.g., the mo-
bile identity. A subscriber can only be present in
one VLR at a time. Each of the areas served has
an associated unique identiﬁer, the Location Area
Code (LAC) [3, 8]. As soon as a phone leaves a cer-
tain geographical area called Location Area (LA), it
has to perform the Location Update procedure [4]
to notify the network of this event.

2 Background and Overview

This section brieﬂy describes the GSM cellular network
infrastructure. We continue to explain the important
types and functions of logical channels. Furthermore,
we depict the protocol details required to understand the
basis of our attack.

2.2 GSM Logical Channels

The available GSM frequencies are shared among a num-
ber of mobile carriers. Each of the GSM frequency bands
is divided into multiple carrier frequencies by means of
Frequency Division Multiple Access (FDMA). A BTS

34  22nd USENIX Security Symposium 

USENIX Association

serves at least one associated carrier frequencies identi-
ﬁed by the Absolute Radio-Frequency Channel Number
(ARFCN). The ARFCN provides a dedicated pair of up-
link and downlink frequencies for receiving and trans-
mitting data over the Um interface [10]. Because the ra-
dio frequency is shared among a number of subscribers,
GSM uses Time Division Multiple Access (TDMA) as
channel access method and divides physical channels
provided by the ARFCN into 8 time slots. A sequence of
8 consecutive time slots is called a TDMA frame. Mul-
tiple TDMA frames form a multiframe. It consists either
of 51 or 21 TDMA frames (respectively control frames
or trafﬁc frames). Multiframes are further partitioned to
provide logical channels.

The two categories of logical channels in GSM are
control channels and trafﬁc channels [5]. Control chan-
nels provide means for signaling between the network
and the MS. Because our attack is solely based on signal-
ing, we focus on the details of control channels. There
are three categories of control channels:

• BCH: Broadcast Channels provide a point-to-
multipoint, unidirectional channel from the BTS to
mobile stations (transmitted on the downlink fre-
quency). Among other functionalities,
they act
as beacon channels and include logical channels
for frequency correction (FCCH), synchronization
(SCH), and information about the cell conﬁguration
and identity (BCCH) [5, 7].

• CCCH: Common Control Channels are used for
signaling between the BTS and MS, both on the up-
link and downlink. They are used by the MS to re-
quest radio resources and to access the mobile net-
work.

• DCCH: Dedicated Control Channels carry signal-
ing messages related to handover procedures or con-
nection establishment, e.g., during call setups.

For our attack, we are mainly interested in logical chan-
nels that are part of the CCCH and DCCH categories.
These categories consist of several logical channels. The
logical channels of interest are as follows:

• PCH: The Paging Channel is used by the BTS to in-
form an MS about an incoming service (via paging
request messages on the downlink channel). The
PCH, which is part of the CCCH, will be monitored
by any MS in idle mode unless it is currently using
a dedicated channel.

• RACH: The Random Access Channel provides a
shared uplink channel utilized by the MS to request
a dedicated channel from the BTS. Placing a phone

call or receiving an incoming service always re-
quires a phone to setup a dedicated signaling chan-
nel beforehand.

• AGCH: The Access Grant Channel provides a
downlink channel used by the BTS to transmit as-
signment messages that notify mobile stations of
assigned channel details. A successful channel re-
quest on the RACH will result in an Immediate As-
signment message on the AGCH. These assignment
messages contain the required conﬁguration param-
eters that enable the MS to tune to the requested
channel.

• SDCCH: The Standalone Dedicated Control Chan-
nel is used on both uplink and downlink. It is em-
ployed for call setup and signaling between BTS
and MS. Furthermore, it can be utilized to transmit
short messages to the MS.

It is important to note that both the BCH and CCCH
channel types are point-to-multipoint channels. This im-
plies that information on the logical downlink channels is
broadcasted to all subscribers served by a speciﬁc BTS.
Throughout this work we will see how this can be abused
to model new attacks.

2.3 Mobile Terminated Service Procedures

The GSM speciﬁcations differ between trafﬁc originat-
ing or terminating at a mobile phone. This is referred
to as Mobile Originated (MO) and Mobile Terminated
(MT) trafﬁc. As outlined previously, we aim to attack
MT services, such as phone calls or SMS. Thus, in the
following we concentrate on the underlying protocol pro-
cedures associated with MT services [4].

In order to deliver a service to a phone, the MSC
needs to determine the location of the respective sub-
scriber. This has to be done for two reasons. First, mo-
bile phones will be idle most of the time to save battery
power and so will not be in constant contact with the net-
work. Thus, the operator does not always know the spe-
ciﬁc BTS that provides the best reception level to the MS.
Therefore, it must broadcast this signal of an incoming
service through at least the entire location area. Second,
broadcasting this information through the whole opera-
tor network would impose a huge performance overhead
and possibly overload the paging channel [42].

In a ﬁrst step,

the core network determines the
responsible MSC/VLR for the target subscriber with the
help of the HLR. Next, the MSC obtains the location
information for the destination subscriber from the
VLR and sends a paging message to all BSCs in the
subscriber’s location area. This message includes a
list of cell identiﬁers/base stations serving the speciﬁc

USENIX Association  

22nd USENIX Security Symposium  35

The message also contains the
location area [13].
mobile identity of the subscriber, which is usually either
a International Mobile Subscriber Identity (IMSI) or
a Temporary Mobile Subscriber Identity (TMSI). We
illustrate the remaining protocol logic using a successful
MT phone call as depicted in Figure 2.

1. The BSC sends a paging command message which
includes the subscriber identity to all base stations
within the location area. All base stations re-
encapsulate the mobile identity and transmit it as
part of a paging request message on the downlink
PCH.

2. When receiving a paging request on the PCH, each
MS compares the Mobile Identity (MI) included in
the request with its own. The result determines
whether the message is addressed to itself or a dif-
ferent subscriber.

3. In case of an identity match, the MS needs to ac-
quire access to Radio Resources (RR) in order to
receive the MT service. To do so, it sends a channel
request including a random reference number on the
uplink RACH.

4. Upon receipt of the channel request, the network
allocates radio resources and a dedicated channel.
Next, it acknowledges the request and sends details
of the allocated channel to the MS in an immediate
assignment message on the AGCH downlink. To al-
low the MS to identify its assignment, the message
contains the random reference of the requester.

5. The AGCH is a shared downlink channel. There-
fore, an MS receiving an assignment message com-
pares the included reference with the one sent in the
request. If the reference matches, the MS tunes to
the dedicated signaling channel included in the as-
signment.

6. After this step succeeded, the Mobile Station estab-
lishes a signaling link, usually over the SDCCH, by
sending a GSM Layer 2 SABM frame containing a
Layer 3 paging response message.

7. Following this, the MS and BTS undergo an authen-
tication, ciphering and service setup procedure. De-
tails of this procedure are not relevant for our attack.
We skip these details here.

The GSM standard speciﬁes [4] three types of paging
requests – type 1, 2, and 3. The type stipulates the num-
ber of subscribers that can be addressed with the pag-
ing request. Type 1 can page one or two subscribers,

Network

BTS

 Paging request

PCH

RR connection
establishment

Subscriber

MS

MI

②
comparison

 Channel request

RACH

 Immediate assignment

AGCH

⑤
Reference
comparison

 SABM (Paging response)

SDCCH

 Cipher/Service setup

Figure 2: Mobile Terminated (MT) paging procedure.

type 2 two or three subscribers, and type 3 paging re-
quests are directed towards four subscribers at once. A
recent study [30] suggests that in real operator networks
the vast majority of paging requests is of type 1. During
our experiments, we veriﬁed that 98% of all paging re-
quests that we observed are type 1 requests. Therefore,
we ignore type 2 and type 3 paging requests in our study.

3 Attack Description

In this section, we will provide the theoretical back-
ground of our attack, introduce our experimental setup
and elaborate on the feasibility of such an attack.

3.1 The Two Threat Models

Denial of Service Attacks. The ﬁrst threat comprises
an active attacker, interested in signiﬁcantly disturbing
mobile terminated services within a speciﬁc geograph-
ical area, e.g., a district or a part of a city.
In certain
situations it
is desirable to ensure that a person or
a device is not reachable via mobile telephony. For
example a third-party may want to prevent a speciﬁc call
from reaching the victim. The effect would be similar
to the ability of selectively jamming incoming services
for a set of subscribers. This includes individuals and
groups of individuals. Such an attack would also have
considerable business ramiﬁcations. While it would not
compromise the general operation of the carrier, it would
affect their revenue. The inability to receive a phone call
will not only leave angry customers, it further impacts
the generated billing as subscribers are charged when
a call is connected.
If any subscriber is able to place
phone calls, but nobody is able to receive services, no
proﬁt is created. An exception here are short messages,
as SMS operates in store-and-forward fashion and does
not create billing on delivery of a message, but on its
submission.

36  22nd USENIX Security Symposium 

USENIX Association

Mobile Terminated Impersonation. The second threat
considers an attacker who aims to hijack a mobile ter-
minated service. As a result, the service would be de-
livered to the attacker instead of the victim. This turns
a passive adversary, who is able to observer air trafﬁc,
into an active attacker who can accept the mobile termi-
nated service and impersonate the victim. For example
an attacker could be interested in hijacking the delivery
of an SMS message. Consequently, it is possible to read
its content and at the same time prevent its submission
to the victim. In practice this could, for example, allow
an attacker to steal a mobile TAN (mTAN), which is of-
ten used as two-factor authentication for online banking,
or any other valuable secret from the message. We also
consider an attacker who wants to impersonate a victim
that is being called. By hijacking the MT call setup, it
is almost impossible for the calling person to verify the
callee’s identity by means other than the voice.

3.2 Paging Response Attack Description

Our attack is inspired by two speciﬁc properties of GSM
networks and its protocols.
Network State: GSM networks involve complex state
machines [4] and face high amounts of trafﬁc while op-
erating on tight radio resource constraints. Consequently,
it is desirable to keep states as short as possible.
Broadcast Information: the paging procedure is initi-
ated on a broadcast medium, namely the PCH portion
of the CCCH, and more importantly is performed before
any authentication or cipher setup takes place. This im-
plies that any subscriber, including an adversary phone,
is able to observe paging requests for other subscribers,
plus the inherent inability of the network to distinguish
between a fake paging response and a genuine one.

As a net result, it is possible to exploit these aspects
to send paging response messages on behalf of a victim
being paged. The network stack can under no circum-
stances determine which of the replies is the legitimate
paging response by the intended subscriber.

Denial of Service. The GSM documents do not specify
the network behavior in such a situation. Therefore, the
behavior of such a race condition is implementation de-
pendent and may be exploitable. However, the state ma-
chine nature of GSM protocols suggest that if an attacker
is able to answer a paging request faster than the intended
subscriber, it will no longer be in a state in which it ex-
pects a paging response and thus will ignore the message
of a victim. Consequently, the victim will receive a chan-
nel release message from the network. Next, the service
setup will not succeed if the attacker does not provide the
correct cryptographic keys required to complete authen-
tication and cipher setup. Accordingly, the service setup

cannot proceed and for example, a call will be dropped.
The result is a novel and powerful denial of service attack
against MT services that 1. does not rely on frequency
jamming; 2. does not rely on resource exhaustion; and
3. is very hard to detect.

We veriﬁed that it

is indeed possible to win the
race for the fastest paging response time, as we will
demonstrate. We were able to carry out such an attack
in all major German operator networks including O2,
Vodafone, T-Mobile, and E-Plus.

MT Session Hijacking. Exploiting the paging proce-
dure does not only allow to disturb communication. It
is important to note that in certain network conﬁgura-
tions, this attack could be abused beyond performing de-
nial of service attacks. Not all countries properly au-
thenticate each service and use encryption. For example,
only under 20% of the networks analyzed by the gsmmap
project [41] authenticate mobile terminated phone calls
100% of the time. 50% of the tested networks only au-
thenticate 10% of the services [28].

In such a network, an adversary can effectively
takeover any MT service that is not authenticated and
impersonate a victim. We assume a network without en-
cryption and insufﬁcient authentication as above. If the
attacker is able to successfully exploit the race condition
on the air interface, it is possible to directly hijack an
MT service by following the protocol speciﬁcations. The
paging response attack proceeds as in the DoS scenario.
However, in this case, by winning the race, an attacker
can accept, e.g., a victim’s phone call or short message.
The victim of such an attack is thus faced with two
consequences. For a mobile terminated call, it is not safe
to assume that the called party is indeed the desired per-
son. For short messages this implies that a message may
not reach the victim, but additionally also that its con-
tents cannot be considered secret.

Even if the network is conﬁgured to use encryption, an
attacker is merely required to perform an additional step.
In an encrypted network without proper authentication,
the paging procedure is followed by the cipher setup.
During this process to create an encrypted channel, the
network sends a cipher mode command message to no-
tify the MS of the encryption algorithm to be used. The
cipher mode complete response from the MS indicates a
completion of the cipher setup. In a network that uses
encryption, this response has to be encrypted using the
session key Kc as input to the A5 encryption algorithm.
This session key is derived from a secret key Ki that is
stored on the SIM card issued by the operator and a ran-
dom challenge RAND sent from the network to the MS.
Due to the lack of perpetual authentication, an attacker
can fully impersonate the victim after cracking the ses-
sion key Kc and sending the cipher mode complete mes-

USENIX Association  

22nd USENIX Security Symposium  37

sage. The cracked session key then allows to decrypt the
subsequent communication that follows the cipher setup.
In practice, essentially both commonly used GSM ci-
pher algorithms, A5/2 and A5/1, have been broken and
demonstrated to be cryptographically weak [17, 18, 23,
39]. The session key can be acquired before hijacking
the service by snifﬁng air trafﬁc and using the kraken
tool [40]. Also, some networks are conﬁgured to still
use A5/0 [26], which does not provide any encryption.
This further simpliﬁes such an attack in those commer-
cially deployed networks. Furthermore, for the subse-
quent paging response attack, an attacker does not even
require physical proximity to a victim, because, as ex-
plained earlier, the carrier network is paging throughout
an entire location area. In order to exploit this, an at-
tacker requires a mobile device that enables him to ob-
serve trafﬁc on the air interface and send arbitrary mes-
sages to the network. Additionally, a practical attack re-
quires the fake response to arrive prior to the victim’s
message. Therefore, the attack is signiﬁcantly challeng-
ing in terms of timing.

We successfully implemented both, the MT service
hijacking and the denial of service attack. For the sake
of simplicity, we obtained the session key through the
SIM browser in the engineering mode of a Blackberry
phone. Nevertheless, as outlined before this step, it can
be trivially obtained by a 3rd party by using a tool like
kraken [40]. Cracking of Kc is merely a step that has
to be performed prior to our attack, but is not part of
the problem itself, which is the race condition. Given
a known Kc, our code to take over an MT session, can
hijack the transmission of a short message delivery in a
real network.

It is important to note that the main reason for evaluat-
ing the paging race condition in GSM was the availability
of freely modiﬁable hardware and software. However,
modern telecommunication standards such as UMTS or
LTE are making use of exactly the same paging proce-
dure principles [11,14,15]. Insufﬁcient cryptography and
authentication further escalate the problem, but the root
cause does not only pertain to GSM.

We will continue to examine the requirements, bound-
ary conditions, and feasibility of mounting such an attack
in practice.

3.3 Experimental Setup

Launching such an attack requires hardware and soft-
ware to interact with GSM base stations. More precisely,
the attack relies on a device which allows us to mod-
ify its baseband (BB) implementation in order to con-
trol its radio communication. Traditionally this has been
very difﬁcult due to the closed nature of the GSM indus-

try (phone manufacturers, baseband vendors, infrastruc-
ture equipment suppliers). For many years there existed
no freely modiﬁable radio communication hardware with
GSM stack implementations. While the GSM speciﬁca-
tions are publicly available (very comprehensive though,
over 1000 PDF documents), there are very few manufac-
turers of GSM equipment who have released any public
documentation.

However, this situation has changed in the last years
with the availability of inexpensive hardware such as
the Universal Software Radio Peripheral (USRP) [22]
and various software implementations around the Osmo-
com [45] project. Additionally, in 2004 the source code
of the Vitelcom TSM30 mobile phone was uploaded
to a Sourceforge project [37] which allowed a broader
audience to study a GSM phone stack for the ﬁrst time.

Hardware Selection. There are basically three possi-
ble choices when it comes to the hardware selection of
our desired radio device: USRP, Vitelcom TSM30, and
certain TI Calypso chipset based phones. All of these
devices can be utilized as GSM radio transceivers with
software modiﬁcations. Yet some of these come with in-
trinsic disadvantages. First, for the USRP there is cur-
rently no GSM baseband implementation that allows the
device to be used as a handset. While we could have
implemented this, it would have been a very demanding
task. Second, even though available, the TSM30 source
code is a full-featured baseband implementation, which
is too complex for our needs. Moreover, the availabil-
ity of TSM30 devices is sparse and they are not easy to
obtain.

Instead we used Motorola C123 and Motorola C118
phones, which are based on the TI Calypso chipset.
These phones are inexpensive (around 20 Euros), easy
to obtain in quantity, and more importantly can be
used in combination with the Free Software baseband
implementation OsmocomBB [47]. This enables us
to receive over-the-air trafﬁc and send arbitrary GSM
frames.

Implementation. OsmocomBB implements a simpliﬁed
version of the GSM stack. The GSM physical layer (L1)
ﬁrmware runs on the phone, while the data-link layer
(L2) and Layer 3 (L3) run on a computer as an appli-
cation (layer23). L1 and layer23 communicate with each
other via a UART serial connection. Layer 2 implements
a modiﬁed version of the Link Access Protocol for the D
channel (LAPD) used in ISDN, called Link Access Pro-
tocol on the Dm channel (LAPDm). Layer 3 comprises
three sublayers: Radio Resource management, Mobility
Management, and Connection Management. As our at-
tack is based on paging, which is part of Layer 3, we
required a modiﬁed version of the layer23 application.

38  22nd USENIX Security Symposium 

USENIX Association

mobile application and introduced functionality that is-
sues n (where n is 10-20) phone calls in a row. Next,
the application terminates the connection before the tar-
get phone is ringing, but late enough so that the network
generates a paging request. The victim phone does not
ring during this early stage of the protocol ﬂow, because
it does not know yet what type of service is incoming. In
our tests we empirically determined that, e.g., a time of
3.7 seconds after the CC-Establishment conﬁrmed state
has the desired effect in the O2 network. The exact tim-
ing may differ slightly, depending on the network that
is used to initiate the call and the network in which the
victim resides.

At the same time, a second phone is monitoring the
PCH of any BTS within the target location area for pag-
ing requests. All TMSIs contained in the observed pag-
ing requests are logged together with a precise timestamp
of the event. It makes sense to choose the ARFCN with
the best signal reception to minimize errors and possible
delays. By ﬁrst limiting the resulting log to time ranges
in which our calls were initiated, we can extract a num-
ber of candidate TMSIs. Further ﬁltering the result set
for TMSIs occurring in repeating patterns that reﬂect our
call pattern yields to a very small set of candidate TM-
SIs or even single TMSIs. This process can be repeated
to narrow down the set of candidate TMSIs to a man-
ageable number. If the network uses IMSIs for identi-
ﬁcation, then an attacker could use the same process to
determine the subscriber’s identity. Alternatively, an at-
tacker could use a Home Location Register query service
to obtain the IMSI directly [1].

By default, the monitoring phone does not react to any
paging request. After obtaining the victim TMSI, we
transfer the TMSI via HDLC over the serial connection
to the monitoring phone. This also changes the phone’s
role from a solely passive listener to an attacker. It starts
to compare TMSIs contained in paging request with the
supplied victim TMSI. On every match, the attacking
phone promptly initiates the previously introduced pag-
ing protocol procedure to respond ﬁrst. As a result, the
paging response by the victim will be ignored and the
call will be dropped unless we fully accept the service.
At this point, it is not possible to reach the victim any-
more. To block MT services over a longer period of time,
the subscriber identiﬁcation procedure needs to be reis-
sued due to TMSI reallocations over time [4].

3.5 Feasibility

The success of such an exploit depends essentially on
the response time of the attacker and victim devices. To
achieve maximum impact, an attacker phone needs to re-
spond faster than the “average” customer device. The
response time of the phone depends on a number of fac-

Figure 3: Experimental setup: Motorola C1XX phones
with custom ﬁrmware, GPS receivers, and a laptop for
serial communication.

In practice our attack is particularly time critical, be-
cause we have to win a race condition on the air inter-
face. It became evident that a layer23 implementation
that runs on a computer is far too slow to win the race
given the bottlenecks such as queueing between multiple
layers, scheduling, and the use of UART serial communi-
cation. Consequently, we reimplemented a minimal ver-
sion of LAPDm and Layer 3 directly in the L1 ﬁrmware
to allow it to run solely on the phone. Speciﬁcally this
includes the paging protocol, which is part of the radio
resource sublayer.

Figure 3 shows our experimental setup consisting of
a notebook and several OsmocomBB phones. The serial
cables are required in order to ﬂash the ﬁrmware. Using
this implementation we can camp on speciﬁc ARFCNs,
observe paging requests within a location area, and send
arbitrary GSM layer2/layer3 messages in a timely man-
ner. Additionally, we used OpenBTS [20] in combina-
tion with a USRP as a BTS to test our setup and perform
various measurements as later described in Section 3.5.

3.4 Targeted Attacks

Attacking individual persons requires our OsmocomBB
phone to observe air trafﬁc and respond to speciﬁc pag-
ing requests. In particular paging requests that contain
the victims mobile identity. For privacy reasons, most
network operators use TMSIs as mobile identities rather
than the static IMSI. The TMSI is only valid within a lo-
cation area and is subject to frequent changes [9]. There-
fore, we need to determine the presence and the TMSI of
a victim in a given location area.

For this we implemented the method proposed by
Kune et al.
to reveal the mapping between TMSI and
subscriber [30]. We modiﬁed OsmocomBB’s layer23

USENIX Association  

22nd USENIX Security Symposium  39

Table 1: List of tested phones, baseband chipset, and base-
band vendor.

Phone model

BB chipset

BB vendor

Blackberry Curve 9300 Marvell PXA930

Marvell

iPhone 4s

Samsung Galaxy S2

Nokia N900
Nokia 3310

Motorola C123

SciPhone Dream G2
Sony Ericsson W800i

MDM6610
XMM 6260
TI Rapuyama
TI MAD2WDI

TI Calypso

MT6235
DB2010

Qualcomm

Inﬁneon
Nokia
Nokia

OsmocomBB1

Mediatek
Ericsson

Sony Xperia U

NovaThor U8500

ST-Ericsson

1 Layer1 paging attack code and modiﬁed layer23 application.

tors that are difﬁcult to measure. This includes signal
quality, weather, network saturation, application proces-
sor operating system, GSM time slots, and others. Yet,
most of these parameters only have very little impact on
the overall response time.

As the baseband chipset and its GSM stack imple-
mentation handles all radio communication, including
the upper layer GSM logic, we suspect it to be a key
contributor to a fast response time. We validate this
claim by measuring the timing of various phones with
different baseband vendors. Referring to a market
report [2], Qualcomm and Intel alone account for 60%
of the baseband revenue in 2011. Yet, relevant baseband
chips and stacks that are currently available in mobile
phones on the market are Qualcomm, Intel (formerly
Inﬁneon), Texas Instruments, ST-Ericsson, Renesas
(formerly Nokia), Marvell, and Mediatek. We tested
timing behavior for different phones for each of these
vendors. Additionally, we also tested the response time
for the OsmocomBB layer23 application to back up our
claim that this implementation is too slow to perform
our attack. Table 1 lists the tested phone models, chipset
names, and the corresponding baseband vendor.

Timing Measurements. It is not feasible to modify the
tested devices itself for measurements, as we only have
access to the operating system on the application pro-
cessor, and not the baseband. Furthermore, the phone
could only guess when its response hits the serving net-
work. Thus, in order to estimate the paging response
time, we operate our own test GSM BTS based on a
USRP and OpenBTS [20]. OpenBTS implements a sim-
pliﬁed GSM network stack running on commodity hard-
ware while using the USRP device as a transceiver. We
patched OpenBTS to obtain timing information for the
different steps during the paging procedure. Speciﬁcally,
we are interested in the time a phone needs to acquire
a radio channel and to send the paging response. This
includes two parts of the paging procedure, the time

between the initial paging request and the channel re-
quest, and the time between the initial paging request
and the reception of the paging response. We log both
of these timestamps for the relevant baseband vendors
in nanoseconds using clock gettime(2). Additionally, we
measure the same for an attack phone running our own
lightweight, OsmocomBB-based baseband implementa-
tion. To trigger paging activity, we consecutively send
250 short messages, one after each channel teardown, to
our test devices.

While we could have also used software like
OpenBSC [25] in combination with a nanoBTS [27], we
decided to utilize OpenBTS to be in full control over the
transmission and reception. The nanoBTS is controlled
over Ethernet, runs its own operating system, including
scheduling algorithms, and cannot be modiﬁed. Thus,
we used OpenBTS to minimize the deviation that may
occur due to the nature of this BTS device.

Timing Observations. Figure 4 summarizes the results
of our time measurements for each baseband vendor. It
shows the elapsed time between the ﬁrst paging request
message sent to the phone, the arrival of the channel
request message, and the occurrence of the paging re-
sponse.
Interestingly, the generation of the phone had
little inﬂuence on the response timing.
In our tests, a
Nokia 3310, which is almost 10 years older than the
tested Nokia N900, shows almost the same timing behav-
ior. We do not have a deﬁnitive answer to explain this ob-
servation. However, a plausible explanation can be found
in the age of GSM. GSM was developed in the 1980s and
most of the mobile telephony stacks for GSM are of this

channel request
paging response

s
d
n
o
c
e
s

i
l
l
i

m
n

 

i
 

e
m
T

i

1200

1000

800

600

400

200

0

N

O

S

s

m

o

kia 3

o

c

o

o

n
y 

3

1

0

m

B

iP
h

o

n

E

ric

e 4

s

s

s

B

 la

o
n 

S

S

S

cip

o

a

n
y 

X

m

s

u

h

o

Bla

O

N

s

m

o

c

k

b

e

kia 

N

o

c

o

n
e 

p

e

D
r
e

a

ria 

U

n
g 

G

w

8

y

e
r
2

3

0
0i

m

 

G

2

rry 9

m

B

9

0

0

ala

3

x
y 

0
0 

C

B

 L

S

2

1 atta

u
rv
e

c

k

Tested mobile phone

Figure 4: Time difference between initial paging request
and subsequent channel request or paging response for
different baseband vendors. Conﬁdence interval: 95%.

40  22nd USENIX Security Symposium 

USENIX Association

era. As most baseband vendors nowadays concentrate
their efforts on exploring the technical challenges of 3G
and 4G telephony standards, we believe that GSM stacks
have not been modiﬁed for a long time. We do not ex-
pect signiﬁcant modiﬁcations of baseband stacks by the
respective vendors nowadays. Thus, we assume that tim-
ing behavior across different phone platforms using the
same baseband will show similar patterns.

The most important observation from Figure 4 is that
on average, with a conﬁdence interval of 95%, our min-
imal OsmocomBB-based implementation is the fastest
in transmitting the channel request and paging response.
For our implementation, there is roughly a 180 millisec-
onds delay between the paging request and the arrival of
the paging response. Thus, on average our attack imple-
mentation is able to transmit the ﬁnal paging response
prior to all other major basebands and can be conducted
within the duration of a single multiframe (235.4 ms).
This includes the OsmocomBB layer23 mobile applica-
tion, which is signiﬁcantly slower than our self-contained
layer1 attack software and shows similar timing perfor-
mance as conventional phones.

Therefore, with a very high likelihood, our software is
able to win the race. It is also noteworthy that our light-
weight stack can transmit the paging response almost im-
mediately after the channel request (and reception of the
Immediate Assignment). The test devices show a gap of
at least 200ms before the transmission of the paging re-
sponse. We expect that this is related to internal schedul-
ing algorithms and queuing mechanisms between differ-
ent layers of the baseband implementation.

4 Attacking Location Areas

Besides attacking individual subscribers, we show that it
is also possible to leverage this attack to disrupt network
service in large geographical regions. As explained in
Section 2, the serving network does not always have the
knowledge of the exact location a subscriber resides in.
As a consequence, it also does not know which BTS is
currently within a good reception of the mobile device.
The phone announces a change of the location area by
performing the Location Update [4] procedure. By mon-
itoring System Information [4] messages on the Broad-
cast Control Channel (BCCH), a phone can keep track
of location areas served by the BTSs within reception.
The aforementioned lack of knowledge is compensated
by the network by distributing paging requests through-
out all base stations in the location area. This implies that
an adversary is able to observe and respond to paging re-
quests not only transmitted by a single a BTS, but within
a larger geographical region formed by the location area.
We already showed in Section 3.5 that we win the race
for the paging response with high probability. Given that

an attacker is able to answer all paging requests that can
be observed on the PCH, it is possible to perform a denial
of service attack against all MT services within the loca-
tion area. Depending on its size, the impact of this would
be massive, e.g., breaking MT calls in areas as large as
city districts or even bigger regions. However, in practice
there are a few obstacles to consider.

Depending on the paging activity, it is unlikely that
service in an entire geographical can be disrupted by a
single attacker phone.
In order to send the paging re-
sponse, the MS has to tune to a dedicated channel. As
a result, it would not be able to observe paging requests
while being in dedicated mode. After sending the re-
sponse, the attacker MS has to resynchronize with the
BTS to observe CCCH/PCH trafﬁc again. By logging
timestamps for the various protocol steps, we measured
the time for this procedure on the OsmocomBB side. On
average we need 745 milliseconds to resynchronize in
order to receive further paging requests after we sent the
response. Furthermore, as shown in Figure 4, we need
on average 180 milliseconds to transmit the paging re-
sponse. This means that in ideal conditions, with a single
phone, we are able to handle up to

60 s

745 ms + 180 ms

= 64.8 paging requests per minute.

Depending on the network activity, this may or may not
be enough to answer all paging requests. Additionally,
we need to examine the different paging activities that
can be seen in real operator networks. If the paging ac-
tivity is very large, then the attacker may need to use
multiple phones to perform the attack.

Finally, to get an understanding of the impact of such
an attack, we need to determine the size of the geograph-
ical region covered by a location area.

4.1 Location Area Paging Activity

An attack against an entire location area, e.g.,
in a
metropolitan area, requires an adversary to respond to
all paging requests in that area. Consequently, the ef-
ﬁciency of a large-scale attack depends on the operator
speciﬁc paging activities and the allocated resources on
the attacker side.

For the purpose of estimating paging activity, we mod-
iﬁed our OsmocomBB stack to log all TMSIs in com-
bination with a time stamp of its appearance. Because
the paging requests are broadcasted throughout a loca-
tion area, camping on one operator BTS for that area is
sufﬁcient to observe all paging activity for that area on
the CCCH/PCH. We recorded the TMSIs in paging re-
quests for all major German operators in a metropolitan
area over a time period of 24 hours. The logs were cre-
ated at exactly the same location, at the same date and

USENIX Association  

22nd USENIX Security Symposium  41

(a) Unﬁltered measurement

(b) Filtered paging requests caused by T3113 timer

Figure 5: Number of TMSIs per minute contained in paging requests of four major German operators over 24 hours.

time. We observed that in some cases the network is not
paging with the TMSI but with the IMSI. E.g., if the sub-
scriber is marked as attached to the network but cannot
be reached using the TMSI, the MSC starts paging using
the IMSI. In this case, depending on the operator network
conﬁguration, paging may also be performed outside of
the location area. However, this type of paging request
is the minority and thus ignored in our measurements.
Furthermore, assuming that a subscriber is present in the
monitored location area, the network very likely already
paged using the TMSI in this area. Obviously, it is sim-
ple to implement the attack in the case that network pages
using IMSIs instead of TMSIs. In fact our code can also
handle IMSIs.

Figure 5a summarizes the paging observations. The
ﬁrst observation to be made is that paging activity heav-
ily varies throughout the time of the day. The observed
pattern is not random, but rather reﬂects human activity
during typical days. It is also interesting to note that the
amount of paging requests heavily differs among the var-
ious tested operators. While for example E-Plus at peak
times has a rate of roughly 415 TMSIs contained in pag-
ing requests per minute, Vodafone has almost 1200 in the
same time period.

Such differences can be caused for example by the
number of active subscribers in the network, or the size
of the respective location area. During this measurement,
we noticed several reoccurring TMSI patterns. Vodafone
is actually always paging each TMSI at least two times.
A second paging request is always issued two seconds
after the initial paging request. This explains the mas-
sive amount of paging requests and we suspect this to be
an attempt to improve the overall subscriber availability.
Also, our logged data shows that some of these TMSIs
are paged at regular intervals. We believe that these re-
quests may partially be directed at M2M devices, e.g.,
for remote monitoring.

Figure 5b shows a ﬁltered version of Figure 5a.
Speciﬁcally, we ﬁltered appearances of TMSIs contained
in paging requests that we do not need to respond to.
3GPP TS 04.08 [4] speciﬁes a timer, T3113, that is set
on transmission of a paging request.
If no paging re-
sponse was received prior to the expiry of this timer, the
network reissues the paging request by paging the mo-
bile subscriber again. However, assuming that we are
able to observe and respond to all paging requests, this
retransmission would not occur during an attack. There-
fore, these can be ﬁltered from the result. By analyz-
ing the logged TMSIs and the respective timestamps, we
recorded the reappearance of each TMSI that was orig-
inally transmitted as part of a paging request. The vast
majority of reappearances in time reach a common max-
imum which we assume is the timer value. A prevalent
value seems to be ﬁve seconds. It is also reasonable that
this is caused by a triggered timer. A normal call setup
takes longer than ﬁve seconds [30] and short messages
are queued at the SMS service center and likely transmit-
ted over the same channel following one paging request.
As a result, the overall activity of relevance in practice
is lower than the general amount of TMSIs contained in
observed paging requests. The Vodafone measurements
can be reduced by almost 22% during peak times and
33% during low activity times. However, due to the lim-
ited memory resources of the attacking phones, we can-
not take this into account during an active attack.

4.2 A Randomized Attack Strategy using

TMSIs

The measured data in Section 4.1 suggests that even in
location areas with low paging activity an attacker needs
more than a single phone to respond to all paging re-
quests. Thus, paging requests need to be distributed
across multiple attacking phones. While serial commu-

42  22nd USENIX Security Symposium 

USENIX Association

 

s
I
S
M
T
d
e
v
r
e
s
b
O

35000

30000

25000

20000

15000

10000

5000

0
00

 

s
I
S
M
T
d
e
v
r
e
s
b
O

40000

35000

30000

25000

20000

15000

10000

5000

0
00

 

s
I
S
M
T
d
e
v
r
e
s
b
O

18000

16000

14000

12000

10000

8000

6000

4000

2000

0
00

32

64

96

c8

fa

 

s
I
S
M
T
d
r
e
v
r
e
s
b
O

10000

9000

8000

7000

6000

5000

4000

3000

2000

1000

0
00

32

64

96

c8

fa

32

64

96

c8

fa

32

64

96

c8

fa

Byte value in hexadecimal

Byte value in hexademical

Byte value in hexadecimal

Byte value in hexadecimal

(a) Byte 3

(b) Byte 2

(c) Byte 1

(d) Byte 0

Figure 6: Statistical distribution of each TMSI byte contained in paging requests for O2. Based on 437734 TMSIs.

nication could be used to coordinate these efforts, it also
poses a signiﬁcant slowdown. Consequently, using se-
rial communication would lower the chance to win the
race. We therefore decided to not make use of any actual
communication between attacking devices, but to use a
probabilistic approach instead.

For this, we analyzed the TMSI values to determine
the statistical distribution of each individual TMSI byte
as contained in respective paging requests. Namely, to
prevent the collection of mobile subscriber identities and
thus enable tracking, mobile phones are in most cases
identiﬁed by their TMSI instead of their IMSI. To pro-
vide strong anonymity, a network should therefore sufﬁ-
ciently randomize those short term identities to provide
unlinkability. A statistically uniform distribution would
ease randomly distributing the paging load across mul-
tiple phones. However, an analysis of collected TMSIs
made it clear that not all bits of the TMSI are sufﬁciently
random or at least uniformly distributed. This may be,
because some parts of the TMSI can be related to, e.g.,
the time of its allocation [8]. We also observed that cer-
tain bytes of the TMSI appear more frequently in speciﬁc
ARFCNs. Thus, we further analyzed the distribution of
each individual of the four TMSI bytes, for all tested op-
erators. We use O2 as an example operator here even
though nearly identical patterns can be seen for other car-
riers.

Figure 6 shows for each possible byte value how of-

Figure 7: Cumulative distribution function for Byte 0
(LSB) of TMSIs contained in paging requests observed
for O2.

ten a speciﬁc value was found in TMSIs contained in
paging requests that we logged. As visible, all byte val-
ues are not uniformly distributed. However, 6a, 6b, and
6c show a signiﬁcantly different pattern from 6d. Not
every possible value of the least signiﬁcant byte (LSB)
of the TMSI is encountered with equal frequency on the
air interface. For example the value 0xff is not used at
all. Some seem to be more likely than others. Nonethe-
less, 6d shows that value ranges are close to a uniform
distribution. This becomes more plausible in Figure 7,
which compares the cumulative distribution function for
observed values of the LSB and the uniform distribution.
We make use of this characteristic to delegate speciﬁc
attack phones to dedicated TMSI LSB byte ranges. This
way, we can distribute the immense amount of paging be-
tween several phones by simply using randomization and
thus avoid coordination at all. Outliers for certain value
ranges could be compensated by adding more phones to
the speciﬁc range. To prevent recompilation of our Os-
mocomBB based ﬁrmware for distinct value range, we
introduced a mechanism to conﬁgure the range at run-
time. This mechanism is similar to the TMSI setting de-
scribed in Section 3.4 and is based on a HDLC message
over serial.

A similar distribution could be achieved by hashing
TMSI values and assigning individual phones to speciﬁc
hash preﬁxes. However for simplicity and to reduce the
response time as much as possible we decided not to do
this.

4.3 Mapping Location Areas

When performing a large-scale attack against a geo-
graphic region, we have to determine the size covered by
the location area. Speciﬁcally, this knowledge enables an
adversary to precisely plan the affected zone of such an
attack. An attacker carefully selects the target location
areas for speciﬁc regions and operators.

Location areas are not organized to cover an equally
large area. As pointed out in Section 4.1, this impacts
the paging activity that can be observed in a speciﬁc
location area. Their size differs among operators and
speciﬁcs of the covered environment. In fact, because of

USENIX Association  

22nd USENIX Security Symposium  43

its impact on mobility management, location area plan-
ning is an important aspect for mobile network operators.
Its size manifests a trade-off between subscriber-induced
and network-induced performance degradation. Small
location areas can cause a signiﬁcant signaling overhead
in the core network due to frequent location updates. It
has already been demonstrated, that this can lead to de-
nial of service like conditions [36]. A large location area
causes additional load due to the paging overhead.

The Location Area Code (LAC), which is part of the
Location Area Identiﬁer (LAI), is broadcasted by each
BTS in regular intervals on the BCCH via a System In-
formation Type 3 message. To map location areas, we
use a slightly modiﬁed version of the cell log applica-
tion from the OsmocomBB tool-chain. cell log scans all
ARFCNs in the assigned GSM frequency spectrum for a
carrier signal. It then attempts to sync to these frequen-
cies and logs decoded system information messages as
broadcasted on the BCCH. In combination with off-the-
shelf GPS receivers, we determine the geographic loca-
tion of the observed LAC.

By slowly driving through the city in a car, we col-
lected a number of waypoints and the respective GSM
cells in sight. To minimize the loss due to driving speed,
the scan process was performed simultaneously on eight
OsmocomBB devices. In order to estimate the surface
covered by a location area, we calculated the convex hull
of points within the same LAC. The size of location areas
in a metropolitan area such as Berlin varies from 100km2
to 500km2. From our study, the average location area in
Berlin covers around 200km2. Data from OpenCellID
and Crowdﬂow [29, 31] indicate that outside of the city
center location areas exist that cover over 1000km2. Fig-
ure 8 shows location areas that we mapped for one of the
four major operators in Berlin.

Most location areas partially overlap with geographic
regions that are part of a different area. These results
provide a rough insight on dimensions of location areas
in a metropolitan area. It also shows that a large-scale
denial of service attack based on the paging procedure
has a signiﬁcant impact to a large number of subscribers.

Figure 8: Location Areas of Vodafone Germany in Berlin.

ered that the IMSI DETACH message is not authenticated
in GSM and 3G networks [34]. As a result, an attacker
can easily craft detach messages on behalf of a victim.
This message acts as an indication to the network that a
subscriber is no longer marked as available for the car-
rier. As a result, the network marks the mobile station as
detached and will no longer page the subscriber until it
reassociates with the network. Consequently, this stops
the network from delivering MT services. During nor-
mal operation, this message is generated by the phone
and sent to the network, e.g., when it is being switched
off.

The mobile identity contained in the detach indication
message is not limited to IMSIs, but can also contain
TMSIs. By combining the paging response attack with
the IMSI detach attack, it is therefore possible to amplify
its effect. After each paging response, our OsmocomBB
implementation reuses the collected mobile identity to
send a detach message. Accordingly, our attack ensures
that an initial call to a subscriber will be terminated and
that reissued services such as calls will not cause paging
activity again. Thus, by doing so, we effectively reduce
the paging load over time.

4.4 Ampliﬁcation of the Paging Response

4.5 Large-scale Attack Feasibility

Attack

The attack procedure as introduced in Section 3 does pre-
vent MT services from being delivered to a subscriber.
However, it does not provide a persistent way to cause
denial of service conditions. Access to mobile services
is denied as long as an adversary is running the attack.
Accordingly, calls reissued by subscribers to reach a per-
son, have to be attacked again, which may further raise
the paging load. To prevent this, we make use of another
attack that has been publicized before. Munaut discov-

We continue to evaluate the feasibility of a large-scale
attack using multiple phones against commercially de-
ployed networks. The transmission of a large number
of RACH bursts and SDCCH channel allocations may
be limited due to radio resource bottlenecks. We there-
fore verify, whether or not a single cell provides enough
resources, or an attack needs to be conducted in a dis-
tributed fashion.
Prerequisites.
In the following, we denote the TMSI
paging request activity as rrequest and the number of re-

44  22nd USENIX Security Symposium 

USENIX Association

quired phones to handle this respectively as nphones. As
discussed in Section 4.2, the TMSI LSB value range is
used to equally distribute the paging load across multi-
ple attacking phones. Therefore, assigned phones need
to wait for a range match. On average this requires
tmatching = rrequest/nphones seconds. On a match, the phone
sends a channel request on the RACH and a paging re-
sponse on an SDCCH in tresponse seconds. It ﬁnally syn-
chronizes back to the CCCH in tsync seconds to be pre-
pared for the next run. The required time for an attack
is therefore tattack = tmatching + tresponse + tsync seconds.
Thus, for a successful attack, the minimum number of
phones an adversary requires is nphones ≥ rrequest · tattack.
RACH Resource Constraints. The available resources
provided by a single cell depend on its conﬁguration.
The GSM speciﬁcations deﬁnes a number of valid chan-
nel conﬁgurations [7].
Thus, an adversary is lim-
ited by the number of available RACH slots and the
number of SDCCHs that a cell provides.
In practice
cells in metropolitan areas use the BCCH+CCCH or
FCCH+SCH+CCCH+BCCH channel conﬁgurations on
the ﬁrst time slot. These are not combined with DCCHs
and therefore allow all 51 bursts on the uplink of a 235.4
ms 51-multiframe to be used to transmit channel requests
on the RACH. Because the RACH is a shared medium,
collisions with requests of other subscribers may occur.
According to Traynor et al. [36], the maximum resulting
throughput is 37%. As a result, an attacker can transmit
up to rRACH = 51/0.2354 · 0.37 ≈ 80 channel requests
per second in a single cell. Consequently, given that
nphones ≤ nRACH = rRACH · tattack is true, a single cell can
fulﬁll the channel request requirements.
SDCCH Resource Constraints. Following the chan-
nel allocation, the adversary phone uses an SDCCH to
send the paging response. Analogical to the RACH, SD-
CCHs in medium- or large-sized cells in a metropoli-
tan area are provided on a separate time slot. A typ-
ical SDCCH/8+SACCH/8 channel conﬁguration com-
prises of 8 SDCCHs per 51-multiframe, in theory offer-
ing: rSDCCH = 8/0.2354 = 34 SDCCH/second. Clearly
this may make the signaling channel the major bottle-
neck for this attack. Accordingly, the occupation time of
these channels needs to be taken into account. For ex-
ample according to Traynor et al., a rough estimation of
the occupation time of the channel for an Insert Call For-
warding operation is 2.7 seconds [36]. Compared to this,
our attack occupies the channel for a very short duration,
as shown in Section 3.5.

Similar to the RACH requirements, the maximum
number of attacking phones per cell is therefore bounded
by nphones ≤ nSDCCH = rSDCCH · tattack.
Example Computation. The following is an exam-
ple, based on the peak values from our measurements
gathered for the E-Plus network and as reﬂected in Ta-

Table 2: Example resource requirements for
E-Plus.

Variable

Value

rrequest
tresponse

tsync

415 paging/min

180 ms
745 ms

Reference

Section 4.1
Section 3.5
Section 4

ble 2. Based on the previous equations, at least nphones ≈
10.820 phones are required to attack a typical location of
E-Plus. Given the costs of the Motorola devices, this
is a reasonably small amount. Each paging response
attack lasts tattack ≈ 1.564 seconds. This allows up to
nRACH ≈ 125 phones without a saturation of the RACH.
For the SDCCH, the above formula yields to a maximum
of nSDCCH ≈ 53 phones. It is also important to note that
the number of phones is proportional to the impact. This
means that half of the attacking phones would still be
able disrupt service for half of the subscribers of a loca-
tion area.

A single cell therefore provides enough resources to
attack a complete location area of a considerably small
operator. In practice these resources are shared with le-
git MO and MT trafﬁc. The exact trafﬁc patterns and
the number of cells per location is unknown. Further-
more, a combination with the IMSI detach attack pre-
vents phones that reside in the location area to generate
further MT activity. As we cannot estimate these activ-
ities, we do not include this in our calculation. Never-
theless, the results indicate the required resources for a
large-attack do not extensively exhaust the resources pro-
vided by a cell. Additionally, there is no technical limita-
tion of distributing attacking phones across small number
of different cells.

5 Countermeasures

In this section we present two countermeasures against
the attacks we developed. Speciﬁcally, we propose dif-
ferent approaches to resolve both problems. A solution
is required to not only ﬁx the denial of service issue, but
at the same time the MT service hijacking. Unlike the
second prevention strategy, the ﬁrst solution solves both
issues at once, but requires a protocol change.

For the ﬁrst solution, we propose a change to the
paging protocol procedure [4]. To perform authentica-
tion, the network is sending a 128 bit random challenge
(RAND) to the subscriber. Based on the secret key Ki
that is only stored on the SIM card or in the authenti-
cation center of the network, the subscriber computes a
32 bit response value using the A3 algorithm. The so-
called Signed Response (SRES) value is sent back to the

USENIX Association  

22nd USENIX Security Symposium  45

network. In the same fashion, the operator network com-
putes SRES based on Ki as stored in the authentication
center. If both SRES values match, the subscriber suc-
cessfully authenticated itself to the network. However,
as mandated in the GSM speciﬁcation, the authentica-
tion is performed after the paging response is processed.
The same principle applies to UMTS [12]. Therefore,
the paging response itself is not authenticated. By adapt-
ing the protocol to include the RAND value in the pag-
ing request and SRES in the paging response, this can
be changed. This implies that all of the paging responses
are authenticated, which eliminates session hijacking. At
the same time a paging response that includes authenti-
cation information can be used by the network to validate
the response before changing the state to not expect fur-
ther paging responses. Thus, also solving the denial of
service attack. It is important to note that this requires
a fresh RAND for every authentication to prevent replay
attacks. This is similar to the protocol change proposed
by Arapinis et al. [16], which encrypts the paging request
using a shared session key called unlikability key. While
they use this key to prevent tracking of subscribers via
IMSI paging, the same modiﬁcation also prevents our
described attacks. Unfortunately, partly due to the dif-
ﬁculty of updating devices in the ﬁeld, the industry is
reluctant to apply new protocol changes to commercially
deployed networks.

The second solution involves no protocol change, but
has to dismantle each problem individually. MT session
hijacking issue can be addressed, by enforcing authen-
tication for each service request. This would also over-
come MO session hijacking. In order to eliminate the de-
nial of service attack, the MSC/VLR state machine needs
to be changed. Speciﬁcally, the MSC/VLR has to be able
to map all incoming paging responses to the correct ser-
vice as long as no fully authenticated session exists. Ac-
cordingly, this circumvents the denial of service attack.

6 Related Work

In the last years, various attacks against cellular networks
and their protocol stacks have been published. We sep-
arate related work into two parts. First, attacks that al-
low an adversary to impersonate a victim. Second, de-
nial of service attacks in mobile networks that result in
customers not being able to receive MT services.
Impersonation. In [28] Nohl and Melette demonstrated
that it is possible to impersonate a subscriber for mo-
bile originated services. By ﬁrst snifﬁng a transaction
over-the-air, cracking the session key Kc, and knowing a
victims TMSI, they were able to place a phone call on
behalf of a victim. The authors of [24] used a femtocell
device under their control in order to impersonate a sub-
scriber that is currently booked into the femtocell. By

relaying authentication challenges to a victim, they were
able to send SMS messages on behalf of the subscriber.
Our work in this paper is different, as we do not attack
MO services, but MT services. Thus, in our research,
the considered victim is, e.g., the called party and not the
caller. Contrary to attacking MO services, attacking MT
services is time critical.
Denial of Service. We consider relevant types of de-
nial of service attacks in mobile networks that affect MT
services for subscribers. We determined three types of
denial of service attacks that fulﬁll this requirement: at-
tacks directly targeting the victim phone, attacks focus-
ing on the network, and attacks affecting subscribers, but
without direct communication.

The ﬁrst type comprises DoS attacks that target mo-
bile devices directly, most notably phones. These issues
are usually baseband/phone speciﬁc and caused by im-
plementation ﬂaws. Several vulnerabilities have been
discovered in mobile phones that can lead to code ex-
ecution and denial of service conditions [33, 46]. Par-
ticularly, the Curse-of-Silence ﬂaw enabled an adversary
to disable the MT SMS functionality of speciﬁc Nokia
devices [44].
In [38] Racic et al. demonstrate that it
is possible to stealthily exhaust mobile phone batteries
by repeatedly sending crafted MMS messages to a vic-
tim. Consequently, the phone battery will drain very fast,
eventually the phone will switch off, and MT services
can no longer be delivered to a victim. Our attack is in-
herently different from these kinds of attacks, because it
is independent from the target device type and does not
interact with the victim directly at all.

The second category consists of attacks that target the
operator itself, and as a consequence also impact MT ser-
vices for subscribers. These types are caused by design
ﬂaws. Spaar showed in [43] that it is feasible to exhaust
channel resources of a base station by continuously re-
questing new channels on the RACH. Unlike our attack,
this attack is limited to a single BTS and does not af-
fect subscribers served by a different cell. Therefore, to
attack a metropolitan area, an attacker needs to commu-
nicate with and attack every BTS in that area. Enck et
al. [21] showed that it is practical to deny voice or SMS
services within a speciﬁc geographical area, by sending
a large number of short messages to subscribers in that
area. Serror et al. [42] exhibit that similar conditions
can be achieved in CDMA2000 networks by causing a
signiﬁcant paging load and delay of paging messages
via Internet originating packets to phones. A compara-
ble resource consumption attack for 3G/WiMax has been
demonstrated by Lee et al. in [32]. As Traynor et al. out-
line [36], it is also possible to degrade the performance
of large networks by utilizing a phone botnet and, e.g.,
repeatedly adding and deleting call forwarding settings.
All of these attacks exhaust network resources mostly

46  22nd USENIX Security Symposium 

USENIX Association

due to generated signaling load. As a result, services can
no longer be reliably offered to mobile subscribers, effec-
tively causing denial of service conditions. This includes
MT and MO services. We exploit a race condition in the
MT paging procedure and do not attack the core network
itself. Our attack does not intend to generate excessive
signaling trafﬁc in the network. As a result, it is not pre-
vented by proposed mitigations for these kind of issues
from previous research.

Our attack ﬁts into the last of the three types of attacks
that result in DoS for MT services. Most network attacks
aim to abuse generated signaling to decrease the over-
all performance of the operator network. Attacks against
mobile devices merely use the network as a bearer to de-
liver a speciﬁc payload to the phone. The third category
is stipulated by attacks that target the mobile device it-
self, but do not send any payload to it. The aforemen-
tioned IMSI detach attack discovered by Munaut [34]
can effectively cause that a service such as a call, will
not result in paging requests by the network anymore.
As described in section 4.4, this design ﬂaw even sup-
ports our attack. Contrary to this vulnerability, the pag-
ing response attack allows us to precisely control when
and where a victim can be reached or not. After sending
a detach indication, an attacker cannot control anymore
for how long this state is kept.

Our approach can be used either to hijack a session
or to perform a denial of service attacks. We do attack
mobile stations but neither by exhausting network re-
sources, nor by directly communicating to the target de-
vice. We can target speciﬁc geographical areas, speciﬁc
subscribers or a group of subscribers without the need to
build a hit list of phone numbers residing in that area. De-
pending on the target, the attack can be either distributed
or performed from a single phone. Additionally, the in-
volved costs for this attack are as cheap as acquiring the
required number of Motorola C1XX phones.

7 Conclusion

The trust in the security of cellular networks and specif-
ically the widely used GSM standard has been shat-
tered several times. Yet, attacks against mobile termi-
nated services are a minority. The undisturbed operation
of telecommunication networks is traditionally based on
trust. The inherent trust that each subscriber and par-
ticipant in communication plays by the rules. Nonethe-
less, due to several available and modiﬁable software and
hardware projects for telecommunication, this trust rela-
tionship has to be considered broken. In this paper we
showed how to exploit the trust in paging procedures on
a broadcast medium. We demonstrated that it is possible
to leverage a race condition in the paging protocol to a
novel denial of service attack and the possibility to hi-

jack mobile terminated services in GSM. Moreover, we
showed that this attack can not only disturb communi-
cation for single subscribers, but can also greatly affect
telephony in a larger geographical region formed by lo-
cation areas. A motivated attacker can interrupt com-
munication on a large scale by merely utilizing a set of
inexpensive consumer devices that are available on the
market. This is considerably more efﬁcient compared
to traditional radio jamming due to the broad frequency
range of mobile carrier networks and the size of location
areas. In order to mitigate these attacks, we propose two
different countermeasures of which one does not require
a protocol change. We strongly encourage future stan-
dards to consider threats caused by active attackers that
tamper with user equipment and protocol stacks.

8 Acknowledgement

The authors would like to thank Dieter Spaar, Harald
Welte, Holger Freyther, Benjamin Mich´ele, Alex Dent,
and Dmitry Nedospasov for technical discussions and
their help in reviewing this paper.

References

[1] Routo Messaging. http://www.routomessaging.com.

[2] Gartner Says Worldwide Smartphone Sales Soared in Fourth
http://www.

Quarter of 2011 With 47 Percent Growth.
gartner.com/it/page.jsp?id=1924314, February 2012.

[3] 3GPP. Digital cellular telecommunications system (Phase 2+);
Network architecture (GSM 03.02 version 7.1.0 Release 1998).
Tech. rep., 3rd Generation Partnership Project, 2000. 3GPP TS
03.02 V7.1.0.

[4] 3GPP. Digital cellular telecommunications system (Phase 2+);
Mobile radio interface layer 3 speciﬁcation (3GPP TS 04.08 ver-
sion 7.9.1 Release 1998). Tech. rep., 3rd Generation Partnership
Project, 2001. 3GPP TS 04.08 V7.9.1.

[5] 3GPP. Digital cellular telecommunications system (Phase 2+);
Multiplexing and multiple access on the radio path (3GPP TS
05.02 version 8.9.0 Release 1999). Tech. rep., 3rd Generation
Partnership Project, 2001. 3GPP TS 05.02 V8.9.0.

[6] 3GPP. Digital cellular telecommunications system (Phase 2+);
Base Station System - Mobile Services Switching Centre (BSS-
MSC) Interface - Interface Principles (3GPP TS 08.02 version
8.0.1 Release 1999). Tech. rep., 3rd Generation Partnership
Project, 2002. 3GPP TS 08.02 V8.0.1.

[7] 3GPP. Digital cellular telecommunications system (Phase 2+);
Mobile Station - Base Station System (MS - BSS) Interface Chan-
nel Structures and Access Capabilities (3GPP TS 04.03 version
8.0.2 Release 1999). Tech. rep., 3rd Generation Partnership
Project, 2002. 3GPP TS 04.03 V8.0.2.

[8] 3GPP. Digital cellular telecommunications system (Phase 2+);
Numbering, addressing and identiﬁcation (3GPP TS 03.03 ver-
sion 7.8.0 Release 1998). Tech. rep., 3rd Generation Partnership
Project, 2003. 3GPP TS 03.03 V7.8.0.

[9] 3GPP. Digital cellular telecommunications system (Phase 2+);
Security-related network functions (3GPP TS 03.20 version 8.6.0
Release 1999). Tech. rep., 3rd Generation Partnership Project,
2008. 3GPP TS 03.20 V8.6.0.

USENIX Association  

22nd USENIX Security Symposium  47

[10] 3GPP. Digital cellular telecommunications system (Phase 2+);
Radio transmission and reception (3GPP TS 45.005 version 9.1.0
Release 9). Tech. rep., 3rd Generation Partnership Project, 2010.
3GPP TS 45.005 V9.1.0.

[11] 3GPP.

Universal Mobile Telecommunications System
(UMTS);Physical channels and mapping of transport chan-
nels onto physical channels (FDD)(3GPP TS 25.211 version
9.2.0 Release 9). Tech. rep., 3rd Generation Partnership Project,
2010. 3GPP TS 25.211 9.2.0.

[12] 3GPP. Universal Mobile Telecommunications System (UMTS);
LTE;3G security; Security architecture(3GPP TS 33.102 version
9.4.0 Release 9). Tech. rep., 3rd Generation Partnership Project,
2011. 3GPP TS 33.102 V9.4.0.

[13] 3GPP. Digital cellular telecommunications system (Phase 2+);
Mobile Switching Centre - Base Station system (MSC-BSS) in-
terface; Layer 3 speciﬁcation (3GPP TS 48.008 version 9.8.0 Re-
lease 9). Tech. rep., 3rd Generation Partnership Project, 2012.
3GPP TS 48.008 V9.8.0.

[14] 3GPP. LTE;Evolved Universal Terrestrial Radio Access (E-
UTRA); User Equipment (UE) procedures in idle mode(3GPP
TS 36.304 version 9.9.0 Release 9). Tech. rep., 3rd Generation
Partnership Project, 2012. 3GPP TS 36.304 V9.9.0.

[15] 3GPP.

Universal Mobile Telecommunications System
(UMTS);User Equipment
in idle mode
and procedures for cell reselection in connected mode(3GPP
TS 25.304 version 9.8.0 Release 9). Tech. rep., 3rd Generation
Partnership Project, 2012. 3GPP TS 25.304 V9.8.0.

(UE) procedures

[16] ARAPINIS, M., MANCINI, L., RITTER, E., RYAN, M., GOLDE,
N., REDON, K., AND BORGAONKAR, R. New Privacy Issues in
Mobile Telephony: Fix and Veriﬁcation.
In Proceedings of the
19th ACM Conference on Computer and Communications Secu-
rity (October 2012).

[17] BARKAN, E., BIHAM, E., AND KELLER, N. Instant Ciphertext-
Only Cryptanalysis of GSM Encrypted Communication. J. Cryp-
tol. 21, 3 (Mar. 2008), 392–429.

[18] BIRYUKOV, A., SHAMIR, A., AND WAGNER, D. Real Time
Cryptanalysis of A5/1 on a PC. In Proceedings of the 7th Inter-
national Workshop on Fast Software Encryption (London, UK,
UK, 2001), FSE ’00, Springer-Verlag, pp. 1–18.

[19] BOSWARTHICK, D., ELLOUMI, O., AND HERSENT, O. M2M

Communications: A Systems Approach. Wiley, March 2012.

[20] D. BURGESS ET AL. OpenBTS. http://openbts.org.

[21] ENCK, W., TRAYNOR, P., MCDANIEL, P., AND LA PORTA, T.
Exploiting open functionality in SMS-capable cellular networks.
In Proceedings of the 12th ACM conference on Computer and
communications security (New York, NY, USA, 2005), CCS ’05,
ACM, pp. 393–404.

[22] ETTUS. USRP. http://www.ettus.com/products, 2009.

[23] FRANK A. STEVENSON. [A51] The call of Kraken. http://
web.archive.org/web/20100812204319/http://lists.
lists.reflextor.com/pipermail/a51/2010-July/
000683.html, July 2010.

[24] GOLDE, N., REDON, K., AND BORGAONKAR, R. Weaponizing
Femtocells: The Effect of Rogue Devices on Mobile Telecom-
munications. In Proceedings of the 19th Annual Network & Dis-
tributed System Security Symposium (Feb. 2012).

[25] H. WELTE. OpenBSC. http://openbsc.osmocom.org.

[26] INFOSECURITY MAGAZINE. Indian company hacks GSM and
usurps IMSI. http://www.infosecurity- magazine.com/
view/24680/indian-company- hacks-gsm-and-usurps-
imsi/, March 2012.

[27] IP.ACCESS LTD.

nanoBTS 1800. http://www.ipaccess.

com/picocells/nanoBTS_picocells.php.

[28] KARSTEN NOHL AND LUCA MELETTE.

bile phones.
Fahrplan/events/4736.en.html, December 2011.

Defending mo-
http://events.ccc.de/congress/2011/

[29] KRELL, M. Crowdﬂow. http://crowdflow.net.

[30] KUNE, D. F., KOELNDORFER, J., HOPPER, N., AND KIM, Y.
Location leaks over the GSM air interface. In Proceedings of the
19th Annual Network & Distributed System Security Symposium
(Feb. 2012).

[31] LANDSPURG, T. OpenCellID. http://opencellid.org.

[32] LEE, P. P. C., BU, T., AND WOO, T. On the detection of signal-
ing DoS attacks on 3G/WiMax wireless networks. Comput. Netw.
53, 15 (2009), 2601–2616.

[33] MULLINER, C., GOLDE, N., AND SEIFERT, J.-P. SMS of
Death: From Analyzing to Attacking Mobile Phones on a Large
Scale. In Proceedings of the 20th USENIX Security Symposium
(San Francisco, CA, USA, August 2011).

[34] MUNAUT, S.

IMSI DETACH DoS.

http://security.

osmocom.org/trac/ticket/2, May 2010.

[35] NOKIA SIEMENTS NETWORKS. Nokia Siemens Networks pro-
motes GSM for Machine to Machine applications. http://www.
nokiasiemensnetworks.com/news-events/press-room/
press-releases/nokia-siemens- networks- promotes-
gsm-for-machine-to-machine- applications.

[36] P. TRAYNOR, M. LIN, M. ONGTANG, V. RAO, T. JAEGER, T.
LA PORTA, P. MCDANIEL. On Cellular Botnets: Measuring
the Impact of Malicious Devices on a Cellular Network Core.
In ACM Conference on Computer and Communications Security
(CCS) (November 2009).

[37] PURPLELABS.

Tsm30 ﬁrmware.

http://web.archive.

org/web/20090325133430/http://sourceforge.net/
projects/plabs, November 2004.

[38] RACIC, R., MA, D., AND CHEN, H. Exploiting MMS Vul-
nerabilities to Stealthily Exhaust Mobile Phone’s Battery. In Se-
curecomm and Workshops, 2006 (28 2006-sept. 1 2006), pp. 1
–10.

[39] SECURITY RESEARCH LABS.

A5/1 decryption project.
http://opensource.srlabs.de/projects/a51-decrypt.

[40] SECURITY RESEARCH LABS. Decrypting GSM phone calls.

https://srlabs.de/decrypting_gsm/.

[41] SECURITY RESEARCH LABS. GSM security map. http://

www.gsmmap.org.

[42] SERROR, J., ZANG, H., AND BOLOT, J. C. Impact of paging
channel overloads or attacks on a cellular network. In Proceed-
ings of the 5th ACM workshop on Wireless security (New York,
NY, USA, 2006), WiSe ’06, ACM, pp. 75–84.

[43] SPAAR, D. RACH ﬂood DoS. http://security.osmocom.

org/trac/ticket/1, November 2009.

[44] T. ENGEL. Remote SMS/MMS Denial of Service - Curse Of
Silence. http://berlin.ccc.de/~tobias/cursesms.txt,
December 2008.

[45] VARIOUS CONTRIBUTORS. Osmocom project.

http://

osmocom.org.

[46] WEINMANN, R.-P. Baseband Attacks: Remote Exploitation of
Memory Corruptions in Cellular Protocol Stacks. In Proceedings
of the 21st USENIX Workshop on Offensive Technologies (Belle-
vue, WA, USA, August 2012).

[47] WELTE, H., MUNAUT, S., EVERSBERG, A., AND OTHER CON-

TRIBUTORS. OsmocomBB. http://bb.osmocom.org.

48  22nd USENIX Security Symposium 

USENIX Association

