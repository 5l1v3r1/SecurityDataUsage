Beheading Hydras: Performing Effective Botnet

Takedowns

Yacin Nadji

College of Computing
Georgia Institute of

Technology
Atlanta, GA

yacin.nadji@cc.gatech.edu

Manos Antonakakis

Damballa, Inc.

Atlanta, GA

manos@damballa.com

Roberto Perdisci

Department of Computer

Science

University of Georgia

Athens, GA

perdisci@cs.uga.edu

David Dagon

College of Computing
Georgia Institute of

Technology
Atlanta, GA

dagon@sudo.sh

Wenke Lee

College of Computing
Georgia Institute of

Technology
Atlanta, GA

wenke@cc.gatech.edu

ABSTRACT
Devices infected with malicious software typically form bot-
net armies under the inﬂuence of one or more command and
control (C&C) servers. The botnet problem reached such
levels where federal law enforcement agencies have to step
in and take actions against botnets by disrupting (or “taking
down”) their C&Cs, and thus their illicit operations. Lately,
more and more private companies have started to indepen-
dently take action against botnet armies, primarily focusing
on their DNS-based C&Cs. While well-intentioned, their
C&C takedown methodology is in most cases ad-hoc, and
limited by the breadth of knowledge available around the
malware that facilitates the botnet.

With this paper, we aim to bring order, measure, and
reason to the botnet takedown problem. We propose a
takedown analysis and recommendation system, called rza,
that allows researchers to perform two tasks: 1) a post-
mortem analysis of past botnet takedowns, and 2) provide
recommendations on how to successfully execute future bot-
net takedowns. As part of our system evaluation, we per-
form a postmortem analysis of the recent Kelihos, Zeus and
3322.org takedowns. We show that while some of these take-
downs were eﬀective, others did not appear to have a signif-
icant long-term impact on the targeted botnet. In addition
to the postmortem analyses, we provide takedown recom-
mendation metrics for 45 currently active botnets, where we
ﬁnd that 42 of them can likely be disabled entirely by using
a DNS-based takedown strategy only.

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
CCS’13, November 4–8, 2013, Berlin, Germany.
Copyright is held by the owner/author(s). Publication rights licensed to ACM.
ACM 978-1-4503-2477-9/13/11
http://dx.doi.org/10.1145/2508859.2516749.

Categories and Subject Descriptors
K.6.m [Management of Computing and Information
Systems]: Security; K.5.m [Legal Aspects of Comput-
ing]: Contracts

General Terms
Botnets

Keywords
botnet takedowns; takedown analysis; takedown policy

1.

INTRODUCTION

Botnets represent a persistent threat to Internet security.
To eﬀectively counter botnets, security researchers and law
enforcement organizations have been recently relying more
and more on botnet takedown operations. Essentially, a bot-
net takedown consists of identifying and disrupting the bot-
net’s command-and-control (C&C) infrastructure. For ex-
ample, in 2009 law enforcement and security operators were
able to takedown the Mariposa botnet, which at that time
consisted of approximately 600,000 bots. The takedown op-
eration was accomplished by ﬁrst identifying the set of do-
main names through which bots would locate their C&C
network infrastructure. By seizing this set of domains via
a collaboration with domain registrars, security operators
eﬀectively “sinkholed” the botnet, thus shunting the C&C
traﬃc away from the botmaster and avoiding any further
commands to be issued to the bots.

While sophisticated botnet developers have attempted, in
some cases successfully, to build peer-to-peer (P2P) bot-
nets that avoid entirely the use of C&C domains [18], most
modern botnets make frequent use of the domain name sys-
tem (DNS) to support their C&C infrastructure. This is
likely due to the fact that DNS-based botnets are much eas-
ier to develop and manage compared to their P2P-based
counterparts, and yet provide a remarkable level of agility
that makes a takedown challenging. For example, the Mari-
posa case required a coordinated eﬀort involving law enforce-
ment, security operators, and domain registrars across sev-

121eral diﬀerent countries. In addition, some recent takedown
eﬀorts [13] have caused some level of collateral damage, thus
raising both technical issues and policy-related questions re-
garding the eﬃcacy of botnet takedowns.

In this paper, we propose a novel takedown analysis and
recommendation system, which we call rza. Our main goals
are: (1) to provide a way to “go back in time” and quan-
titatively analyze past takedown eﬀorts to highlight incom-
plete takedowns and identify what worked and what could
have been done better; (2) to build a takedown recommen-
dation engine that aims to automatically enumerate a bot-
net’s C&C infrastructure, and suggest appropriate domain
sets to disable to maximize the chance of success. Specif-
ically, rza identiﬁes additional domains that are likely part
of a botnet’s C&C infrastructure by examining historical re-
lationships in the DNS and analyzing the botnet’s malware
samples. This aids the takedown process by identifying do-
mains that may have been missed by hand, both from the
network-level and the malware-level, aggregating this infor-
mation, and automatically labeling the domains with evi-
dence of their maliciousness. While rza focuses on dis-
rupting botnets that use DNS-based C&C infrastructure, it
can also assist in cases where botnets are more advanced and
use domain name generation algorithms (DGA) or communi-
cate using a peer-to-peer structure (P2P). In particular, rza
provides the ﬁrst few steps for remediating advanced C&C
infrastructure: (i) identifying DNS-based primary C&C in-
frastructure, if it exists; (ii) automatically identifying if the
botnet has DGA or P2P capabilities; and (iii) automatically
identifying the malware samples that exhibit these behav-
iors to triage binaries for reverse engineering. To successfully
takedown DGA/P2P botnets we must fully understand their
non-deterministic portions, such as the randomness seed for
DGAs [3] or the peer enumeration and selection algorithms
for P2P [18]. If we disable a botnet’s primary infrastructure
but do not account for the DGA-based backup mechanism,
our eﬀorts will be futile.

We show that in cases of past takedowns, likely mali-
cious domain names were left unperturbed. Worst yet, in
some cases malicious domains were unintentionally given
enterprise-level domain name resolution services. We show
that rza can identify additional sets of domain names that
ought to be considered in a future takedown, as well as au-
tomatically identify malware contingency plans when their
primary C&C infrastructure is disabled.

In summary, we make the following contributions:
• We propose rza, a takedown analysis and recommen-
dation system that allows us to measure and reason
about the success of past and future takedown eﬀorts.
To the best of our knowledge, we are the ﬁrst to pro-
pose such a botnet takedown analysis system.

• We apply rza to analyze three recent botnet takedown
operations. We show that while some takedowns were
eﬀective, others did not appear to actually disrupt the
entire targeted botnet.

• We use rza’s recommendation engine to analyze 45 live
botnets, and discuss in which cases a DNS-based take-
down operation is likely to succeed and what steps
would be necessary to accomplish the takedown in
practice. Of these, 42 could be straightforwardly elim-
inated using only DNS sinkholing.

The remainder of the paper is structured as follows: Sec-
tion 2 provides the necessary background on the DNS, bot-
net takedowns, and our datasets. Section 3 describes rza in
detail. Section 4 presents our postmortem experiments and
analyses of three recent, high-proﬁle takedown attempts.
Section 5 presents the output of rza when applied to 45
recently identiﬁed, distinct botnet C&C infrastructures. In
Appendix A we discuss non-technical diﬃculties associated
with performing takedowns that would make takedowns more
complete if alleviated.

2. BACKGROUND

In this section, we ﬁrst provide an historical explanation of
some past takedowns and explain why takedowns deserve to
be studied in detail. Then, we describe the datasets used by
rza to perform takedown analysis and to build the takedown
recommendation system.
2.1 Botnets and Takedowns

Botnet takedowns are not uncommon, and may take many
diﬀerent forms. Considering the heterogeneous nature of
client machines and the diﬃculty in keeping individual ma-
chines clean from infection, taking down the botnet C&C
is an attractive alternative. A successful takedown elimi-
nates most external negative impacts of the botnet, eﬀec-
tively foiling further attacks (e.g., spam, DDoS, etc.) by the
infected hosts, which can number in the millions.
In the
past, takedowns have been performed by revoking sets of
C&C IP addresses from hosting providers, de-peering entire
Autonomous Systems (AS), or, more recently, sinkholing or
revoking C&C domains.

Conﬁcker is an Internet worm that infected millions of
computers and remains one of the most nefarious threats
seen on the Internet to date [3]. Conﬁcker’s latter vari-
ants employed a DGA that would generate 50,000 pseudo-
random domain names every day to communicate with its
C&C server. The takedown of Conﬁker required immense
coordination across hundreds of countries and top-level do-
mains (TLDs), and numerous domain registrars and reg-
istries. The takedown eﬀorts were coordinated by the Con-
ﬁcker Working Group (CWG) [3]. The takedown required
reverse-engineering the malware binaries, and reconstructing
the DGA. Then, the CWG pre-registered all 50,000 domains
per day that could potentially be used for C&C purposes,
thus preventing the botmaster from regaining control of the
bots. The success of CWG’s eﬀorts highlight the impor-
tance of participation and support from key governing and
regulatory bodies, such as ICANN, and the need of coop-
eration between the private sector and governments around
the world.

Mariposa, a 600,000-strong botnet of Spanish origin, pro-
vides another example of a takedown operation initiated by
a working group that relied on sinkholing known malicious
domains. Interestingly, Mariposa’s botmasters were able to
evade a full takedown by bribing a registrar to return do-
main control to the malicious operators [10], underscoring
the fact that barriers to successful takedowns are not only
technical ones.

The DNSChanger [19] “click-jacking” botnet was also taken
down through a working group. DNSChanger altered up-
wards of 300,000 clients’ DNS conﬁgurations to point to
rogue DNS resolvers under the control of the attackers. This
allowed the attackers to direct infected hosts to illegitimate

122websites, often replacing advertisements with their own to
generate revenue. DNSChanger had to be taken down by
physically seizing the botnet’s rogue DNS servers. The take-
down was accomplished in late 2011. Largely considered suc-
cessful, the DNSChanger once again shows the importance
of collaboration when performing comprehensive takedowns.
Not all takedowns are performed at the DNS-level, how-

ever, as shown in the takedowns of McColo [8], AS Troyak [11],
and other “bulletproof hosting providers,” or networks known
to willingly support malicious activities. These are extreme
cases where the networks in question essentially hosted only
malicious content, and removing the entire network would
disable large swaths of botnets and related malicious net-
work infrastructure. The eﬀect of these takedowns were in-
directly measured by witnessing drops in spam levels, for ex-
ample, upwards of two-thirds decrease after McColo’s shut-
down [9]. Unfortunately, if a particular botnet relied on the
DNS to perform C&C resolutions into these bulletproof net-
works, once a new host was provisioned the threat would
continue. Sure enough, we saw spam levels rise back to nor-
mal levels as botnets moved to other hosting providers [5].
2.2 Datasets

rza relies on two primary data sources: a large passive
DNS database and a malware database that ties malicious
binaries to the domain names the query during execution.

Passive DNS.

A passive DNS (pDNS) database stores historic mappings
between domain names and IP addresses based on success-
ful resolutions seen on a live network over time. pDNS
databases allow us to reconstruct the historical structure
of DNS-based infrastructure based on how it was used by
clients. Our pDNS is constructed from real-world DNS res-
olutions seen in a large North American ISP. This allows us
to identify the related historic domain names (RHDN) for a
given IP, namely all domains that resolved to that IP in the
past. Also, pDNS allows us to ﬁnd the related historic IP
addresses (RHIP) for a given domain name, i.e., all the IPs
to which the domain resolved to in the past. Furthermore,
the RHIP/RHDNs can be limited to domain-to-IP mappings
that occurred during a particular time frame of interest, thus
allowing us to focus on the crucial days before and after a
takedown took place.

To enable our takedown analysis we deﬁne the following

functions over the pDNS database:

• RHIP(domain, start_date, end_date): returns all do-
mains historically related to the domain argument over
the period between the desired start and end dates.
For example, RHIP(foo.com, 2012/01/01, 2012/01/05)
would return the set of all IP addresses foo.com suc-
cessfully resolved to between January 1st, 2012 and
January 5th, 2012, inclusive.

• RHDN(IP, start_date, end_date): similarly, RHDN
returns all domains historically related to the IP argu-
ment over the period between the start and end dates.
• Volume(domain and/or IP, date): the total successful
lookup volume to the argument domain, IP, or domain
and IP tuple on the argument date.

demonstrate that rza can properly function using diﬀerent
sources of passive DNS data, we obtained temporary access
to the ISC-SIE passive DNS database [4], which is avail-
able to other researchers and oﬀers an arguably more global
perspective.

Malware Domains.

We also make use of a separate malware database that
contains mappings between a malware sample’s MD5 sum
and binary and the domain names and IP addresses it has
queried during dynamic malware analysis. Each entry in the
database is a 4-tuple that includes the MD5 of the malware
sample, the queried domain name, the resolved IP address,
and the date and time of the analysis.
These data are
collected from a combination of internal malware analysis
output as well as the output from a commercial malware
feed.

3. RZA SYSTEM

In this section, we detail the internals of rza, our takedown

analysis and recommendation system.
3.1 Overview

Figure 1 shows the overall process implemented by rza.
Given a set of known seed botnet domains DS, rza can be
asked to generate either a “Postmortem Report” or a “Take-
down Recommendation”.

In the “Postmortem Report” mode, the input domains rep-
resent the domains known to have been targeted by an his-
toric takedown. This produces a report that shows the eﬀec-
tiveness of the takedown of the domain names (Figure 1, step
5a) with respect to the expanded infrastructure rza identi-
ﬁes.

In the “Takedown Recommendation” mode, the input do-
mains represent the currently known malicious domains used
for C&C infrastructure. Furthermore, the takedown recom-
mendation engine explores possible network resources that
may be used by the botnet as a C&C backup mechanism,
and suggests any additional measures that must be taken af-
ter the primary C&C is disabled to fully eliminate the threat
(Figure 1, step 5b).

At a high level, the processing steps executed by rza are
similar when producing both the “Postmortem Report” and
“Takedown Recommendation”, despite the diﬀerence in in-
puts and the meaning of the results. The steps are:

1. Expand the initial domain seed set DS using the pDNS
database to identify other domains that are likely re-
lated to the botnet’s C&C infrastructure. Intuitively,
domains are cheap but IP addresses are relatively more
expensive. By identifying additional domains that re-
solve to the same hosts as malicious domains, we can
identify other potentially malicious domains related to
the botnet.

2. Identify the subset of the expanded domains that are
queried by known malware samples. If a domain both
points to a host known to facilitate a C&C and is also
used by known malware, it increases the likelihood of
that domain itself being malicious as well.

It is important to note that our use of private pDNS data
was dictated mainly by convenience and cost issues. To

3. Identify the subset of the expanded domains with low
domain name reputation. Similar to the intuition of

123Figure 1: Overview of rza.

Step 2, a domain that points to a known malicious
host and also has low domain reputation is more likely
to itself be malicious.

In the remainder of this section we describe each of these
high-level tasks in detail, and discuss how they work together
to suggest a takedown response.

4. Analyze the malware samples identiﬁed in Step 2.

In
addition to straightforward dynamic malware analy-
sis, we trick executing malware samples into believing
that their primary C&C infrastructure is unavailable
using a custom malware analysis system [17] to extract
additional C&C domain names.
Intuitively, domains
used by malware related to the infrastructure we are
studying are likely to be related and malicious. Fur-
thermore, we use the results of the analysis to iden-
tify malware contingency plans that would allow the
botnet to continue to function after its primary C&C
infrastructure has been disabled (e.g., a DGA-based or
P2P C&C).

5. Output either the “Postmortem Report” or “Takedown
Recommendation” depending on the mode of operation
selected at the beginning.

The guiding principle we follow with rza is to push our un-
derstanding of malicious C&C infrastructure towards com-
pleteness. Only once we have fully enumerated the C&C
infrastructure can we successfully disable it. We can begin
to enumerate C&Cs from the network-level by identifying
historic relationships between domain names and hosts us-
ing pDNS evidence, and from the host-level by interrogating
malware samples. Since the pDNS may contain additional
domains not necessarily related to the botnet in question, we
identify subsets of domains so we can focus our investigative
eﬀorts on those that are most likely to be malicious and not
inundate ourselves with information. Each subset serves a
diﬀerent purpose: the low reputation subset holds the do-
main names from the network-level that are most likely to be
malicious. The subset of domains queried by malware repre-
sents a reasonable baseline to expect from prior takedowns,
as much of this information is readily available to the secu-
rity community. The subset gleaned from malware analysis
contains the domains from the host-level that are the most
likely to be malicious. We can use these sets to measure the
eﬀectiveness of past takedowns and recommend domains for
future takedowns.

3.2 Infrastructure Enumeration

Botnets often make use of the DNS to increase the relia-
bility of their C&C infrastructure, for example using domain
name ﬂuxing or simply replacing retired or blacklisted do-
mains with new domains. This cycling of domains, however,
leaves a trail in the pDNS database and can be used to enu-
merate the infrastructure. For example, consider a malware
sample m that on day t1 uses domain d1 as its primary C&C
domain, but on day t2 switches to domain d2 to evade the
blacklisting of d1. Assume d1 and d2 resolve to the same IP
address. Analysis during either t1 or t2 yields only one of
the possible domains, but the relationship between d1 and d2
can be identiﬁed in a pDNS database because both resolved
to the same IP address.

Using the passive DNS database and the seed domain set
DS, we compute the enumerated infrastructure domain set
De using Algorithm 1. First, the related-historic IPs (RHIP)
of DS are retrieved and known sinkhole, parking, and pri-
vate IP addresses are removed. The related-historic domain
names (RHDN) for the remaining IPs are retrieved, and any
benign domain names are removed, yielding the enumerated
infrastructure of DS: De. The relationships retrieved from
the pDNS database are within a range of dates to ignore
historic relationships that are no longer relevant. This con-
stant is customizable but we empirically chose seven days
based on the trend in domain name activations and deacti-
vations to the domain names contained in De as described
in Appendix C.

To understand why we ﬁlter out benign domains consider
an attacker that, in an attempt to mislead our analysis,
temporarily has their malicious domains resolve into benign
IP space (e.g., Google’s) or uses a popular hosting provider
(e.g., Amazon AWS). If either of these occur, the De domain
set may include unrelated, benign domain names. To handle
this, we ﬁlter domains if they are a member, or are a sub-
domain of a member, of the set of the Alexa top 10,000 do-
main names. These domains are unlikely to be persistently
malicious and should not be considered for takedown.
IP

DomainsInfrastructureEnumerationDomainReputationDomain &MD5 AssociationMalwareInterrogationpDNSMalware DBMD5sRZAEnumeratedDomainsLow ReputationDomainsMalware-relatedDomainsInterrogatedDomainsPostmortemReportTakedownRecommendation12345a5bMalware Backup Plan124Input: DS, startdate, enddate: seed domain set, and

bounding dates

Output: De: enumerated domain set
Ib ← set of known sinkhole, private, parking IPs
Wd ← set of Alexa top 10,000 domain names
I ← RHIP (DS, startdate, enddate)
I ← I \ Ib
De ← RHDN (I, startdate, enddate)
De ← De \ Wd
return De

Algorithm 1: Infrastructure enumeration procedure.

addresses that are non-informative (private, sinkhole, etc.)
are also removed, as the domains that resolve to them are
unlikely to be related. For example, malware domains some-
times point to private IP addresses (e.g., 127.0.0.1) when
they are not in use, which if not removed would link oth-
erwise unrelated domain names. We use the Alexa top
10,000 in Section 3.3, and for consistency we use it here as
well. In future work we intend to explore the eﬀect of using
smaller and larger whitelists on the generated sets and their
accuracy.
3.3 Malware Interrogation

We can interrogate a single malware sample under dif-
ferent environmental conditions to learn additional domains
it may use to reach its C&C, as well as any contingency
plans for C&C infrastructure failure. We identify the set
of malware samples M that communicate with domains in
De for interrogation. To accomplish this, we can use our
existing system that studies malware’s behavior under pri-
mary C&C failure [17] to automatically determine malware
backup plans. We run an individual malware sample un-
der ﬁve execution scenarios, extract the network endpoints
the malware sample used to “phoned home”, and based on
the diﬀerences observed during executions, we identify likely
backup plans.

Behaviorally, most malware when presented with unavail-
able centralized infrastructure resort to one of the following
backup plans:

1. The malware simply retries connecting to hardcoded

domains and/or IP addresses.

2. The malware attempts to connect to a ﬁnite set of

additional domains and/or additional IP addresses.

3. The malware attempts to connect to an “inﬁnite” set
of domains and/or IPs. This occurs when a malware
uses a DGA- or P2P-based backup system.

We can isolate and detect these behaviors by running each
sample and applying various packet manipulation scenarios
to simulate infrastructure takedown. As a control, we ma-
nipulate none of the packets during execution. To show that
a domain name has been revoked, we rewrite all DNS re-
sponse packets that resolve non-whitelisted domain names
to say the domain no longer exists (NXDomain). We run
a sample under this scenario twice for durations t and 2t.
To feign IP address takedowns, we interrupt TCP streams
with TCP reset (RST) packets when the destination is to
a non-whitelisted IP address. We also run this scenario for

durations t and 2t. Intuitively, if the number of endpoints
(domains or IPs) remains consistent across all runs, the mal-
ware sample does not include a contingency plan for C&C
failure. If the number of endpoints is greater when the DNS
or TCP rewriting is enabled, but remains similar between
the two runs with diﬀerent durations, we expect the mal-
ware contains a ﬁnite set of additional endpoints as a backup
mechanism. However, if we see many more endpoints in the
2t duration run than in the t run, this suggests the malware
is capable of constantly generating additional candidate do-
mains or IPs to connect to, which indicates DGA or P2P
behavior, respectively.
In the event that the primary C&C
infrastructure is already disabled as we would expect in the
postmortem studies, the interrogation results still hold. If
the botnet employs a backup DGA/P2P mechanism, we will
still detect this as the t and 2t duration runs will still diﬀer.
The system may misclassify a sample as having no backup
plan if its infrastructure is already disabled, but this is un-
likely to eﬀect rza from functioning properly. Consider a
sample m that has a ﬁnite number of backup domains, but
all of the primary domains have already expired and return
NXDomain. The control run and DNS rewriting run will
be identical and the sample will be misclassiﬁed as having
no backup behavior, however, we will still identify all the
backup domains so the results will still hold.

We empirically design heuristics using the above intuition
and by analyzing 595 malware samples from 10 malware
families with known contingency plans and catering our rules
to perform the identiﬁcation. Of the samples analyzed, 433
had no contingency plan, 55 used a DGA, 81 used P2P com-
munications, and 22 employed a ﬁnite set of backup do-
mains. None of the analyzed malware used a ﬁnite number
of additional IP addresses. Our heuristics successfully clas-
siﬁed 97% of the samples’ contingency plans correctly.

3.4 Categorizing the Expanded Infrastructure
Not all domains identiﬁed during the infrastructure enu-
meration process are guaranteed to be malicious, but we can
identify subsets that are more likely to be malicious. For ex-
ample, a domain that resolves to an IP address in a virtual
web hosting provider is likely to have many benign and un-
related domains that resolve to the same infrastructure as
well. To account for this, we focus on domains with known
(often public) malware associations, and domains that have
low domain name reputation.

Using the passive DNS, we expand the initial seed do-
main set, DS, into the expanded set De. Next, we identify
Dm ⊆ De and Dr ⊆ De, the subset of domain names in
De with known malware associations and low domain name
reputation, respectively. Malware associations are retrieved
from our domain name to malware MD5 database and are
commonly available in the security community [20]. To de-
termine if a domain name has low reputation, we use a sys-
tem similar in spirit to [1, 2] which scores domain reputation
between 0.0 and 1.0, where 1.0 denotes a low reputation (i.e.,
likely malicious) domain name. Any domains with > 0.5
reputation are considered malicious and are added to Dr.
Unlike Dr and Dm, the set Di is not necessarily a subset of
De. Any domains that are used by malware during malware
interrogation are added to Di. These domains expand our
coverage as they may unearth domain names that were not
previously included in De. During our postmortem analy-
sis, we compare these sets to the domains that were actually

125involved in the takedown (DS).

Figure 2 shows a Venn diagram representation of a pos-
sible conﬁguration of enumerated infrastructure sets. All
sets, excluding Di, are subsets of De. Di is the most likely
to include domains outside of the scope of De, but suﬀers
the most from the problem of completeness as it relies on
dynamic malware analysis.

ening the negative impact incurred by collateral damage.

Ground truth for C&C infrastructure is diﬃcult to come
by, which makes evaluating true positives and false positives
exceedingly diﬃcult. To roughly estimate this, we present
the precision and recall of each set against the “correct” set
of Dr ∪ Di. If we assume that domains ﬂagged as low rep-
utation or used by malware known to be aﬃliated with a
given botnet are malicious, we can use this union to roughly
correspond to ground truth. In our case, the precision of a
set D is the fraction of the number of domain names d that
are d ∈ D ∧ d ∈ Dr ∪ Di over the size of D or |D| and the
recall is the fraction between the same number of domain
names as in the precision but over the size of the “correct”
set, or |Dr ∪ Di|.

Figure 2: Venn diagram of identiﬁed infrastructure sets.

3.5 Takedown Recommendation Engine

Using the four aforementioned techniques, we can run
our takedown protocol as shown by the decision tree in
Figure 3.
Suppose we are interested in taking down a
hypothetical botnet where the current known infrastruc-
ture is DS = {01.hans.gruber.com}. After enumerating
the infrastructure, we identify the additional domain name
02.hans.gruber.com that resolves to the same IP as the 01
child domain. We identify and retrieve the malware samples
that have queried the 01... and 02... domain names and
interrogate them. We identify an additional domain name,
03.hans.gruber.com, when the ﬁrst two domain names fail
to resolve. Since we identiﬁed a ﬁnite number of new domain
names, we re-run the process with the expanded set of three
domain names and this time the malware analysis yields no
behavioral changes from what we have already identiﬁed. In
the event a DGA or a P2P backup scheme is present, the
DGA must be reverse-engineered or the P2P network must
be subverted as described in [18] after disabling the main
C&C infrastructure, respectively.

The question remains which sets of domains should be re-
voked or sinkholed in order to terminate the botnet’s C&C
infrastructure, which ultimately must be decided by human
operators. In the case where eliminating the botnet is more
important than any possible collateral damage that may be
incurred, the set of domains in De ∪ Di should be targeted,
which we consider to be the “nuclear” option. This contains
any domain name associated with the C&C infrastructure
as well as domains queried by the related malware. In other
scenarios, however, this may incur too much collateral dam-
age. We recommend revoking Dr∪Di instead in these cases,
as these domains are very likely to be malicious. These de-
cisions should be made by threat researchers based on the
potential risks associated with deactivating these domain
names. Another, less extreme option is to simply block
these domains at the network’s egress point. This allows
enterprise-sized networks to protect themselves while less-

Figure 3: Takedown recommendation engine shown as a de-
cision tree. D in this case represents either Dr ∪ Di, which
only targets C&C domains that are very likely to be mali-
cious or De ∪ Di, or the “nuclear” option that should only
be used when the threat of the botnet outweighs potential
collateral damage.

3.6 Use of Other Sources of pDNS Data

Out of both ﬁnancial and analysis convenience, we ran our
experiments using Damballa’s internal passive DNS database.
To show that our results are not tied to private data and can
be replicated by other researchers, we run a subset of our
experiments using the Internet System Consortium/Security
Information Exchange’s (ISC/SIE) passive DNS database [4]1.
While the database is not exactly public, it is generally avail-
able to practicing researchers and professionals in the secu-
rity community (possibly for a fee). As pDNS data becomes
more popular, we expect the number of these databases to
increase and become more easily accessible by researchers.
1Since the additional experiments were run, the ISC/SIE’s
pDNS database has been acquired by a private company,
Farsight Security Inc. The website suggests database ac-
cess will continue to be made available to qualiﬁed security
researchers and practitioners.

DeDsDiDrDmDm: malware-related domainsDe: enumerated domainsDr: low reputation domainsDs: seed domainsDi: malware interrogation domainsEnumerate InfrastructureInterrogateMalwareNo Behavioral ChangesFinite Domains/IPsDGAInput: {Ds}Input: {De U Di}ClassifyMalware BehaviorP2P1.) Revoke D1.) Reverse engineer DGA2.) TLD cooperation3.) Revoke D1.) Counter P2P2.) Revoke D126Using ISC/SIE’s pDNS database and rza’s process out-
lined in this section, we generate the De, Dm, and Dr do-
main sets of one postmortem takedown and ﬁve current
botnets. As before, we compute the respective TIR val-
ues of each set. We chose the ﬁve botnets with the largest
C&C infrastructure that Damballa began tracking in April,
2013. Our results from the SIE dataset are presented in
Appendix B.

m, Dt

If T IR(Dt

rather than the mean, since we are interested in preserving
long-term lookup volume trends, which are not captured by
outliers.
S) > 1, this means the subset of
De of malware-related domain names Dt
m had a stronger
lookup volume and accounts for domain names missed by
S. Conversely, if the T IR ≤ 1, the
the takedown domains Dt
takedown deactivated related malware domains already and
was successful. We also identify malware backup behaviors.

4. POSTMORTEM STUDIES

Estimating Risk.

In this section, we describe how we use rza to evaluate
historical takedowns. We introduce the takedowns we study
and describe the measurements we use to understand the
eﬀectiveness of the takedown. We end the section with our
experimental results on the postmortem studies. We brieﬂy
describe how we identiﬁed the initial seed domain sets (DS)
for prior takedowns in Section ??.
4.1 Postmortem Analysis

For our postmortem analysis, we chose to study the take-
downs of Kelihos [12] (aka Operation b79), a Zeus botnet in-
stance [14] (aka Operation b71), and the 3322.org NS take-
down that targeted the Nitol botnet [13] (aka Operation
b70). We chose these takedowns because they are both re-
cent and high proﬁle. For each takedown, we collect the do-
mains described in the temporary restraining orders (TRO)
and use these as our seed domains (DS).

Measuring Takedown Improvement.

Prior studies of botnet takedowns relied on secondary
measurements, such as global spam volumes, to determine
the success of a takedown. Instead, we directly measure the
successful domain name resolutions to the identiﬁed infras-
tructure to proxy for the victim population. By comparing
the lookup volume to the seed domains (DS) with the lookup
volume to the sets of domains identiﬁed by rza, we can de-
termine if a takedown was successful and what domains it
missed. For example, if all domain sets are equivalent, their
lookup volumes will be identical and the takedown would be
considered successful.

r and Dt

More formally, for each takedown, t, and its collected seed
domains, Dt
S, we generate the enumerated infrastructure
sets Dt
m, Dt
e, Dt
e is generated using
only successful DNS resolutions that were issued during the
seven days before the takedown of t was performed according
to the court documents2. This allows us to compare what
was actually disabled and/or sinkholed during the takedown
with what rza would have recommended.

i using rza. Dt

For a period of 14 days surrounding the takedown, we plot
the successful aggregate daily lookup volume to each of the
previously identiﬁed sets. To quantify the gains in takedown
eﬀectiveness, we calculate the takedown improvement ratio
as deﬁned by Equation 1.

T IR(D1, D2) =

M DLV (D1)
M DLV (D2)

(1)

Where D1 and D2 are two domain name sets and M DLV
is a function on domain name sets that computes the me-
dian daily successful lookup volume. We use the median,
2These are September 11th, 2012; March 25th, 2012 and
September 26th, 2011 for the 3322.org, Zeus and Kelihos
takedowns, respectively.

To provide a diﬀerent perspective, we also quantify the
potential risk of collateral damage, or the negative eﬀect of
mistakenly taking down benign domains. Ideally, we would
represent this by the number of distinct clients that would
be denied access to benign services, however, we can once
again turn to the lookup volumes to proxy for this.

If we assume all infected botnet hosts behave identically,
the aggregate lookup volume on a given day is proportional
to the number of infected clients. At most, a single lookup
corresponds to a distinct client reaching that domain, how-
ever, due to DNS caching eﬀects, diﬀerences in malware vari-
ant and human behaviors, and network address translation
(NAT), this is likely an overestimation of the actual client
population. We assume that these behaviors are consistent
with respect to queries towards a given botnet.

We quantify the potential risk of collateral damage for
a takedown as the diﬀerence in the median lookup volume
between an enumerated set and the initial seed domain set
as deﬁned by Equation 2.

Risk(D1, D2) = M DLV (D1) − M DLV (D2)

(2)

Using similar notation as seen in Equation 1. Intuitively,
the diﬀerence between these two quantities is proportional
to the number of individuals that would be inconvenienced
by this takedown if all the domains in D1 that are not in
D2 are not malicious. This provides an upper bound on the
potential risk involved. The “nuclear option” of taking down
all the domains in De, or sinkholing all domains that resolve
to hosts known to provide C&C for a botnet, is the only way
to ensure the C&C communication line is severed, however,
this should be weighed against the potential risks.

An analyst wishing to perform a takedown can use the risk
values to weigh whether to employ the “nuclear” option or
the more reserved options as described in Section 3.5. In fu-
ture work, we hope to improve the risk measure in two ways.
First, we can correlate the risk value with the identiﬁed true
and false positive rates during a real, or simulated, take-
down. Furthermore, we wish to more accurately estimate
the true population of visitors to infrastructure, malicious
or otherwise. This can further help analysts by allowing
them to weigh the likelihood of maliciousness against the
population that would be aﬀected by a takedown.

For each of the following takedown postmortem analy-
sis, the dashed red line on each plot indicates the date the
takedown was performed according to the court proceedings.
Each line plot represents the aggregate daily lookup volume
to a subset of domains that are either directed to a sinkhole
or contained within the enumerated infrastructure sets gen-
erated by rza. In all cases the De lookup volume represents
an upper bound of malicious lookups.

127Sets
Dm, DS
Dr, DS
Di, DS
De, DS

TIR value
0.913
5.690
0.022
10.230

Risk
-399.5
21,555
-4,492.5
42,415.5

Table 1: T IR and Risk values for Kelihos takedown. These
values represent the improvement to a takedown based on
rza’s output and the potential risk of collateral damage, re-
spectively.
4.2 Kelihos

The Kelihos botnet was a spam botnet that sent approx-
imately four billion spam messages[15] a day in its ﬁrst it-
eration and was targeted for takedown in late 2011. We
show the daily volumes for the sets DS, De and Dm for Ke-
lihos in Figure 4. The day Kelihos was taken down, we see
lookups to the seed domains completely stop, showing that
these domains were eﬀectively remediated. The court order
did not specify sinkholes to be used, which explains why the
domains simply cease to resolve. The set of malware-related
domains, Dm, and interrogated domains, Di, also cut oﬀ
sharply at this point, with a handful of successful resolu-
tions occurring for Dm a few days after the takedown date
and ceasing to resolve afterwards. This suggests the initial
takedown missed some domains, but these were quickly re-
mediated as well. Dr has a spike similar to De, and upon
further investigation the spike was revealed to be a mali-
cious domain that resolved into Kelihos’ infrastructure but
could not be conﬁrmed to be a Kelihos C&C. This domain
stopped resolving after the peak date (September 24th).

The computed T IR values are shown in Table 1. Much
like the daily volumes ﬁgure, the T IR values suggest this
takedown was successful. We see large T IR values for De
and Dr, which indicate additional malicious domains were
left unperturbed that resolved into Kelihos’ hosting infras-
tructure. The similar trend between De and Dr suggests
that many of the extended infrastructure domains are in fact
malicious and could have been removed during the Kelihos
takedown eﬀort.

For the De and Dm sets, we have precision and recall
of 0.22/0.67 and 0.25/0.03, respectively. The recall for De
is quite low as this means upwards of 30% of the domain
names that are likely malicious were harvested from malware
interrogation. This stresses the importance of labeling both
from network information from pDNS, as well as information
gathered from malware.

According to the analysis by rza, this takedown was largely
a success, however, we know that new variants of Kelihos
emerged soon after. Analyzing its 168 malware samples from
before the takedown shows that a P2P C&C mechanism ex-
isted as a backup plan in the malware, which may have
helped bootstrap its resurgence. This stresses the impor-
tance of being prepared to counter malware behavior after
its primary infrastructure has been disabled.
4.3 Zeus

The Zeus takedown targeted a large botnet that used the
popular malware kit Zeus to create its malware. This take-
down relied on sinkholing the seed domains. We show the
daily volumes for the sets DS, De, Dm, Dr, as well the vol-
umes for domains in De that resolve into sinkholes operated
by Microsoft and the other sinkholing party, in Figure 5. Of

Figure 4: Kelihos aggregate daily lookup volume (log-scale).

the 2,825 malware samples analyzed, none of them included
a P2P- or DGA-based contingency plan.

The ﬁrst observation is that unlike in the case of Keli-
hos, Microsoft began sinkholing domains before the date
speciﬁed in the court order as evidenced by the non-zero
query volume resolving into Microsoft’s sinkholes before the
takedown date. To reiterate, domains that resolved only to
the sinkhole before the takedown date were not included to
prevent prior uses of the sinkhole from interfering with our
results. Furthermore, the volume of lookups that resolve
into the sinkhole are orders of magnitude larger than the
lookups only to the seed domains, suggesting that domains
not speciﬁed in the court order were also sinkholed. We see
a spike in lookup traﬃc directed towards the seed domains
and domains that resolve to Microsoft’s sinkhole, indicat-
ing increased sinkholing action at the time of takedown.
rza’s Dm set captured fewer domains than those sunk by
Microsoft’s sinkhole, however, there is a large discrepancy
in lookups to domains ﬂagged as malicious by our reputa-
tion system, i.e., lookups to the domains in set Dr. We see
a drop in lookups to Dr that corresponds to the Microsoft
sunk domains, which indicates Dr subsumes the set of sunk
domains. The other sinkhole operation experienced a similar
drop after the Microsoft takedown, which suggests there was
contention over which domains belonged to which sinkhole.
In this takedown, the ad-hoc nature of takedowns made
coordination between companies diﬃcult and the lack of
oversight allowed the court order to not be followed exactly.
While Microsoft was clearly sinkholing more domain names,
the takedown interfered with an existing takedown. With-
out a centralized method of communicating who is sinkhol-
ing what, this pattern of stepping on other researchers’ toes
is likely to continue.

The computed T IR values are shown in Table 2. We
compare against both the seed domain set, and the set of
domains resolving into Microsoft’s sinkhole. With respect
to the seed domain set, we nearly tie considering malware-
related domains and capture many more lookups to poten-

128Sets
Dm, DS
Dr, DS
Di, DS
De, DS
Dm, Dmssink
Dr, Dmssink
Di, Dmssink
De, Dmssink

TIR value
0.979
3.921
0.148
14.321
0.553
2.215
0.084
8.091

Risk
-11,357.5
1,641,580
-478,874
7,486,221
-444,265.5
1,208,672
-911,782
7,053,313

Table 2: T IR and Risk values for Zeus takedown.

tially malicious domains when considering the dataset de-
rived from reputation, Dr. The story is similar when com-
pared to domains that resolve into the Microsoft sinkhole,
but to a lesser extent. Recall the volumes for Microsoft sink-
hole resolutions only include domains we identiﬁed in De.
This suggests that not only were these deemed malicious by
a 3rd party, but they were added by Microsoft independent
of the domains listed in the court order.

For the De and Dm sets, we have precision and recall of
0.03/0.98 and 0.30/0.01, respectively. Most of these values
are quite low, with the exception of De’s recall, which is
unsurprising. This indicates most of the malicious domains
could be identiﬁed through passive DNS. The low precision
value for De indicates that many of these domains should
probably not be targeted in a takedown and the low preci-
sion for Dm suggests that while many have low reputation
and are likely malicious there are no known malware asso-
ciations, reinforcing the motivation for using domain name
reputation.

Figure 5: Zeus aggregate daily lookup volume (log-scale).

4.4 3322.org

The 3322.org takedown represents the most extreme case
where rza would have improved a takedown’s eﬀectiveness.
This takedown was accomplished by transferring the entire
3322.org Name Server’s (NS) authority to Microsoft and do-

Sets
Dm, Dmssink
Dr, Dmssink
Di, Dmssink
De, Dmssink

TIR value
13.821
18.956
1.049
654.940

Risk
409,593.5
573,627.5
1,560
20,890,774

Table 3: T IR and Risk values for 3322.org takedown.

mains deemed malicious resolved to a set of known sinkhole
IP addresses. The daily volume plot for 3322.org is shown
in Figure 6. Unlike the Zeus takedown, domains were sunk
on the day of the takedown and were limited to *.3322.org
domain names. Unfortunately, this only accounted for a
fraction of the lookups to domains with known malware as-
sociations, Dm, and domains with low reputation, Dr that
resolved to hosts known to support malicious activity. We
notice a drop in lookups to Dm and Dr when the takedown
is performed, showing that most of the domains targeted by
the takedown were likely malicious, however, the lookups to
remaining infrastructure identiﬁed by rza are still frequent.
We see Di closely matches the sinkholed domain names, sug-
gesting this is the primary method that was used to identify
the takedown domains. Unlike the previous two cases, all
enumerated sets have T IR values greater than one. This
agreement suggests that malicious domains were almost cer-
tainly missed during the 3322.org takedown eﬀort. Of the
10,135 malware samples we analyzed, none of them had a
P2P- or DGA-based contingency plan.

This case shows the importance of using multiple sources
to determine related malicious infrastructure before perform-
ing a takedown. Simply identifying domains with known
malware associations oﬀers a substantial improvement on
the eﬀectiveness of the takedown. Further, the similarity
between the Dm and Dr trends shows most of the domains
overlap between the two, which only further bolsters the
likelihood that they are indeed malicious. To make matters
worse, all the domains that were not sinkholed were given
enterprise-level domain name resolution services, despite the
high probability they were involved in malicious activities.
The computed T IR values for the 3322.org takedown are
shown in Table 3. Unlike the previous two postmortems,
rza identiﬁed numerous additional malicious domains that
were left undisturbed by the takedown on 3322.org.

For the De and Dm sets, we have precision and recall
of 0.06/0.95 and 0.38/0.03, respectively. These results are
similar to those for Zeus and further reinforce the need to
include domain reputation as a measure in rza. Simply rely-
ing on passive DNS (for De) and malware associations (for
Dm) overestimate and underestimate the malicious domain
names, respectively.

5. TAKEDOWN RECOMMENDATION ANAL-

YSIS

In this section, we run rza’s takedown protocol on 45 bot-
net C&Cs being tracked by Damballa, Inc. during the
month of April, 2013 and present the results. We chose
to use the C&Cs already tracked by Damballa out of conve-
nience and it is important to stress that they could be sub-
stituted by any set of domain names known to correspond
to a botnet’s C&C infrastructure. There are many publicly
available sources of this information that allow similar ex-
periments to be repeated. The calculated TIR values and

129Acknowledgments
The authors thank the anonymous reviewers for their help-
ful comments and insightful questions, and our shepherd

ID
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45

De
7.229
13.669
0.856
2.808
12.005
20.632
2.130
289.387
42.570
0.746
3.783
13.115
10.139
8.266
2.028
471.226
87.004
27.036
8715.005
170.752
7.260
13.492
14.146
52.593
223.201
1067.604
293.466
1.251
13.589
380.568
17.700
5.857
25.042
0.156
25.048
12.121
11.698
91.364
4.640
7.491
3.161
2.378
33.227
21.761
2.217

Dm
2.719
0.000
0.000
1.158
10.117
1.448
0.015
154.932
0.000
0.000
1.068
3.809
1.698
0.000
0.189
76.176
33.807
1.810
816.740
0.743
2.012
1.364
0.000
0.000
6.869
0.000
46.070
0.311
0.547
27.986
0.000
4.679
4.085
0.139
1.272
7.364
10.329
0.457
1.085
0.303
0.485
0.487
12.958
2.219
0.101

Dr
6.815
23.891
0.764
2.602
11.612
15.665
0.798
233.521
23.522
0.597
3.208
11.896
8.726
8.259
0.131
392.788
72.759
14.952
8696.197
10.210
5.828
12.011
12.891
52.174
21.504
1062.696
232.437
0.923
4.886
350.686
16.837
5.724
21.460
0.152
15.638
11.183
11.544
9.618
3.694
6.865
2.700
2.372
31.650
3.061
2.150

Di
1.446
275.751
0.142
0.554
0.023
0.044
11.917
0.000
1.395
0.241
0.255
0.246
0.697
3.190
0.094
1.045
4.052
1.021
8.520
0.405
0.056
0.000
7.449
0.967
0.000
0.001
0.005
0.082
1.100
0.082
0.500
0.575
3.094
0.014
0.000
0.336
2.321
0.000
0.599
257.059
0.187
1.288
3.014
1.108
0.103

Backup Plan
finite-domain
p2p
none
dga
none
none
none
none
finite-domain
finite-domain
none
none
none
none
finite-domain
finite-domain
none
none
none
finite-domain
none
none
none
finite-domain
none
finite-domain
none
dga
finite-domain
none
finite-domain
finite-domain
none
finite-domain
none
finite-domain
none
none
finite-domain
finite-domain
finite-domain
finite-domain
none
none
none

Table 4: Recent botnet TIR values (compared against DS)
and backup plan classiﬁcation.

ID
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45

Dm
De
103,904
376,591
−494
6260
−51,681
−7425
60,473
694,233
402,158
485,427
8262
362,341
−5320
6103
666,902
1,249,414
−6140
255,237
−20,195
−5122
73,348
3,024,316
20,801
89,727
698,974
9,150,880
−2472
17,959
−461
585
656,434
4,106,017
30,721
80,537
97
3128
25,987
277,603
−8674
5,719,294
171,489
1,061,289
162,678
5,586,161
−36,417
478,741
−3970
204,816
238,626
9,034,976
−29,901
31,892,669
311,893
2,023,910
−1897
692
26,164,386 −942,098
341,286
24,265
−1414
23,614
392,925
297,607
3,798,382
487,342
−6385
−6519
468,361
5289
741,041
424,070
452,686
394,741
−40,216
6,688,344
39,173
1,676,605
5,515,527 −592,194
−38,321
160,793
−83,469
224,265
243,983
90,534
3,648,885
214,216
498,000 −367,626

Dr
351,529
11,312
−12,205
614,941
468,070
270,663
−1088
1,007,383
138,285
−8131
2,399,494
80,695
7,735,834
17,942
−494
3,421,089
67,197
1676
277,004
310,317
818,507
4,923,961
433,040
203,153
833,715
31,745,933
1,601,580
−212
8,075,579
314,418
22,393
382,154
3,232,483
−6416
285,099
678,530
446,180
637,882
1,240,928
4,983,178
126,529
223,419
232,045
362,154
470,334

Di
26,974
135,766
−44,352
−171,099
−44,110
−18,457
58,936
−4332
2427
−15,320
−1,086,629
−7406
−1,001,304
5412
−515
−8732
−936
−120
−32
−33,692
−169,516
−447,172
234,848
−130
−40,652
−29,860
−6889
−2528
−2,078,370
−825
−707
−34,345
−157,989
−7466
−19,476
−44,278
−42,314
−74,015
−184,676
217,562,247
−60,522
46,946
−7571
−175,760
−409,148

Table 5: Recent botnet Risk values (compared against DS).

Figure 6: 3322.org aggregate daily lookup volume (log-
scale).

predicated backup plans for the 45 botnets are shown in Ta-
ble 4 and the associated Risk values are shown in Table 5.
Overall, the TIR values indicate we are gaining additional
infrastructure information as we did in the postmortem cases.
Similarly, we see very large TIRs for the expanded infras-
tructure set, De, further evidence that infrastructure related
by the passive DNS includes additional domains that need
to be narrowed down by categorizing the domain sets. These
TIR values were smaller, as we saw with the postmortems,
with the malware-related and reputation-based sets—Dm
and Dr, respectively—contributing the bulk of the newly
observed lookup volumes.

In addition to describing the enumerated infrastructure
sets, we also identify the backup mechanisms, if any, present
in the botnet. If a botnet’s malware has no backup plan, it
is a prime candidate for a smooth, DNS-only takedown, oth-
erwise we have identiﬁed the necessary conditions for per-
forming an eﬀective takedown. The most important ﬁnding,
however, is that of the 45 botnets we studied 42 of them had
no contingency plan for central C&C failure, suggesting the
bulk of these botnets can be successfully taken down without
requiring additional measures, such as reverse engineering a
DGA or combating a P2P-based C&C. This suggests that
while performing a takedown is diﬃcult, we are likely to
succeed in many cases.

6. CONCLUSION

We presented rza, a takedown analysis and recommenda-
tion system that performs postmortem analyses of past take-
downs, as well as making recommendations for performing
more eﬀective takedowns in the future. rza would be useful
in helping to both expedite the takedown process, as well as
ensuring future takedowns are more complete.

130Dr. Shiuhpyng Shieh for his guidance in improving our pa-
per. We also thank RZA for reinventing rap production and
bringing us the Wu-Tang Clan.

This material is based upon work supported in part by
the National Science Foundation under Grants No. CNS-
1017265, CNS-0831300, and CNS-1149051, by the Oﬃce of
Naval Research under Grant No. N000140911042, and by
the Department of Homeland Security under contract No.
N66001-12-C-0133. Any opinions, ﬁndings, and conclusions
or recommendations expressed in this material are those of
the authors and do not necessarily reﬂect the views of the
National Science Foundation, the Oﬃce of Naval Research,
or the Department of Homeland Security.

APPENDIX
A. POLICY DISCUSSION

Takedowns are currently performed in an ad-hoc manner
with little oversight, which makes it diﬃcult for the security
community at large to assist by contributing intelligence.
Furthermore, there is no standard policy for enacting a take-
down at the DNS-level forcing companies to coordinate with
multiple registrars, pay for expensive court proceedings, or
both to disable botnets. Existing measures for handling do-
main name issues exist, however, in the form of handling
trademark disputes.

Our postmortem studies illustrated several drawbacks to
the current ad-hoc manner in which takedowns are per-
formed, namely: a lack of coordination, little to no oversight,
and an environment that discourages collaboration. With-
out an eﬀective form of coordination, we will continue to
see instances in where two or more security companies, with
good intentions, will step on each others toes as we saw in
the Zeus takedown case. We also saw oversight issues in the
Zeus takedown where domains were clearly being sinkholed
before the date presented in the court order. Yet another,
but more subtle, oversight issue deals with the method of in-
stigating these takedowns: court orders. Each of the court
orders for the presented takedowns were ﬁled under seal,
meaning they are not open to the public and require either
the claimant to release the record under their discretion, or
other legal action to unseal the record. Even more worrisome
is language explicitly allowing further unveriﬁed action. In
the 3322.org takedown temporary restraining order it was
speciﬁed that “the authoritative name server ...
[is] to re-
spond to requests for the IP addresses of the sub-domains of
3322.org may respond to requests for the IP address of any
domain listed in Appendix A or later determined to be asso-
ciated with malware activity...” [13] (emphasis ours). While
an authoritative name server takeover technically grants this
ability, if the purpose of the court order is to prevent col-
lateral damage or unlawful takedown this clause eﬀectively
negates any future protection. It also suggests that the full
scope of the threat was not clear at the time of the takedown
by speciﬁcally permitting further cleanup actions.

Trademark and intellectual property interests were in-
volved very early on in during the formation of the Internet
Corporation for Assigned Names and Numbers (ICANN),
which is responsible for coordinating, among other critical
Internet infrastructure, the DNS. Through the World Intel-
lectual Property Organization (WIPO), trademark interests
were arguing for procedures to protect trademarks in the
DNS as early as December 1998 [16], and successfully forced

ICANN to require a dispute resolution procedure dubbed
the “Uniform Dispute Resolution Policy” or URDP.

URDP is an ICANN policy that speciﬁes independent ar-
bitrators to oversee the process of dispute resolution. These
“[i]ndependent arbitrators make a decision quickly and (rel-
ative to courts) inexpensively” [16] and are built in to the
accreditation contracts to registrars. The UDRP requires
three conditions to be met to ﬁle a complaint:

i. your domain name is identical or confusingly similar to
a trademark or service mark in which the complainant
has rights; and

ii. you have no rights or legitimate interests in respect of

the domain name; and

iii. your domain name has been registered and is being

used in bad faith.

[6]. In its ﬁrst year, UDRP successfully “handled over 2,500
cases involving nearly 4,000 names” [16] and has expanded
since.
In fact, ICANN is introducing The Uniform Rapid
Suspension System (URS) [7] as a more expedited form of
the URDP and is requiring new generic top-level domains
(gTLDs) to follow URS in their contracts.

We suggest a similar procedure ought to be available to
provide the security community a point of coordination and
a formal process to follow when performing takedowns. It
would reduce exorbitant fees paid to courts, would likely be
faster, and would mandate oversight from arbitrators. The
procedure could be applied to future TLDs as a test, much
like URS. Automated systems like rza could serve an invalu-
able place in this process to reduce the burden on human
operators and further expedite the takedown process.

B. RZA WITH ISC/SIE PDNS DATA

We replicated part of our evaluation using only ISC-SIE
data. Speciﬁcally, we generated the De, Dm, and Dr do-
main sets and computed the respective TIR values of Zeus
and ﬁve of the current botnets with the most domains we
tracked in our paper. Di sets were excluded due to time
limitations. Our results from the SIE dataset are shown in
Table 6 and are largely consistent and show that the process
employed by RZA can be done with other sources of pDNS
data. The important detail to glean is that the process rza
uses is independent of our private dataset and can be per-
formed using public sources of passive DNS data. Due to
regional variations, the TIR values are unlikely to be iden-
tical between the two datasets; however, the process and
generated sets are the important factors.

Takedown
Zeus
#1
#2
#3
#4
#5

De
4.843
1.108
0.969
0.787
0.680
1.944

Dm
0.000
1.012
0.969
0.787
0.680
1.451

Dr
1.014
1.082
0.459
0.718
0.613
1.122

Table 6: SIE-computed TIR values.

C. WINDOW JUSTIFICATION

We consider the activation of a domain name d ∈ De
to occur when d ﬁrst begins to resolve to a global IP ad-

131dress in the observation period and a deactivation to be the
day when d ∈ De no longer resolves to a global IP address.
Figure 7 shows the number of new domain activations and
deactivations for the domains in De for one of the take-
downs analyzed in Section 4, as well as the net change for
each day. We see that around seven days prior to the take-
down the number of activations/deactivations has achieved
an equilibrium motivating the choice of a 14 day observation
window around the time of the takedown. Other takedowns
exhibited similar behavior, but the details are not reported
due to space limitations.

Figure 7: Domain name activations and deactivations in
3322.org takedown’s De set.

D. REFERENCES
[1] M. Antonakakis, R. Perdisci, D. Dagon, and W. Lee.
Building a Dynamic Reputation System for DNS. In
Proceedings of the USENIX Security Symposium, 2010.

[2] L. Bilge, E. Kirda, C. Kruegel, and M. Balduzzi.
EXPOSURE: Finding Malicious Domains Using
Passive DNS Analysis. In Network and Distributed
System Security Symposium (NDSS), 2011.

[3] Conﬁcker Working Group. Conﬁcker Working Group:

Lessons Learned, 2011.
http://www.confickerworkinggroup.org/wiki/
uploads/Conficker_Working_Group_Lessons_
Learned_17_June_2010_final.pdf.

[4] Farsight Security, Inc. SIE/Farsight Security’s

DNSDB, 2013. https://www.dnsdb.info/.

[5] M. Harris. Spammers recovering from McColo

shutdown, 2009. http:

//www.techradar.com/news/internet/spammers-
recovering-from-mccolo-shutdown-591118.
[6] Internet Corporation for Assigned Names and

Numbers. Uniform Domain Name Dispute Resolution
Policy. Technical report, 1999.

[7] Internet Corporation for Assigned Names and
Numbers. Uniform Rapid Suspension System.
Technical report, 2012.

[8] B. Krebs. Major Source of Online Scams and Spams

Knocked Oﬄine, 2008.
http://voices.washingtonpost.com/securityfix/
2008/11/major_source_of_online_scams_a.html.

[9] B. Krebs. Spam Volumes Drop by Two-Thirds After

Firm Goes Oﬄine, 2008.
http://voices.washingtonpost.com/securityfix/
2008/11/spam_volumes_drop_by_23_after.html.

[10] B. Krebs. Mariposa Botnet Authors May Avoid Jail

Time, 2010.
http://krebsonsecurity.com/2010/03/mariposa-
botnet-authors-may-avoid-jail-time/.

[11] R. McMillan. After takedown, botnet-linked ISP

Troyak resurfaces, 2010. http://www.computerworld.
com/s/article/9169118/After_takedown_botnet_
linked_ISP_Troyak_resurfaces.

[12] Microsoft Corporation. Microsoft Corporation v.

Dominique Alexander Piatti; Jone Does 1-22. 2011.
Virginia Eastern District Court.

[13] Microsoft Corporation. Microsoft Corporation v. Peng

Yong et. al. 2012. Virginia Eastern District Court.

[14] Microsoft Corporation. Microsoft v. John Does 1-39.

2012. New York Eastern District Court.

[15] E. Mills. Microsoft halts another botnet: Kelihos,

2011.
http://news.cnet.com/8301-1009_3-20112289-
83/microsoft-halts-another-botnet-kelihos/.
[16] M. Mueller. Ruling the root. The MIT Press, 2004.
[17] Y. Nadji, M. Antonakakis, R. Perdisci, and W. Lee.
Understanding the prevalence and use of alternative
plans in malware with network games. In Proceedings
of the 27th Annual Computer Security Applications
Conference (ACSAC ’11), 2011.

[18] C. Rossow, D. Andriesse, and T. Werner. P2PWNED:

Modeling and Evaluating the Resilience of
Peer-to-Peer Botnets. In Proceedings of the 34th IEEE
Symposium on Security and Privacy (S&P 2013),
2013.

[19] U.S. Attorney’s Oﬃce - Southern District of New

York. Manhattan U.S. Attorney Charges Seven
Individuals for Engineering Sophisticated Internet
Fraud Scheme, 2011.
http://www.fbi.gov/newyork/press-
releases/2011/manhattan-u.s.-attorney-charges-
seven-individuals-for-engineering-
sophisticated-internet-fraud-scheme-that-
infected-millions-of-computers-worldwide-and-
manipulated-internet-advertising-business.

[20] VirusTotal. VirusTotal Intelligence. https://www.

virustotal.com/en/documentation/private-api/.

132