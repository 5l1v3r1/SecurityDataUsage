You’ve Got Vulnerability: Exploring Effective 

Vulnerability Notifications

Frank Li, University of California, Berkeley; Zakir Durumeric, University of Michigan, 

University of Illinois at Urbana–Champaign, and International Computer Science Institute; 

Jakub Czyz, University of Michigan; Mohammad Karami, George Mason University;  
Michael Bailey, University of Illinois at Urbana–Champaign; Damon McCoy, New York 

University; Stefan Savage, University of California, San Diego; Vern Paxson, University of 

California, Berkeley, and International Computer Science Institute

 https://www.usenix.org/conference/usenixsecurity16/technical-sessions/presentation/li

This paper is included in the Proceedings of the 25th USENIX Security SymposiumAugust 10–12, 2016 • Austin, TXISBN 978-1-931971-32-4Open access to the Proceedings of the 25th USENIX Security Symposium is sponsored by USENIX You’ve Got Vulnerability: Exploring Effective Vulnerability Notiﬁcations

Frank Li†
Michael Bailey‡ Damon McCoy(cid:30)

Zakir Durumeric∗‡(cid:31)

Jakub Czyz∗ Mohammad Karami(cid:30)
Stefan Savage◦ Vern Paxson†(cid:31)

†University of California Berkeley

∗University of Michigan

(cid:30)George Mason University

‡University of Illinois Urbana-Champaign

(cid:30)New York University

◦University of California San Diego

(cid:31)International Computer Science Institute

Abstract

1

Introduction

Security researchers can send vulnerability notiﬁcations
to take proactive measures in securing systems at scale.
However, the factors affecting a notiﬁcation’s efﬁcacy
have not been deeply explored. In this paper, we report
on an extensive study of notifying thousands of parties
of security issues present within their networks, with an
aim of illuminating which fundamental aspects of noti-
ﬁcations have the greatest impact on efﬁcacy. The vul-
nerabilities used to drive our study span a range of pro-
tocols and considerations: exposure of industrial control
systems; apparent ﬁrewall omissions for IPv6-based ser-
vices; and exploitation of local systems in DDoS ampli-
ﬁcation attacks. We monitored vulnerable systems for
several weeks to determine their rate of remediation. By
comparing with experimental controls, we analyze the
impact of a number of variables: choice of party to con-
tact (WHOIS abuse contacts versus national CERTs ver-
sus US-CERT), message verbosity, hosting an informa-
tion website linked to in the message, and translating
the message into the notiﬁed party’s local language. We
also assess the outcome of the emailing process itself
(bounces, automated replies, human replies, silence) and
characterize the sentiments and perspectives expressed in
both the human replies and an optional anonymous sur-
vey that accompanied our notiﬁcations.

We ﬁnd that various notiﬁcation regimens do result
in different outcomes. The best observed process was
directly notifying WHOIS contacts with detailed infor-
mation in the message itself. These notiﬁcations had
a statistically signiﬁcant impact on improving remedia-
tion, and human replies were largely positive. However,
the majority of notiﬁed contacts did not take action, and
even when they did, remediation was often only partial.
Repeat notiﬁcations did not further patching. These re-
sults are promising but ultimately modest, behooving the
security community to more deeply investigate ways to
improve the effectiveness of vulnerability notiﬁcations.

A secure Internet ecosystem requires continual discovery
and remediation of software vulnerabilities and critical
misconﬁgurations. Security researchers discover thou-
sands of such issues each year, across a myriad of plat-
forms [1]. This process consists of four key phases:
(1) discovering new security problems, (2) identifying
remedies, (3) determining affected parties, and (4) reach-
ing out to promote remediation among those affected.

The security community has decades of experience
with the ﬁrst two phases, and developments in high-
speed scanning [10, 11] and network monitoring [23, 25]
have signiﬁcantly advanced the ease of the third phase
for many security issues. However, the process of out-
reach remains today at best ad hoc. Unlike the public
health community, which has carefully studied and de-
veloped best practices for patient notiﬁcation (e.g., [4,
19]), the security community lacks signiﬁcant insight
into the kinds of notiﬁcation procedures that produce the
best outcomes.1 Instead, for most software, the modern
practice of vulnerability notiﬁcation remains broadcast-
ing messages via well-known mailing lists or websites
that administrators must periodically poll and triage.

Given the relative ease with which investigators can
today often determine the affected parties, the question
then arises of how they should best utilize that infor-
mation.
In the past, performing large-scale notiﬁca-
tions was often seen as both ineffective and impracti-
cal [2, 7, 12, 18]. However, several recent case studies
have provided clear evidence to the contrary. For exam-
ple, to promote patching of the 2014 OpenSSL Heart-
bleed vulnerability, Durumeric et al. emailed notices to
operators of hosts detected as vulnerable via scanning

1An exception concerns the development of online software update
systems that explicitly tie together notiﬁcation and remediation, allow-
ing precise and automated updating targeting the affected parties. Un-
fortunately, the vast majority of software lacks such systems; even for
those that do, operators may disable it in some contexts (critical servers,
embedded systems) to avoid unplanned downtime.

USENIX Association  

25th USENIX Security Symposium  1033

1

and found that notiﬁed operators patched at a rate al-
most 50% greater than a control group [9]. Similarly,
Li et al. analyzed the efforts of Google Safe Browsing
and Search Quality in reaching out to operators of com-
promised websites, and found that direct communication
with webmasters increased the likelihood of cleanup by
over 50%, and reduced infection durations by more than
60% [14].

With these clear indications that notiﬁcations can drive
positive security outcomes, it behooves the security com-
munity to determine how to best conduct the outreach
efforts. At the same time, we must balance the beneﬁts
to the ecosystem (and the associated ethical responsibil-
ities to notify) against the burden this imposes on the re-
porter, which calls for determining notiﬁcation regimens
that will not prove unduly taxing.

In this work, we strive to lay the foundations for sys-
tematically determining the most effective notiﬁcation
regimens, seeking to inform and drive the development
of “best practices” for the community. The solution
space has many more dimensions than we can hope to
methodically explore in a single study. Here, we aim
to develop soundly supported results for the most salient
basic issues, with an eye towards then facilitating follow-
on work that builds on these ﬁndings to further map out
additional considerations. The issues we address include
(1) who to notify (e.g., WHOIS contacts versus national
CERTs versus US-CERT), (2) the role of notiﬁcation
content (e.g., do reporters need to devise detailed mes-
sages or do short ones sufﬁce), (3) the importance of lo-
calization (e.g., what role does native language play in
notiﬁcation response rates), and (4) how these consider-
ations vary with the nature of the vulnerability (includ-
ing whether for some vulnerabilities notiﬁcation appears
hopeless).

We evaluate these questions empirically in the context
of notiﬁcation campaigns spanning three different vul-
nerability categories: publicly accessible industrial con-
trol systems, misconﬁgured IPv6 ﬁrewalls, and DDoS
ampliﬁers. Using large-scale Internet scanning to iden-
tify vulnerable hosts and then monitor their behavior over
time post-notiﬁcation, we infer the effects of different
notiﬁcation regimes as revealed by the proportion and
timeliness of contacts remediating their vulnerable hosts.
Our results indicate that notiﬁcations can have a sig-
niﬁcant positive effect on patching, with the best mes-
saging regimen being directly notifying WHOIS contacts
with detailed information within the message itself. An
additional 11% of contacts addressed the security issue
when notiﬁed in this fashion, compared to a control.
However, we failed to push the majority of contacts to
take action, and even when they did, remediation was
often only partial. Repeat notiﬁcations did not further
patching. We additionally characterize the responses we

received through our notiﬁcation campaigns, of which
96% of human-sent responses were positive or neutral.
Given these promising yet modest ﬁndings, it behooves
the security community to more deeply investigate vul-
nerability notiﬁcations and ways to improve their efﬁ-
cacy. Our methodology and results form the basis for es-
tablishing initial guidelines to help drive future efforts.

2 Related Work

Several recent studies have found that large-scale secu-
rity notiﬁcations increase patching and remediation—
particularly for infected websites.

Vasek et al. notiﬁed 161 infected websites [24] and
found that after 16 days, 55% of notiﬁed sites cleaned
up compared to 45% of unnotiﬁed sites. They further
note that more detailed notiﬁcations outperformed re-
ports with minimal information by 13%, resulting in
a 62% cleanup rate. Cetin et al. performed a simi-
lar study, measuring the role of sender reputation when
notifying the owners of hijacked websites [5]. They
emailed the WHOIS contacts of 240 infected sites from
email addresses belonging to an individual independent
researcher (low reputation), a university research group
(medium reputation), and an anti-malware organization
(high reputation). While nearly twice as many notiﬁed
sites cleaned up within 16 days compared to unnotiﬁed
ones, they found no signiﬁcant differences across the var-
ious senders.

On a larger scale, Li et al. investigated the life cy-
cles of 761 K website hijacking incidents identiﬁed by
Google Safe Browsing and Search Quality [14]. They
found that direct notiﬁcations to webmasters increased
the likelihood of cleanup by over 50% and reduced in-
fection lengths by 60% on average. Absent this commu-
nication, they observed that browser interstitials—while
intended to protect browser users—correlated with faster
remediation.

Most similar to the vulnerabilities we investigate, Du-
rumeric et al. used Internet-wide scanning to track the
Heartbleed vulnerability and notiﬁed system owners two
weeks after public disclosure [9]. Their notiﬁcations
drove a nearly 50% increase in patching compared to a
control: 39.5% versus 26.8%.

Concurrent to this work, Stock et al. investigated the
feasibility of large-scale notiﬁcations for web vulnera-
bilities [22]. Similar to our study, they experimentally
evaluated the effectiveness of different communication
channels, including WHOIS email contacts and CERTs.
Additionally, they analyzed the reachability and viewing
behavior of their messages. Their results largely accord
with ours, providing a complementary study of notiﬁca-
tions in a separate context (namely, vulnerable websites).
Notably, they likewise observed that while notiﬁcations

1034  25th USENIX Security Symposium 

USENIX Association

2

Dataset

Hosts WHOIS Abuse

Contacts

Hosts with

WHOIS Contacts

ICS
IPv6
Ampl.

45,770
180,611
83,846

2,563
3,536
5.960

79.7%
99.8%
92.4%

Table 1: Vulnerable Hosts—We notiﬁed network oper-
ators about three classes of vulnerabilities found in recent
studies: publicly accessible industrial control systems
(ICS), hosts with misaligned IPv4 and IPv6 ﬁrewall poli-
cies, and DDoS ampliﬁers (NTP, DNS, and Chargen).

could induce a statistically signiﬁcant increase in patch-
ing, the raw impact was small. In the best case, only an
additional 15% of the population patched compared with
a control group.

Each of these studies has established that notiﬁcations
can increase vulnerability patching and cleanup. We
build on these works and explore the next critical step:
understanding what factors inﬂuence patching and how
to construct effective vulnerability notiﬁcations.

3 Methodology

To measure notiﬁcation efﬁcacy and to understand how
to construct effective notiﬁcations, we notiﬁed network
operators while varying aspects of the notiﬁcation pro-
cess. In this section, we detail the datasets of vulnerable
hosts, the variables we tested, and how we tracked reme-
diation.

3.1 Vulnerable Hosts
We notiﬁed operators about the three classes of vulnera-
bilities listed below. We show the population of vulnera-
ble hosts in Table 1.
Publicly Accessible Industrial Control Systems
In-
dustrial control systems (ICS) are pervasive and con-
trol physical infrastructure ranging from manufactur-
ing plants to environmental monitoring systems in com-
mercial buildings. These systems communicate over a
myriad of domain and manufacturer speciﬁc protocols,
which were later layered on Ethernet and TCP/IP to fa-
cilitate long distance communication. Never designed to
be publicly accessible on the Internet, these protocols
lack important security features, such as basic authen-
tication and encryption, but nonetheless are frequently
found unsecured on the public Internet. To identify vul-
nerable ICS devices, Mirian et al. extended ZMap [10]
and Censys [8] to complete full IPv4 scans for several
ICS protocols: DNP3, Modbus, BACnet, Tridium Fox,
and Siemens S7 [17].
In total, they found upwards of

46 K ICS hosts that were publicly accessible and inher-
ently vulnerable.

We coordinated with Mirian et al. to complete daily
scans for each protocol against the public IPv4 address
space from January 22–24, 2016. We limited our study
to the 45.8 K hosts that were present all three days to
reduce the noise due to IP churn. To track the impact of
our notiﬁcations, we continued the daily scans of these
hosts using the same methodology.
Misconﬁgured IPv6 Firewall Policies Czyz et al.
found that 26% of IPv4/IPv6 dual-stack servers and
routers have more permissive IPv6 ﬁrewall policies com-
pared to IPv4, including for BGP, DNS, FTP, HTTP,
HTTPS, ICMP, MySQL, NTP, RDP, SMB, SNMPv2,
SSH, and Telnet access [6]. For example, twice as many
routers have SSH accessible over IPv6 compared to IPv4.
Given the presumed rarity of IPv6-only services, this
likely indicates a misconﬁguration and potential security
issue.

To identify dual-stack servers, Czyz et al. looked for
hostnames in the Rapid7 DNS ANY dataset [20] that had
both A and AAAA records. After ﬁltering out automat-
ically generated hostnames, they identiﬁed 520 K dual-
stack servers. To ﬁnd routers, the team performed reverse
DNS lookups and subsequent A and AAAA lookups for
hosts in the CAIDA Ark dataset [3], identifying 25 K
routers. Czyz et al. then scanned these hosts using Scam-
per [15] to identify ﬁrewall inconsistencies.

We scanned the hosts that Czyz et al. identiﬁed over a
25 day period from December 31, 2015 to January 24,
2016. We limited our study to the 8.4 K routers and
172.2 K servers that were consistently available during
that period. Similar to the ICS measurements, we contin-
ued to perform daily scans using the same methodology
to track the impact of our notiﬁcations.
DDoS Ampliﬁers Several UDP protocols allow attack-
ers to launch distributed denial of service attacks when
improperly conﬁgured [21]. In this scenario, an attacker
spoofs a small request to a misconﬁgured server, which
then sends a large response to the victim. For example,
an attacker can spoof a DNS lookup to a recursive DNS
resolver, which will then send the full recursive lookup
to the victim’s machine. We identiﬁed 152 K misconﬁg-
ured hosts that were actively being used to launch DDoS
attacks over NTP, DNS, and Chargen by monitoring the
sources of DDoS attacks against a university network be-
tween December 11–20, 2015.

We restricted our notiﬁcations to the vulnerable hosts
that were consistently available during our daily scans
from December 21, 2015 to January 26, 2016. In total,
we discovered 5.9 K Chargen ampliﬁers, 6.4 K NTP am-
pliﬁers, and 71.5 K DNS ampliﬁers on 83.8 K distinct IP
addresses. We continued to track these hosts by perform-

USENIX Association  

25th USENIX Security Symposium  1035

3

ing daily protocol scans (e.g., Chargen requests, NTP
monlist commands, and DNS recursive lookups).

In each case, we coordinated with the studies’ authors
to ensure that they did not simultaneously notify opera-
tors. However, we do note that groups have previously
sent notiﬁcations to DDoS ampliﬁers [13].

3.2 Experiment Variables
To understand how to best construct and route notiﬁca-
tion messages, we performed notiﬁcations using several
methodologies and measured the differences in remedi-
ation. We speciﬁcally aimed to answer the following
questions:
Who should researchers contact? Researchers have
several options when deciding where they should report
vulnerabilities, including directly contacting network op-
erators, notifying national CERTs, and asking their own
country’s CERT to disseminate the data to other CERT
groups. We tested three options: (1) notifying the abuse
contact from the corresponding WHOIS record, (2) ge-
olocating the host and contacting the associated national
CERT, and (3) asking our regional CERT (US-CERT) to
propagate the information.
How verbose do messages need to be?
It is not
clear how much information researchers need to include
when notifying operators. For example, are notiﬁcations
more effective if researchers include detailed remedia-
tion steps or will such instructions go unheeded? We
sent three types of messages: (1) a terse message that
brieﬂy explained that we discovered the vulnerability
with Internet-wide scanning, and the impact of the vul-
nerability (e.g., for ICS notiﬁcations, we wrote “These
devices frequently have no built-in security and their
public exposure may place physical equipment at risk
for attack.”), (2) a terse message with a link to a web-
site with detailed information, and (3) a verbose email
that included text on how we detected the problem, vul-
nerability details, and potential remediation steps. We
provide the full text of our different messages in Ap-
pendix B–G.
Do messages need to be translated? We tested send-
ing messages in English as well as messages translated
by native technical speakers to several local languages.

3.3 Group Assignment
To test the impact of our experiment variables, we ran-
domly formed experiment groups that received different
notiﬁcation regimens. Here we describe our process for
constructing these groups.

For each IP address, we extracted the abuse con-
tact from the most speciﬁc network allocation’s WHOIS

Group
Control
National CERTs
US-CERT
WHOIS: English Terse
WHOIS: English Terse w/ Link
WHOIS: English Verbose
WHOIS: Language – Terse

ICS
657
174
493
413
413
413

IPv6 Ampl.
1,484
3,527
379
650
1,128
578
633
777
777
633
632
777

Germany: German
Germany: English
Netherlands: Dutch
Netherlands: English
Poland: Polish
Poland: English
Russia: Russian
Russia: English

WHOIS: Language – Verbose

Germany: German
Germany: English
Netherlands: Dutch
Netherlands: English
Poland: Polish
Poland: English
Russia: Russian
Russia: English

71
72
32
32

70
72
32
29

37
37
123
123

36
36
123
123

Table 2: Notiﬁcation Groups—We aggregated vulner-
able hosts by WHOIS abuse contacts and randomly as-
signed these contacts to notiﬁcation groups. Here, we
show the number of contacts notiﬁed in each group. Note
that for the language experiments, we tested terse and
verbose messages for several countries, both translated
and in English.

record. For the 16.7% of dual-stack hosts with different
contacts extracted from IPv4 and IPv6 WHOIS records,
we used the contact with the deepest level of alloca-
tion, and preferred IPv6 contacts when all else was equal
(4.3% of dual-stack hosts).

To test each variable, we split the abuse contacts from
each vulnerability into treatment groups (Table 2). For
the ICS and ampliﬁer experiments, we randomly allo-
cated one quarter of abuse contacts to the control group
(Group 1), one quarter to the CERT groups (half US-
CERT, half national CERTs), and the remaining half to
the WHOIS groups. For IPv6, to act in a responsible
manner we needed to complete some form of notiﬁcation
for all hosts to ensure adequate disclosure prior to the re-
lease of the corresponding study [6] in February 2016.
This prevented us from using a true control group. In-
stead, we approximate the behavior of the control group
using the 25 days of daily scans prior to our notiﬁcations.
We allocated a third of the IPv6 contacts to the CERT
groups, and the remainder to the WHOIS groups.

For the vulnerable hosts assigned to the CERT groups,

1036  25th USENIX Security Symposium 

USENIX Association

4

we geolocated each IP using MaxMind [16] and identi-
ﬁed the associated CERT. We note that not all countries
have an established CERT organization. This was the
case for 2,151 (17%) IPv6 hosts, 175 (8%) ICS devices,
and 2,156 (19%) DDoS ampliﬁers. These hosts were
located in 16 countries for IPv6, 26 countries for ICS,
and 63 countries for DDoS. Many of these countries are
in Africa or Central America (e.g., Botswana, Ethiopia,
and Belize), or are smaller island states (e.g., American
Samoa, Antigua and Barbuda, and the Bahamas). We
did not include hosts without a CERT organization in the
CERT experiment (although we later passed them along
to US-CERT).

In total, 64 CERTs were responsible for IPv6 hosts,
57 for ICS, and 86 for ampliﬁers. To compare directly
contacting national CERTs versus having US-CERT dis-
tribute information to them, we randomly divided the
affected national CERTs into two halves. For national
CERTs in the ﬁrst half, we contacted them directly with
vulnerable hosts in their region (Group 2). We sent the
remaining hosts for CERTs in the second half to US-
CERT (Group 3).

We obtained native translations of our WHOIS mes-
sages for several countries. We allocated contacts in the
WHOIS groups that were in those countries (based on
the WHOIS records) for our language experiment, fur-
ther detailed in Section 4.3. The remaining contacts were
randomly split into three groups based on message ver-
bosity: terse (Group 4), terse with a link (Group 5), and
verbose (Group 6).

3.4 Notiﬁcation Process
We sent notiﬁcation emails with the FROM and REPLY-
TO header set to an institutional mailing list: security-
notiﬁcations@berkeley.edu.
In each message, we at-
tached a CSV ﬁle that contained the list of vulnerable
hosts along with the latest scan timestamp and the list
of vulnerable protocols. We also included a link to an
anonymous survey, which asked for the organization’s
perspective on the reported security issue and whether
they found our detection and notiﬁcation acceptable. The
messages were sent from a server in UC Berkeley’s net-
work, which was listed as a valid mail server by UC
Berkeley’s SPF policy. We note that we also included a
randomly generated identiﬁer in each email subject that
enabled us to match a reply to the original notiﬁcation.

3.5 Tracking Remediation
We tracked the impact of different notiﬁcation method-
ologies by scanning all hosts for several weeks follow-
ing our notiﬁcations. As our scanning methods tested
the reachability of several services, we may have falsely

identiﬁed a host as patched due to random packet loss or
temporary network disruptions. To account for this, we
only designated a host as patched if it did not appear vul-
nerable in any subsequent scans. We leveraged the last
day’s scan data for this correction, but did not otherwise
use it in our analysis as it lacked subsequent data for val-
idation.

One limitation in our tracking is the inability to distin-
guish true patching from network churn, where the host
went ofﬂine or changed its IP address. While we can
still conduct a comparative analysis against our control
group, we acknowledge that our deﬁnition of patching
is a mixture of true patching and churn. We investigated
whether we could better approximate true remediation by
distinguishing between RST packets and dropped pack-
ets. We compared the proportion of RSTs and drops be-
tween our control group and our notiﬁed groups two days
after notiﬁcation and two weeks after notiﬁcation. At
both times, we observed nearly identical proportions be-
tween the control and notiﬁed groups—in all cases less
than 20% of hosts sent RST packets. This indicates that
RST packets are not a reliable signal for remediation, as
most hosts did not send RST packets even when truly
ﬁxed.

Unless stated otherwise, we consider a host as having
taken remediation steps for a particular vulnerability if
any of its affected protocols were detected as ﬁxed. Like-
wise, we say a notiﬁcation contact has taken remediation
steps if any of its hosts have patched. We deﬁne the re-
mediation rate as the percentage of notiﬁcation contacts
that have taken remediation steps. This deﬁnition is over
contacts rather than hosts as we are measuring the im-
pact of notifying these contacts, and contacts differ in
the number of affected hosts.

3.6 Ethical Considerations
We followed the guidelines for ethical scanning behav-
ior outlined by Durumeric et al. [10]: we signaled the
benign intent of our scans through WHOIS entries and
DNS records, and provided project details on a website
on each scanning host. We respected scanning opt-out
requests and extensively tested scanning methods prior
to their deployment.

The ethics of performing vulnerability notiﬁcations
have not been widely discussed in the security commu-
nity. We argue that the potential good from informing
vulnerable hosts outweighs the risks. To minimize po-
tential harm, we only contacted abuse emails using ad-
dresses available in public databases. Additionally, we
messaged all unnotiﬁed contacts at the conclusion of the
study. We offered a channel for feedback through an
anonymous survey with questions about the notiﬁed or-
ganization (described in Appendix A). We note that be-

USENIX Association  

25th USENIX Security Symposium  1037

5

(a) Misconﬁgured IPv6

(b) DDoS Ampliﬁers

(c) ICS Services

Figure 1: Remediation Rates—We show the remediation rate for each variable we tested. We ﬁnd that verbose
English notiﬁcations sent to network operators were most effective for IPv6 and ICS. Note the varying Y axes.

cause we only collected data about organizational deci-
sions and not individuals, our study did not constitute
human subjects research (conﬁrmed by consulting the
UC Berkeley IRB committee). Nevertheless, we fol-
lowed best practices, e.g., our survey was anonymous
and optional.

4 Results

For both ICS and IPv6, our notiﬁcations had a signiﬁ-
cant impact on patch rates. In our most successful trial—
verbose English messages sent directly to operators—the
patch rate for IPv6 contacts was 140% higher than in the
control group after two weeks. For ICS, the patch rate
was 200% higher. However, as can be seen in Figure 1b,
none of our notiﬁcations had signiﬁcant impact on DDoS
ampliﬁers. This is likely due to the extensive attention
DDoS ampliﬁers have already received in the network
operator community, including several prior notiﬁcation
efforts [21]. In addition, these ampliﬁers were already
previously abused in DDoS attacks without administra-
tive responses, potentially indicating a population with
poor security stances.
It is also important to note that
our best notiﬁcation regimen resulted in at most 18% of
the population remediating. Thus, while notiﬁcations can
signiﬁcantly improve patching, the raw impact is limited.
In the remainder of this section, we discuss the impact of
each experiment variable and how this informs how we
should construct future notiﬁcations.

To characterize the performance of our trial groups,
we measure the area under the survival curve for each
group, which captures the cumulative effect of each treat-
ment. To determine if observed differences have sta-
tistical signiﬁcance, we perform permutation tests with
10,000 rounds. In each round of a permutation test, we
randomly reassign group labels and recompute the area
differences under the new assignments. The intuition is

that if the null hypothesis is true and there is no signif-
icant difference between two groups, then this random
reassignment will only reﬂect stochastic ﬂuctuation in
the area difference. We assess the empirical probability
distribution of this measure after completing the permu-
tation rounds, allowing us to determine the probability
(and signiﬁcance) of our observed values.

All reported p-values are computed via this permuta-
tion test. We use a signiﬁcance threshold of α = 0.05,
corrected during multiple testing using the simple (al-
though conservative) Bonferroni correction, where each
test in a family of m tests is compared to a signiﬁcance
threshold of α
m.

Ideally, we would have selected this procedure as part
of our original experimental design. Unfortunately, we
only identiﬁed its aptness post facto; thus, its selection
could introduce a selection bias, a possible effect that we
lack any practical means to assess.

4.1 Notiﬁcation Contact
For both IPv6 and ICS notiﬁcations, directly notifying
WHOIS abuse contacts was most effective—particularly
early on. Two days after IPv6 disclosure, direct verbose
notiﬁcations resulted in 9.8% of the population remediat-
ing, compared to 3.1% when contacting national CERTs
and 1.4% by contacting US-CERT. For ICS, direct notiﬁ-
cations promoted 6.8% of the population to patch, more
than national CERTs (1.7%) and US-CERT (1.0%). In
both cases, direct notiﬁcations were notably better than
no notiﬁcations. As can be seen in Figures 1a and 1c,
this gain was persistent. After two weeks, the patch rate
of directly notiﬁed IPv6 contacts was 2.4 times as high
as the control, and three times as high for ICS contacts.
To determine if these observations are statistically sig-
niﬁcant, we perform permutation tests using the Bonfer-
roni correction. With six treatment groups, the family of

1038  25th USENIX Security Symposium 

USENIX Association

6

(a) Misconﬁgured IPv6

(b) ICS Services

Figure 2: Differences between National CERTs—We show the remediation rate for each directly notiﬁed national
CERT after two weeks. The size of a data point is proportional to the number of abuse contacts in the country. We
directly contacted 32 CERTs for IPv6, and 29 CERTs for ICS. We observe notable differences between CERT groups.
However, none are statistically signiﬁcantly different than the control group. This may be because there are too few
hosts for some countries, and that the Bonferroni correction is conservative.

CERT groups or notify any US operators. One national
CERT included in the report to US-CERT informed us
they had not received any notices from US-CERT. As
seen in Figure 2, there were stark differences between
CERT groups—some duly notiﬁed operators, while oth-
ers appear to have ignored our disclosures.

Overall,

this

suggests

the most effective
approach—in terms of both the number of hosts patched
and the rate of patching—is to directly notify network
operators rather than contact CERT groups.

that

Figure 3: Remediation Rates for Website Visitors—
The contacts who viewed our informational website re-
mediated at a higher rate than those who received a ver-
bose message. However, despite this, less than 40% of
the contacts who visited the site ﬁxed the vulnerability.

pairwise comparisons includes 15 tests, giving an indi-
vidual test threshold of α = 0.0033. Under the permu-
tation test, the gains that direct verbose notiﬁcations had
on the CERTs and the control group are statistically sig-
niﬁcant for both IPv6 and ICS, with all p-values less than
0.0001 except when comparing ICS verbose notiﬁcations
with national CERTs (p = 0.0027).

Notably, US-CERT—our local CERT who we asked to
disseminate data to other CERT groups—had the lowest
patch rate, which is statistically indistinguishable from
the control group that had no notiﬁcations. We suspect
that US-CERT did not disseminate the data to any other

4.2 Message Verbosity
To determine what information needs to be included in
notiﬁcation messages, we sent three types of emails: (1)
verbose, (2) terse, and (3) terse with a link to a website
with additional details. We observed the best remediation
by contacts who received verbose messages. For IPv6,
verbose messages were 56.5% more effective than either
terse messages after two days and 55.5% more effective
for ICS. However, as can be seen in Figure 1, the dif-
ferences between verbose and terse messages decreased
over time.

Using permutation testing and the Bonferroni correc-
tion, we ﬁnd that the differences between the message
types are not statistically signiﬁcant for IPv6 and ICS.
However, given the earlier beneﬁts that verbose mes-
sages had for both data sets, we argue notiﬁers may still
want to prefer verbose messages over terse ones. We dis-
cuss this effect further in Section 4.4 and note that further
investigation of this variable is warranted.

We tracked the remediation rate of contacts who vis-
ited the linked website, as shown in Figure 3. We note
that all of the information included in the verbose mes-
sage was available on the linked website and that 16.8%
of users who received an email with a link visited the site.
This indicates that a sizable population of users engaged

USENIX Association  

25th USENIX Security Symposium  1039

7

(a) Misconﬁgured IPv6 - German Contacts

(b) Misconﬁgured IPv6 - Dutch Contacts

Figure 4: Remediation Rates for Translated Messages—We ﬁnd that sending verbose English messages was more
effective than translating notiﬁcations into the language of the recipient. Note, though, that this observation is limited
to the small set of languages we were able to evaluate.

(a) Misconﬁgured IPv6

(b) DDoS Ampliﬁers

(c) ICS Services

Figure 5: Daily Changes in Remediation Proportions—We show the differences in the proportions of remediated
contacts from one day to the next. We ﬁnd that most contacts that remediated ﬁxed the problem immediately after
disclosure. After a few days, contacts returned to remediating at the same rate as the control group.

with our site, but many would not patch even after visit-
ing the link. Speciﬁcally, no more than 40% of website
visitors patched. Thus, even when our messages success-
fully reached contacts, the majority did not take action.

speaking countries for the ICS dataset was too low to pro-
vide signiﬁcant meaning. We randomly split the WHOIS
contacts in each country into four groups that vary lan-
guage and verbosity.

4.3 Message Language
To investigate whether notiﬁcations need to be translated
into recipients’ local languages or can be sent in English,
we distributed translated messages for two countries for
DDoS and IPv6 notiﬁcations. For DDoS ampliﬁers, we
obtained native Russian and Polish translations—for the
countries with the third and fourth largest number of vul-
nerable organizations. For IPv6, we translated messages
into German and Dutch, for the second and third largest
countries. The population of contacts in non-English

We observe no signiﬁcant effect from language for
DDoS notiﬁcations. This is unsurprising given our no-
tiﬁcations’ overall lack of effect on DDoS ampliﬁers.
For IPv6, as seen in Figure 4, we observe that trans-
lated messages resulted in worse patching than when left
in English. Several survey respondents were surprised
at receiving translated messages from United States in-
stitutions and initially suspected our notiﬁcations were
phishing messages or spam, which may explain the lower
patch rate. The additional overhead of translating mes-
sages paired with less successful disclosure suggests that
it may be most effective to send notiﬁcations in English.

1040  25th USENIX Security Symposium 

USENIX Association

8

(a) Misconﬁgured IPv6

(b) ICS Services

Figure 6: Contact Remediation per Country—We show the percentage of contacts who remediated per country
after two weeks. The data sizes are proportional to the number of contacts. Green data points surrounded by an orange
star signify countries with a remediation rate statistically better than the control group’s, under the permutation test
using the Bonferroni correction.

(a) Misconﬁgured IPv6 - WHOIS Verbose

(b) DDoS Ampliﬁers - WHOIS Verbose

(c) ICS Services - WHOIS Verbose

(d) Misconﬁgured IPv6 - Control

(e) DDoS Ampliﬁers - Control

(f) ICS Services - Control

Figure 7: Protocol Remediation Rates—We track the remediation rate for each speciﬁc protocol within the WHOIS
verbose group and the control group. We note that operators patched some protocols signiﬁcantly faster than others
(e.g., Telnet versus FTP).

However, we note that our results are limited to the small
set of languages we were able to obtain reliable trans-
lations for, and deeper investigation into the effects of
message language is warranted.

4.4 Staying Power of Notiﬁcation’s Effect
As can be seen in Figure 5, our notiﬁcations caused
a near immediate increase in patching. However, this

increased patching velocity did not persist.
In other
words, we ﬁnd that the effects of notiﬁcations were short-
lived—on the order of several days. The day after noti-
ﬁcations were sent, we observe large increases in the re-
mediation proportions for IPv6 and ICS notiﬁed groups,
as operators responded to our reports. However, we also
see that the daily changes in remediation proportions
drastically dropped by the second day.

For IPv6, the daily changes in remediation proportions

USENIX Association  

25th USENIX Security Symposium  1041

9

for all notiﬁed groups leveled off and matched that of the
control group from the ﬁfth day onward. We also witness
a drop off in the daily remediation proportion changes
for ICS, although a non-trivial amount of change contin-
ued throughout the ﬁrst 10 days. Notably, the national
CERTs ﬁrst began accelerating remediation after two
days, a delay compared to WHOIS experiment groups.
For ampliﬁers, there was little change in the remediation
rate over time, which is unsurprising given the limited
effect of our notiﬁcations.

4.5 Geographic Variation
As with the national CERTs, we note variation in the
patching rates between countries. This suggests that the
geographic distribution of vulnerable contacts may inﬂu-
ence a notiﬁcation’s outcome. As visible in Figure 6,
the United States, Great Britain, India, and Finland were
the only countries that patched signiﬁcantly better than
the control group. However, we note that some countries
had too few hosts to be statistically signiﬁcant, given the
conservative nature of the Bonferroni correction.

4.6 Variation over Protocols
In Figure 7, we observe variation in the patch rates for
different protocols within each vulnerability (e.g., Mod-
bus versus S7 for ICS). As seen in Figure 7a, network
administrators reacted most to open IPv6 NTP, Telnet,
and SSH services, and least to FTP, with over a 200%
difference in the remediation proportions. This variation
is not reﬂected in the control group (Figure 7d), where
all protocols exhibited similar behavior. This may reﬂect
an increased likelihood that certain services were unin-
tentionally left accessible, or that operators assessed dif-
ferent levels of risk for allowing different protocols to be
reachable.

Operators also responded differently for the multi-
ple ICS protocols (Figure 7c), but the variation is also
reﬂected for contacts in the control group (Figure 7f).
BACnet, Fox, and Modbus devices were ﬁxed at simi-
lar rates. While the remediation of S7 systems initially
lagged behind, there was a signiﬁcant upswing in action
after three days, with nearly 18% of contacts with vul-
nerable S7 systems patching after 8 days.

Surprisingly, no DNP3 systems had been patched
within 10 days of notiﬁcation (out of 5 contacts). We
note that these ﬁve contact groups belonged to Inter-
net service providers—not individual organizations. We
similarly note that DNP3 differs from the other pro-
tocols and is speciﬁcally intended for power grid au-
tomation. These devices may be remote power stations
which require more complex changes than local devices

(a) Remediation rates

(b) Changes in the remediation proportions from one day to the
next.

Figure 8: Remediation Rates by Host Type—We ﬁnd
no signiﬁcant difference in the remediation rate between
servers and routers.

(e.g., installation of new hardware versus a conﬁguration
change).

While we observe variation between ampliﬁer proto-
cols, these ﬂuctuations are similar in both the notiﬁed
and control group. Given the limited effect of our DDoS
ampliﬁer notiﬁcations, these differences likely reﬂect the
varying natural churn rates of these hosts.

4.7 Host Type
When notifying IPv6 operators, we were able to distin-
guish between servers and routers. To assess the differ-
ence between device types, for each type, we only con-
sider contacts with a vulnerable host of that type. We
count a contact as having performed some remediation if
that contact ﬁxed at least one host of that type.

1042  25th USENIX Security Symposium 

USENIX Association

10

(a) Misconﬁgured IPv6

(b) DDoS Ampliﬁers

(c) ICS Services

Figure 9: Remediation Completeness—We ﬁnd that most operators only ﬁxed a subset of their vulnerable hosts. For
example, only 40% of the operators that ﬁxed a single host ﬁxed all hosts in their purview.

(a) Misconﬁgured IPv6

(b) DDoS Ampliﬁers

(c) ICS Services

Figure 10: Re-Notiﬁcations—We ﬁnd that a second round of notiﬁcations did not result in increased remediation.

We observe that servers and routers remediated at sim-
ilar rates for the ﬁrst four days, after which router re-
mediation dropped off and fell signiﬁcantly below that
of servers (Figure 8a). However, servers also naturally
patched at a higher rate than routers in the control group.
This difference accounts for the gap between notiﬁed
servers and routers after four days. This is also visible
in Figure 8b, where the daily changes in the remediation
proportions converged after four days. After 14 days,
notiﬁed contacts with servers ﬁxed at a rate 44% higher
than notiﬁed contacts with routers. The divergence in
the control group was similar at 48%. This indicates that
overall, network administrators respond to vulnerabili-
ties in servers and routers about equally.

4.8 Degree of Remediation
Up to this point, we designated a contact as having
patched if any host under its purview was patched. We
now consider how well operators patched their hosts.

As can be seen in Figure 9, the majority of contacts did
not patch all of their servers. Less than 60% secured all
hosts and we note that 30% of groups with 100% reme-

diation were only responsible for ﬁxing one or two hosts.
This highlights one of the challenges in the vulnerability
notiﬁcation process: even if our messages reach a desig-
nated contact, that contact may not have the capabilities
or permissions to remediate all hosts. The multiple hops
in a communication chain can be broken at any link.

4.9 Repeated Notiﬁcations
Given that our notiﬁcations resulted in improved patch-
ing, a natural question is whether repeat notiﬁcations
promote further remediation. We conducted a second
round of notiﬁcations for the contacts that were directly
sent verbose messages in the ﬁrst round since these
proved to be the most effective. We randomly split con-
tacts who had not remediated one month after our notiﬁ-
cations into two groups, one as a control group and one
to receive a second round of notiﬁcations.

As can be seen in Figure 10, the patch rates between
the re-notiﬁed group and the control group were similar
for all three vulnerabilities, indicating that repeat notiﬁ-
cations are not effective. This suggests that contacts who
did not remediate during the ﬁrst round of notiﬁcations

USENIX Association  

25th USENIX Security Symposium  1043

11

either were not the appropriate points of contact, or chose
(either intentionally or due to lack of capabilities) to not
remediate.
It is unlikely they simply missed or forgot
about our original notiﬁcation.

5 Notiﬁcation Reactions

We included a link to an anonymous survey in all of our
notiﬁcation emails as well as monitored the email ad-
dress from which we sent messages. In the two weeks
following our disclosures, we received 57 survey sub-
missions and 93 human email replies. In this section, we
analyze these responses.

5.1 Email Responses
Of the 685 email responses we received, 530 (77%) were
automated responses (e.g., acknowledgment of receipt),
62 (9%) were bounces, and 93 (14%) were human re-
sponses (Table 3). For all three vulnerabilities, over 70%
of the human responses expressed positive sentiments.
We received only four negative emails, all of which con-
cerned IPv6. Two stated that we were incorrectly us-
ing the abuse contact; the other two noted that the open
IPv6 services were intentional and asked to be excluded
from notiﬁcations in the future. None of the emails were
threatening. We detail the breakdown for each vulnera-
bility type in Table 4.

Beyond expressing sentiments, 23 contacts requested
information—primarily about how we de-
additional
tected the vulnerabilities; two requested remediation in-
structions. Of those 23 contacts, 15 (65%) received
terse notiﬁcations without a link to additional informa-
tion, while 3 contacts (13%) received verbose messages.
We note that verbose messages both reduced follow-up
communication and resulted in the highest patching rate.
Unexpectedly, all ﬁve contacts who requested infor-
mation about DDoS ampliﬁers asked for evidence of
DDoS attacks via network logs. This may be a result
of the extensive attention ampliﬁers have received in the
past, such that operators only respond to active abuse is-
sues regarding ampliﬁers.

Twelve IPv6 contacts rebutted our claim of vulnerabil-
ity. Six stated that the inconsistency was intentional; one
was a honeypot; and ﬁve explained that the IP addresses
we sent them no longer pointed to the same dual-stack
host, likely due to network churn. Two ampliﬁer contacts
claimed we falsely notiﬁed, stating that their hosts were
honeypots. However, we do note that these IPs were seen
as part of an attack and were therefore likely misconﬁg-
ured honeypots.

Most human responses were in English, with eight
(9%) in other languages: 3 Russian, 1 German, 1 Czech,
1 Swedish, 1 French, and 1 Slovak. These non-English

Response Types
Automated
Human
Bounces
Total
Contacts w/ No Reply

ICS
143
22
10
175

IPv6 Ampl.
173
214
23
48
18
34
296
214
85.9% 87.2% 92.8%

Table 3: Email Responses—We received 685 email re-
sponses to our notiﬁcations, of which 14% were human
replies.

Human Responses
Positive Sentiments
Negative Sentiments
Neutral Sentiments
Request for Information
Taking Actions
False Positive Notiﬁcation
Total

ICS
17
0
5
2
12
0
22

IPv6 Ampl.
19
0
4
5
15
2
23

35
4
9
16
17
12
48

Table 4: Human Email Responses—We characterize
the human email responses we received in reply to our
notiﬁcations.

replies were in response to English notiﬁcations and ex-
pressed gratitude; none requested additional information.
We note that the level of feedback we received re-
garding DDoS notiﬁcations was commensurate with our
other efforts, yet the patch response was minimal. This
could indicate that operators struggle with actually re-
solving the issue after encountering and responding to
our messages, or have become desensitized enough to
DDoS issues to not take real action.

5.2 Anonymous Survey Responses
All of our notiﬁcation messages contained a link to
an anonymous seven question survey (Appendix A), to
which we received 57 submissions. We summarize the
results in Table 5.

Interestingly, 46% of respondents indicated that they
were aware of the vulnerability prior to notiﬁcation, and
16% indicated that they had previously attempted to re-
solve the problem. This contrasts with the survey re-
sults in the Heartbleed study [9], where all 17 respon-
dents indicated they were aware of the Heartbleed vul-
nerability and had previously attempted to resolve the
problem. The widespread media attention regarding the
Heartbleed bug may account for this discrepancy, high-
lighting the differences in the nature of various vulnera-
bilities.

For DDoS ampliﬁers and ICS vulnerabilities, the ma-

1044  25th USENIX Security Symposium 

USENIX Association

12

Survey Responses
Aware of Issue
Taken Prior Actions
Now Taking Action
Acceptable to Detect
Acceptable to Notify
Would want Future Notiﬁcations
Correct Contact
Total

ICS
2/4
1/4
4/4
3/4
2/4
2/4
1/3
4

IPv6 Ampl.
4/8
20/45
3/8
5/43
6/8
24/43
35/45
7/8
7/8
34/45
7/8
30/43
6/8
37/43
45
8

Table 5: Survey Responses—We included a link to a
short, anonymous survey in all of our notiﬁcations. We
ﬁnd that most respondents (54%) weren’t aware of the
vulnerabilities, but found our scanning and notiﬁcations
acceptable (over 75%). Further, 62% of respondents
stated they were taking corrective actions and 71% of re-
spondents requested future notiﬁcations.

jority of respondents expressed that they were now tak-
ing corrective action (75% for DDoS ampliﬁers, 100%
for ICS). For IPv6, only 56% of respondents indicated
they would ﬁx the problem. Given the nature of the IPv6
notiﬁcation, it is likely that some of the misaligned poli-
cies were intentional.

Over 80% of respondents indicated that we reached
out to the correct contact, who found scanning and no-
tiﬁcations acceptable and requested future vulnerability
notiﬁcations. However, this is a population with whom
we successfully established communication. The accu-
racy of the other contacts from whom we did not hear
back could be lower.

Our survey also allowed respondents to enter free form
comments. We received 17 IPv6 comments, 4 DDoS am-
pliﬁer comments, and 1 ICS comment. Of the IPv6 re-
spondents, 5 thanked us, 7 discussed how the misalign-
ment could be intentional or that our detection was in-
correct, 3 equated our messages to spam, and 2 noted
that they initially thought our translated messages were
phishing messages because they expected English mes-
sages from an institution in the United States. For ampli-
ﬁers, we received four comments: two thanking us and
two informing us not to notify unless there is a real at-
tack. Finally, there was only one ICS commenter, who
suggested contacting vendors instead of network opera-
tors, but thanked us for our notiﬁcation.

The feedback we received from these survey answers
and the email responses indicates an overall positive re-
ception of our notiﬁcations. While it may be that those
who provided feedback are more opinionated, these re-
sults suggest that further discourse on notiﬁcations is
needed within our community.

6 Discussion

Here we summarize the main results developed during
our study, and the primary avenues for further work that
these suggest.
Effective Vulnerability Notiﬁcations Our results indi-
cate that vulnerability notiﬁcations can improve remedia-
tion behavior and the feedback we received from network
operators was largely positive. We conclude that notiﬁca-
tions are most effective when detailed messages are sent
directly to WHOIS abuse contacts. These notiﬁcations
were most effective in our experiments and resulted in
an additional 11% of contacts addressing a vulnerability
in response to our message.

On the one hand, this result provides clear guidance
on how to best notify network operators. On the other
hand, the majority of organizations did not patch their
hosts despite our notiﬁcations. Even among those who
patched at least one host, most did not ﬁx all of their
vulnerable hosts. In the case of networks hosting DDoS
ampliﬁers, no form of notiﬁcation generated beneﬁts sta-
tistically signiﬁcant over the control.

The failures to remediate could signal a number of

problems, including:

1. failure to contact the proper parties who could best

instigate remediation;

2. a need for better education about the signiﬁcance of

the vulnerability;

3. a need for better education about the remediation

process;

4. administrative or logistical hurdles that proved too

difﬁcult for those parties to overcome;

5. or a cost-beneﬁt analysis by those parties that con-

cluded remediation was not worth the effort.

Illuminating the role that each of these considerations
plays, and the best steps to then address them, remains
for future work.

In addition, we found the effects of our notiﬁcation
campaigns to be short-lived:
if recipients did not act
within the ﬁrst couple days, they were unlikely to ever
do so. Repeat notiﬁcations did not further improve re-
mediation levels.

Thus, while we have developed initial guidance for
conducting effective notiﬁcations, there remain many
unanswered questions as to how to best encourage op-
erators to patch vulnerable hosts.
Improving Centralized Notiﬁcation Mechanisms We
observed that relying on national and regional CERT or-
ganizations for vulnerability notiﬁcations had either a
modest effect (compared to our direct notiﬁcations) or no
effect (indistinguishable from our unnotiﬁed controls).

USENIX Association  

25th USENIX Security Symposium  1045

13

While certain national CERTs evinced improved levels
of remediation, others either did not act upon the infor-
mation we reported, or if they did so, recipients ignored
their messages. Thus, the community should consider
more effective mechanisms for facilitating centralized re-
porting, either within the existing CERT system, or us-
ing some separate organizational structure. This need is
quite salient because the burden of locating and messag-
ing thousands of individual contacts is high enough that
many researchers will ﬁnd it too burdensome to conduct
notiﬁcations themselves.
Open Ethical Questions The process of notifying par-
ties regarding security issues raises a number of ethical
questions. The community has already discussed some
of these in depth, as in the debates concerning “full dis-
closure.” Contacting individual sites suffering from vul-
nerabilities, likewise, raises questions regarding appro-
priate notiﬁcation procedures.

For example, WHOIS abuse emails are a point-of-
contact
that multiple notiﬁcation efforts have relied
on [5,9,13,14,22,24]. However, these contacts are tech-
nically designated for reports of abusive, malicious be-
havior (a point noted in the feedback we received as de-
tailed in Section 5). While vulnerability reports have a
somewhat similar ﬂavor, they do not serve the same pur-
pose. It behooves the security community to establish a
standardized and reliable point-of-contact for communi-
cating security issues.

Another question concerns whether the beneﬁts of re-
peated notiﬁcations for the same vulnerability outweigh
the costs imposed on recipients. Some may derive no
beneﬁts from the additional messages due to having no
means to effectively remediate, yet must spend time in-
gesting the notiﬁcations. From our results, we observed
that repeat notiﬁcations did not promote further patching,
which argues against performing re-notiﬁcations.

More provocative, and related to the full-disclosure
debate mentioned above, is the notion of threatening re-
cipients with publicly revealing their vulnerabilities if
unaddressed after a given amount of time. Likely, the
research community would ﬁnd this (quite) unpalatable
in general; however, one can imagine speciﬁc situations
where the community might conclude that spurring vi-
tal action justiﬁes such a harsh step, just as some have
concluded regarding full disclosure.
Future Abuse of Notiﬁcations
In a future with
widespread notiﬁcations, we would hope that security
issues could be rectiﬁed more extensively and quickly.
However, this would provide a new avenue for abuse, as
attackers could potentially leverage the open communi-
cation channel to target network operators. As a simple
example, a malicious actor could notify operators about
a real security issue, and inform the operators to install

a malicious application to help hosts resolve the secu-
rity gap. While existing techniques such as phishing de-
tection and binary analysis can help limit these attacks,
the problem domain likely will yield new challenges. It
is important that the security community remain cog-
nizant of these dangers as the state of security notiﬁca-
tions evolves.
Effective Remediation Tools For contacts that do not
remediate, our measurements cannot distinguish which
of the underlying reasons sketched above came into play.
However, while some operators may lack sufﬁcient mo-
tivation to take action, it seems quite plausible that others
wish to, but lack the technical capabilities, resources, or
permissions to do. Accordingly, we see a need for inves-
tigation into the operational problems that operators en-
counter when considering or attempting remediation, as
well as the development of effective and usable remedia-
tion tools that simplify the operators’ tasks. By reducing
the effort and resources required to address a vulnerabil-
ity, such tools could also increase the likelihood that an
operator would take the steps to react to vulnerability re-
ports. Ultimately, automated systems would be ideal, but
these face signiﬁcant challenges, such as heterogeneous
platforms, potential abusive or malicious behavior, and
inadvertent disruption of mission-critical systems.

7 Conclusion

We have undertaken an extensive study of notifying thou-
sands of network operators of security issues present
within their networks, with the goal of illuminating
which fundamental aspects of notiﬁcations have the
greatest impact on efﬁcacy. Our study investigated vul-
nerabilities that span a range of protocols and consider-
ations: exposure of industrial control systems; apparent
ﬁrewall omissions for IPv6-based services; and exploita-
tion of local systems in DDoS ampliﬁcation attacks.

Through controlled multivariate experiments, we stud-
ied the impact of a number of variables: choice of
party to contact (WHOIS abuse contacts versus national
CERTs versus US-CERT), message verbosity, hosting a
website linked to in the message, and translating the mes-
sage into the notiﬁed party’s local language. We moni-
tored the vulnerable systems for several weeks to deter-
mine their rate of remediation in response to changes to
these variables.

We also assessed the outcome of the emailing pro-
cess itself and characterized the sentiments and perspec-
tives expressed in both the human replies and an optional
anonymous survey that accompanied our notiﬁcations.
The responses were largely positive, with 96% of hu-
man email responses expressing favorable or neutral sen-
timents.

1046  25th USENIX Security Symposium 

USENIX Association

14

Our ﬁndings indicate that notiﬁcations can have a sig-
niﬁcant positive effect on patching, with the best messag-
ing regimen being directly notifying contacts with de-
tailed information. An additional 11% of contacts ad-
dressed the security issue when notiﬁed in this fashion,
compared to the control. However, we failed to prompt
the majority of contacts to respond, and even when they
did, remediation was often only partial. Repeat notiﬁ-
cations did not further improve remediation. Given these
positive yet unsatisfactory outcomes, we call on the secu-
rity community to more deeply investigate notiﬁcations
and establish standards and best practices that promote
their effectiveness.

Acknowledgments

The authors thank L. Aaron Kaplan for insightful discus-
sions regarding the CERT organizations and Philip Stark
for providing statistical consultation. We similarly thank
Jethro Beekman, Christian Kreibich, Kirill Levchenko,
Philipp Moritz, Antonio Puglielli, and Matthias Vallentin
for message translations. Additionally, we thank the re-
viewers and our shepherd Nicolas Christin for helpful
feedback.

This work was supported in part by the National
Science Foundation under contracts 1111672, 1111699,
1237264, 1237265, 1345254, 1409505, 1409758,
1518741, 1518888, 1518921, and 1619620. The ﬁrst
author is supported by a National Science Foundation
Graduate Research Fellowship. The second author is
supported by the Google Ph.D. Fellowship in Computer
Security. The opinions in this paper are those of the au-
thors and do not necessarily reﬂect the opinions of any
funding sponsor.

References
[1] National Vulnerability Database. https://nvd.nist.gov/.

[2] Conﬁcker Working Group:

Lessons Learned,

2011.

http://www.confickerworkinggroup.org/wiki/
uploads/Conficker_Working_Group_Lessons_
Learned_17_June_2010_final.pdf.

[3] CAIDA.

http://www.caida.org/projects/ark/.

Archipelago (Ark) Measurement

Infrastructure.

[4] CENTERS

FOR DISEASE CONTROL AND PREVENTION.
http://www.cdc.gov/

Patient Notiﬁcation Toolkit.
injectionsafety/pntoolkit/index.html.

[5] CETIN, O., JHAVERI, M. H., GANAN, C., EETEN, M., AND
MOORE, T. Understanding the Role of Sender Reputation in
Abuse Reporting and Cleanup. In Workshop on the Economics of
Information Security (WEIS) (2015).

[6] CZYZ, J., LUCKIE, M., ALLMAN, M., AND BAILEY, M. Don’t
Forget to Lock the Back Door! A Characterization of IPv6 Net-
work Security Policy. In Symposium on Network and Distributed
System Security (NDSS) (2016).

[7] DITTRICH, D., BAILEY, M., AND DIETRICH, S. Towards Com-
munity Standards for Ethical Behavior in Computer Security Re-
search. Tech. rep., 2009.

[8] DURUMERIC, Z., ADRIAN, D., MIRIAN, A., BAILEY, M., AND
HALDERMAN, J. A. A Search Engine Backed by Internet-Wide
Scanning.
In ACM Conference on Computer and Communica-
tions Security (CCS) (2015).

[9] DURUMERIC, Z., LI, F., KASTEN, J., WEAVER, N., AMANN,
J., BEEKMAN, J., PAYER, M., ADRIAN, D., PAXSON, V., BAI-
LEY, M., AND HALDERMAN, J. A. The Matter of Heartbleed.
In ACM Internet Measurement Conference (IMC) (2014).

[10] DURUMERIC, Z., WUSTROW, E., AND HALDERMAN, J. A.
ZMap: Fast Internet-Wide Scanning and its Security Applica-
tions. In USENIX Security Symposium (2013).

[11] GRAHAM, R. Masscan: The Entire Internet in 3 Minutes.
Errata Security Blog, 2013. http://blog.erratasec.
com/2013/09/masscan-entire-internet-in-3-
minutes.html.

[12] HOFMEYR, S., MOORE, T., FORREST, S., EDWARDS, B., AND
STELLE, G. Modeling Internet-Scale Policies for Cleaning up
Malware. In Economics of Information Security and Privacy III
(2013).

[13] KUHRER, M., HUPPERICH, T., ROSSOW, C., AND HOLZ, T.
Exit from Hell? Reducing the Impact of Ampliﬁcation DDoS
Attacks. In USENIX Security Symposium (2014).

[14] LI, F., HO, G., KUAN, E., NIU, Y., BALLARD, L., THOMAS,
K., BURSZTEIN, E., AND PAXSON, V. Remedying Web Hijack-
ing: Notiﬁcation Effectiveness and Webmaster Comprehension.
In World Wide Web Conference (WWW) (2016).

[15] LUCKIE, M. Scamper: A Scalable and Extensible Packet Prober
for Active Measurement of the Internet. In ACM Internet Mea-
surement Conference (IMC) (2010).
[16] MAXMIND, LLC. Geoip2 database.
[17] MIRIAN, A., MA, Z., ADRIAN, D., TISCHER, M.,
CHUENCHUJIT, T., MASON, J., YARDLEY, T., BERTHIER, R.,
DURUMERIC, Z., HALDERMAN, J. A., AND BAILEY, M. An
Internet-Wide View of Publicly Accessible SCADA Devices. Un-
published Manuscript.

[18] MOORE, T., AND CLAYTON, R. Ethical Dilemmas in Take-
down Research. In International Conference on Financial Cryp-
tography and Data Security (FC) (2011).

[19] NATIONAL CENTER FOR BIOTECHNOLOGY INFORMATION.
Clinical Effectiveness of Partner Notiﬁcation. http://www.
ncbi.nlm.nih.gov/books/NBK261439/.

[20] RAPID7. DNS Records (ANY) Dataset, 2015. https://

scans.io/study/sonar.fdns.

[21] ROSSOW, C. Ampliﬁcation Hell: Revisiting Network Protocols
for DDoS Abuse. In Symposium on Network and Distributed Sys-
tem Security (NDSS) (2014).

[22] STOCK, B., PELLEGRINO, G., ROSSOW, C., JOHNS, M., AND
BACKES, M. Hey, You Have a Problem: On the Feasibility of
Large-Scale Web Vulnerability Notiﬁcation. In USENIX Security
Symposium (2016).

[23] STONE-GROSS, B., CAVALLARO, L., GILBERT, B., SZYD-
LOWSKI, M., KEMMERER, R., KRUEGEL, C., AND VIGNA,
G. Your Botnet is My Botnet: Analysis of a Botnet Takeover.
In ACM Conference on Computer and Communications Security
(CCS) (2009).

[24] VASEK, M., AND MOORE, T. Do Malware Reports Expedite
Cleanup? An Experimental Study. In USENIX Workshop on Cy-
ber Security Experimentation and Test (CSET) (2012).

[25] YEGNESWARAN, V., BARFORD, P., AND PAXSON, V. Using
Honeynets for Internet Situational Awareness. In Hot Topics in
Networks (HotNets) (2005).

USENIX Association  

25th USENIX Security Symposium  1047

15

A Anonymous and Optional Security Noti-

ﬁcations Survey

Help us better understand the factors surrounding secu-
rity notiﬁcations by providing anonymous feedback in
this survey. Each question is optional, so answer the ones
you feel comfortable answering. Thank you!

1. Was your organization aware of the security issue

prior to our notiﬁcation?

2. Did your organization take prior actions to resolve

the security issue before our notiﬁcation?

3. Is your organization planning on resolving the secu-

4. Do you feel it was acceptable for us to detect the

5. Do you feel it was acceptable for us to notify your

rity issue?

security issue?

organization?

6. Would your organization want to receive similar se-
curity vulnerability/misconﬁguration notiﬁcations
in the future?

7. Did we notify the correct contact?

B IPv6 Notiﬁcation: Terse with Link

Subject: [RAND#] Potentially Misconﬁgured IPv6 Port
Security Policies

Body: Computer scientists at the University of Michi-
gan, the University of Illinois Urbana-Champaign, and
the University of California Berkeley have been con-
ducting Internet-wide scans to detect IPv4/IPv6 dual-
stack hosts that allow access to services via IPv6, but
not IPv4. This likely indicates a ﬁrewall misconﬁgura-
tion and could be a security vulnerability if the services
should not be publicly accessible. We have attached a list
of hosts that are potentially vulnerable on your network.

[LINK: More information is available at https://security-
notiﬁcations.cs.berkeley.edu/[RAND#]/ipv6.html.]

Thank you,

Berkeley Security Notiﬁcations Team

Body: During a recent study on the network security
policies of IPv4/IPv6 dual-stack hosts, computer scien-
tists at the University of Michigan, the University of Illi-
nois Urbana-Champaign, and the University of Califor-
nia Berkeley have been conducting Internet-wide scans
to detect IPv4/IPv6 dual-stack hosts that allow access to
services via IPv6, but not IPv4. This likely indicates a
ﬁrewall misconﬁguration and could be a security vulner-
ability if the services should not be publicly accessible.
We have attached a list of hosts that are potentially vul-
nerable on your network (as determined by WHOIS in-
formation).

For each dual-stack host, we test whether popular ser-
vices (e.g., SSH, Telnet, and NTP) are accessible via
IPv4 and/or IPv6 using a standard protocol handshake.
For ICMP this is an echo request, for TCP it is a SYN
segment, and for UDP this is an application-speciﬁc re-
quest (e.g., DNS A query for ‘www.google.com’ or an
NTP version query). We do not exploit any vulnerabili-
ties, attempt to login, or access any non-public informa-
tion.

The protocols we scanned are popular targets for attack
and/or can be used to launch DDoS attacks when left
publicly available to the Internet. We suspect they are
misconﬁgured and are notifying you because hosts rarely
offer services on IPv6 that are not offered on IPv4, and
we believe these services may have been left exposed ac-
cidentally. This is a common occurrence when admin-
istrators forget to conﬁgure IPv6 ﬁrewall policies along
with IPv4 policies.

If these IPv6-only accessible services should not be ac-
cessible to the public Internet, they can be restricted by
updating your ﬁrewall or by disabling or removing the
services. If none of your systems use IPv6, you can also
disable IPv6 on your system. Make sure your changes
are persistent and will not be undone by a system reboot.

information is

More
notiﬁcations.cs.berkeley.edu/[RAND#]/ipv6.html.

available

at https://security-

Thank you,

Berkeley Security Notiﬁcations Team

Help us improve notiﬁcations with anonymous feedback
at: https://www.surveymonkey.com/r/Q2HLJ5D

Help us improve notiﬁcations with anonymous feedback
at: https://www.surveymonkey.com/r/Q2HLJ5D

C IPv6 Notiﬁcation: Verbose

D ICS Notiﬁcation: Terse with Link

Subject: [RAND#] Potentially Misconﬁgured IPv6 Port
Security Policies

Subject: [RAND#] Vulnerable SCADA Devices

1048  25th USENIX Security Symposium 

USENIX Association

16

Body: Computer scientists at the University of Michi-
gan and the University of California Berkeley have been
conducting Internet-wide scans to detect publicly acces-
sible industrial control (SCADA) devices. These devices
frequently have no built-in security and their public ex-
posure may place physical equipment at risk for attack.
We have attached a list of SCADA devices on your net-
work that are publicly accessible.

nal, segmented network, or otherwise protected by a ﬁre-
wall that limits who can interact with these hosts. Make
sure your changes are persistent and will not be undone
by a system reboot.

information is

More
notiﬁcations.cs.berkeley.edu/[RAND#]/ics.html.

available

at https://security-

Thank you,

[LINK: More information is available at https://security-
notiﬁcations.cs.berkeley.edu/[RAND#]/ics.html.]

Berkeley Security Notiﬁcations Team

Thank you,

Berkeley Security Notiﬁcations Team

Help us improve notiﬁcations with anonymous feedback
at: https://www.surveymonkey.com/r/ZC7BVW5

Help us improve notiﬁcations with anonymous feedback
at: https://www.surveymonkey.com/r/ZC7BVW5

F DDoS Ampliﬁcation Notiﬁcation: Terse

with Link

E ICS Notiﬁcation: Verbose

Subject: [RAND#] Vulnerable SCADA Devices

Body: During a recent study on the public exposure
of industrial control systems, computer scientists at the
University of Michigan and the University of Califor-
nia Berkeley have been conducting Internet-wide scans
to detect publicly accessible industrial control (SCADA)
devices. These devices frequently have no built-in secu-
rity and their public exposure may place physical equip-
ment at risk for attack. We have attached a list of SCADA
devices on your network (as determined by WHOIS in-
formation) that are publicly accessible.

We scan for potentially vulnerable SCADA systems by
scanning the full IPv4 address space and attempting
protocol discovery handshakes (e.g., Modbus device ID
query). We do not exploit any vulnerabilities or change
any device state.

SCADA protocols including Modbus, S7, Bacnet, Trid-
ium Fox, and DNP3 allow remote control and moni-
toring of physical infrastructure and equipment over IP.
Unfortunately, these protocols lack critical security fea-
tures, such as basic authentication and encryption, or
have known security vulnerabilities. If left publicly ac-
cessible on the Internet, these protocols can be the tar-
get of attackers looking to monitor or damage physical
equipment, such as power control, process automation,
and HVAC control systems.

SCADA services are not designed to be publicly accessi-
ble on the Internet and should be maintained on an inter-

Subject: [RAND#] Vulnerable DDoS Ampliﬁers

Body: Computer scientists at George Mason University
and the University of California Berkeley have been de-
tecting open and misconﬁgured services that serve as
ampliﬁers for distributed denial-of-service (DDoS) at-
tacks. Attackers abuse these ampliﬁers to launch pow-
erful DDoS attacks while hiding the true attack source.
We have attached a list of hosts that are potentially vul-
nerable on your network.

[LINK: More information is available at https://security-
notiﬁcations.cs.berkeley.edu/[RAND#]/ampliﬁers.html.]

Thank you,

Berkeley Security Notiﬁcations Team

Help us improve notiﬁcations with anonymous feedback
at: https://www.surveymonkey.com/r/Y99J8K8

G DDoS Ampliﬁcation Notiﬁcation: Ver-

bose

Subject: [RAND#] Vulnerable DDoS Ampliﬁers

Body: During a recent study on distributed denial-of-
service (DDoS) attacks, computer scientists at George
Mason University and the University of California
Berkeley have been conducting Internet-wide scans for
open and misconﬁgured services that serve as ampliﬁers
for DDoS attacks. Attackers abuse these ampliﬁers to
launch powerful DDoS attacks while hiding the true at-

USENIX Association  

25th USENIX Security Symposium  1049

17

tack source. We have attached a list of hosts that are po-
tentially vulnerable on your network (as determined by
WHOIS information).

We detect ampliﬁers by monitoring hosts involved in re-
cent DDoS attacks and checking whether these hosts sup-
port the features used for launching an attack (e.g., NTP
monlist or recursive DNS resolution). We do not exploit
any vulnerabilities or attempt to access any non-public
data on these servers.

DDoS attacks are often conducted by directing an over-
whelming amount of network trafﬁc towards a target sys-
tem, making it unresponsive. Ampliﬁers are services that
send large amounts of data in response to small requests.
Attackers leverage these in DDoS attacks by spooﬁng
trafﬁc to the ampliﬁer, forging it to look as if it came
from the attacker’s target. Ampliﬁers then respond to
the target with a large response that overwhelms the tar-
get. Publicly accessible ampliﬁers are constantly abused
by attackers to conduct the DDoS attacks for them while
hiding the tracks of the real attacker.

These ampliﬁers can be avoided by disabling the appli-
cation or updating your ﬁrewall to block the application
port or restrict the IP addresses that can access it. More
speciﬁcally, Chargen should be closed as it is rarely use-
ful and is inherently an ampliﬁer.
If left open, DNS
should be conﬁgured to restrict who can make recursive
requests, and NTP should be conﬁgured to disable the
monlist functionality. Make sure your changes are per-
sistent and will not be undone by a system reboot.

information is

More
at https://security-
notiﬁcations.cs.berkeley.edu/[RAND#]/ampliﬁers.html.

available

Thank you,

Berkeley Security Notiﬁcations Team

Help us improve notiﬁcations with anonymous feedback
at: https://www.surveymonkey.com/r/Y99J8K8

1050  25th USENIX Security Symposium 

USENIX Association

18

