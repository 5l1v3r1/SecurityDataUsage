Conﬁguring DHCP Leases in the Smartphone Era

Ioannis Papapanagiotou

ECE, NC State University

Raleigh, NC

ipapapa@ncsu.edu

Erich Nahum
IBM Research
Hawthorne, NY

nahum@us.ibm.com

Vasileios Pappas

IBM Research
Hawthorne, NY

vpappas@us.ibm.com

ABSTRACT
The Dynamic Host Conﬁguration Protocol (DHCP) was in-
troduced nearly 20 years ago as a mechanism for hosts to
automatically acquire IP addresses. While the protocol re-
mains the same, its usage has evolved, especially in the last
decade with the introduction of mobile devices and wire-
less local area networks.
In this paper we investigate the
impact that new types of wireless devices, such as smart-
phones, have on DHCP. We use two one-month long traces,
collected at a corporate and an educational network, and we
compare side-by-side DHCP usage patterns. We develop a
novel passive ﬁngerprinting technique based on DHCP mes-
sages to determine the device type and operating system.
We show that DHCP implementations vary among device
types and have an eﬀect on DHCP lease durations. To im-
prove network address utilization, without introducing any
protocol changes, we propose a new leasing strategy which
takes into account device types. This strategy, compared to
current approaches, improves the address utilization without
considerably increasing the DHCP overhead.

Keywords
Mobile, Smartphones, DHCP, OS Fingerprinting

Categories and Subject Descriptors
C.2.3 [Computer-Communication Networks]: Network
Operations—Network Management

1.

INTRODUCTION

The Dynamic Host Conﬁguration Protocol (DHCP) [8]
enables devices to attach to networks without manual con-
ﬁguration. It does, however, require manual conﬁguration of
access policies at the DHCP servers. One of the most criti-
cal parameter of the DHCP server conﬁguration is the lease
duration, indicating how long a device can use an IP ad-
dress. Setting up proper DCHP lease values has been an art

Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’12, November 14–16, 2012, Boston, Massachusetts, USA.
Copyright 2012 ACM 978-1-4503-1705-4/12/11 ...$15.00.

rather than a science. Long lease times can lead to exhaus-
tion of the network address pool assigned for DHCP, while
short ones can result in increased broadcast traﬃc and un-
necessary activation of wireless interfaces by power limited
devices.

There have been few studies on the DHCP lease times
[7, 11], both of which were done before the onslaught of
smartphones in local area networks. Smartphones present
a challenge in correctly conﬁguring DHCP leases. A single
device may acquire multiple IP addresses during a day due to
its continuous attachment, in either asleep or active mode,
with the campus-wide wireless networks. For example, as
a student moves from one side of the campus to another,
her devices can re-associate with various campus subnets,
acquiring a diﬀerent address each time.
In this scenario,
setting DHCP lease times even as low as one hour may not
necessarily be enough to reduce network address utilization.
To further understand the impact of smartphone devices
on DHCP lease times, we analyze two one-month long packet
traces, collected from a corporate and an educational net-
work. We make the following contributions:
• We develop a novel device and operating system ﬁn-
gerprinting technique based on DHCP messages, which
signiﬁcantly improves the accuracy upon previous ﬁn-
gerprinting techniques that are based on HTTP user-
agent information [12].
• We show that DHCP message exchanges vary both
across device types (e.g., laptops, smartphones) and
across operating systems (e.g.,
iOS, Android, Win-
dows, Mac OS X, Linux), with each device type con-
tributing a diﬀerent amount of DHCP related traﬃc
and having a varying eﬀect on the network address
utilization.
• We propose a new DHCP leasing strategy that does
not require any protocol changes, and which takes ad-
vantage of the varying usage patterns per device type.
Using simulation results, driven by our traces, we show
that the new strategy, compared to current approaches,
improves the network address utilization sixfold with-
out considerably increasing DHCP overhead.

2. DHCP BACKGROUND

DHCP [8] enables automatic network conﬁguration of hosts
in TCP/IP networks, with a message exchange between hosts
and DHCP servers. A discover message is broadcasted to
locate available servers. The listening server replies with an
oﬀer, which contains the oﬀered IP address. The client gen-
erates a request (“selecting” state) asking for oﬀered param-

365Trace Type
Dates (2012)
Client MAC Addresses
Client IP Addresses
Wireless Subnets
Leases
DHCP Packets
TCP/UDP Bytes

Corporate
Feb 29-Mar 25
2980
3435
8 * /23
1h or 12h
2.16M
2.5TB

Educational
Jan 15-Feb 15
8726
1968
/21
15 min
3.48M
4.9TB

Table 1: Dataset Properties

eters from one server and implicitly declining oﬀers from all
others. However, there are other occasions in which a client
issues a request message, such as conﬁrming correctness of
previously allocated address after, e.g., system reboot (“init-
reboot” state), or extending the lease on a particular network
address (“renewing” or “rebinding” state1).

The server responds to a request with either an acknowl-
edgment, if the request is granted, or a negative acknowledg-
ment, in the case where the parameters are incorrect or the
lease has expired. The acknowledgment contains the lease
time for which the network address will be valid, either as a
new lease, or as an update. The client may extend its lease
with subsequent request messages sent periodically after half
the lease period. For example, if the lease time is 14400 sec-
onds, and the client is still active after 7200 seconds, it can
generate a request message at that time to notify the server.
If the lease time expires, the server assumes that the device
has been disconnected from the network. The client can is-
sue an explicit release message, but this is not mandated by
the RFC.

Finally, an inform message is sent from the client to the
server to ask for local conﬁguration parameters. This only
happens when the client already has an externally conﬁgured
network address.

3. PACKET TRACE ANALYSIS

We capture packet traces from two large wireless local
area networks, one from a corporate oﬃce network and one
from an educational campus network. Table 1 summarizes
the two traces, including their static lease policies.

Using the traces, we analyze the two types of data. First,
we examine DHCP packets, in order to uniquely identify
devices using MAC addresses, classify them based on the
device type and the operating system, analyze network ad-
dress utilization and emulate diﬀerent lease policies. Second,
we capture TCP and UDP packets using Bro 2.0 [1] to create
summary log ﬁles for TCP and UDP ﬂows, which enables us
to determine the time periods in which devices are active.
3.1 Device Classiﬁcation

We classify device types and operating systems by apply-
ing an a-priori learning algorithm [5] to generate association
rules, using as input labels the following ﬁelds in the DHCP
packets:
• Host-Name: Some devices set their host-name to a
string that can identify the type of the device. For ex-
ample, many iOS smartphones have names that follow
the pattern of ‘*-iPhone’, where * usually corresponds
to a string related to the user.

1The RFC deﬁnes the “renewing” and “rebinding” as diﬀer-
ent states. Their only diﬀerence is the way they request a
lease extension, i.e., broadcast or multicast.

Device
Laptop

OS
All
Windows
Mac OS X
Linux

Smartphone All
iOS
Android
BlackBerry
Win Mobile
All
Cisco VoIP
Unidentiﬁed

Other

All

Corporate
#
2176
1787
385
4
735
577
126
31
1
69
9
60
2980

%
73.02
59.97
12.92
0.13
24.66
19.36
4.24
1.04
0.03
2.32
0.32
2.01
100

Educational
%
45.50
32.31
12.96
0.23
51.44
35.17
15.29
0.96
0.02
3.06
-
3.06
100

#
3970
2819
1131
20
4489
3069
1334
84
2
267
-
267
8726

Table 2: Distribution of Devices in the Trace

• Vendor-Name: Some devices include in the vendor-
name a string that can uniquely identify their operat-
ing system. For example, most versions of Microsoft
Windows include the string ‘MSFT’[3].

• Parameter-Request: Some devices generate a unique
set and/or ordering of options that can be used for
identiﬁcation. For example, Android devices have the
following options: ‘1 121 33 3 6 28 51 58 59’.

• Organization Unique Identiﬁer : Using the IANA Eth-
ernet assignments [2], we determine the vendor of the
interface and then we identify if that vendor can be
directly mapped to a speciﬁc type of device.

To quantify the conﬁdence of the rules, we used standard
data mining metrics: Support supp(X) is deﬁned as the
portion of all devices that satisfy the rule x. Conﬁdence
conf (X ⇒ Y ) of an association rule X ⇒ Y is deﬁned as
supp(X ∩ Y )/supp(X), where supp(X ∩ Y ) is the support
of rule X ∧ Y , namely, the portion of all devices that satisfy
both rule X and Y . The rules that have high conﬁdence in at
least one direction (conf (X ⇒ Y ) and conf (Y ⇒ X)), and
are not contradictory, are broken into their corresponding
itemsets X and Y . Those rules are then used for potential
classiﬁcation. For example, [host-name contains ‘Android’]
⇒ [Parameter-Request-List contains ‘1 121 33 3 6 28 51 58
59’] happens with conﬁdence 100%. The reverse direction
[Parameter-Request-List contains ‘1 121 33 3 6 28 51 58 59’]
⇒ [host-name contains ‘Android’] happens with conﬁdence
82.35%, and the remaining 17.63% are related to a device
that neither has ’Android’ in the host name (e.g., when the
user has modiﬁed the default host-name) nor any other name
from another device type. Now a host-name that contains
‘Android’ or a Parameter-Request-List that contains ‘1 121
33 3 6 28 51 58 59’, can be used to classify Android devices.
In other words, we assume no ground-truth but quantify
every rule.

While we use an existing classiﬁcation approach, we are
unaware of any previous work that has used an unsupervised
learning algorithm, fed with DHCP data, in order to clas-
sify devices and operating systems. Previous wireless device
classiﬁcation approaches were based on information in the
HTTP user-agent header [12] and were able to classify up to
82% of devices. Table 2 shows the results of our approach
on the two collected traces, indicating that more than 97%
of the devices were classiﬁed.

366Corporate

Educational

Type

iOS

Android

BlackBerry
Windows
Mac OS

Other

(%) Mean Median
51.6
5.88
2.68
31.16
7.08
2.2

251
123
200
51
52
-

140
58
48
24
48
-

(%) Mean Median
35.74
11.44
0.88
39.6
12.38

158
117
135
190
148

38
37
42
45
38

0.4

-

Table 3: DHCP Requests

Type

iOS

Android

BlackBerry
Windows
Mac OS X

Type

iOS

Android

BlackBerry
Windows
Mac OS X

Corporate

Select
13.19
72.40
94.05
33.53
20.33

Init-Reboot Renew

85.62
17.52
0.00
23.99
56.18

1.19
10.09
5.95
42.48
22.49

Educational

Select
13.06
28.46
35.53
3.99
4.91

Init-Reboot Renew

57.4
10.78

0

10.39
8.79

29.54
60.76
64.47
85.62
86.3

Table 4: Relative (%) of DHCP Request Types

3.2 Lease Time Analysis

Using the DHCP-based device classiﬁcation of the previ-
ous section, we analyse the DHCP request messages. Table 3
shows the acknowledged DHCP request messages2 for each
device type, as a percentage of the total requests, as well
as the absolute mean and median values. We observe dis-
tinct behavioral diﬀerences between the corporate and ed-
ucational network. In the corporate network, smartphones,
especially iOS devices, generate considerably more DHCP
requests on average as compared to laptops.
In contrast,
in the educational network all devices generate roughly the
same number of requests. Figure 1(a), which shows the cu-
mulative distribution of requests per device type, illustrates
this more clearly. This diﬀerence between the corporate and
educational network is due to the smaller lease time of the
educational network, forcing all devices to generate frequent
lease renewal requests, as shown by the larger number of
requests per device in that network.

To better understand the diﬀerences, we present the dis-
In
tribution of DHCP request message types in Table 4.
the educational network, with the exception of the iOS de-
vices, the majority of the DHCP requests are renewals. In
contrast, in the corporate network a considerably smaller
percentage of the requests are renewals. Given the small
number of renewal requests in the corporate network, other
types of requests become more prominent, revealing a num-
ber of distinctions between device types. For example, iOS
devices, and to a lesser extent Mac OS X devices, gener-
ate a large proportion of init-reboot requests. In contrast,
Android and BlackBerry devices generate mainly select re-
quests, meaning once they acquire a new address, they rarely
contact the DHCP server again.

This diﬀerence between Apple and other devices is at-
tributed to the implementation of DNAv4 [4] in iOS and
Mac OS X [6, 13]. DNAv4 optimizes the re-attachment to
2We use the acknowledged requests so that we do not ac-
count for messages generated by DHCP relays.

)
x
(
F

)
x
(
F

)
x
(
F

)
x
(
F

1
0.8
0.6
0.4
0.2
0
 
100

1
0.8
0.6
0.4
0.2
0
 
100

1
0.8
0.6
0.4
0.2
0
 
100

1
0.8
0.6
0.4
0.2
0
 
100

All States (Corporate)

101

102

(a−1) # of DHCP Requests per Device

Select State (Corporate)

101

102

(b−1) # of DHCP Requests per Device

Init−Boot State (Corporate)

101

102

(c−1) # of DHCP Requests per Device
Renew or Rebinding State (Corporate)

101

102

(d−1) # of DHCP Requests per Device

 

103

 

103

 

103

 

103

iOS
Android
BlackBerry
Windows
Mac OS X

)
x
(
F

1
0.8
0.6
0.4
0.2
0
 
100

iOS
Android
BlackBerry
Windows
Mac OS X

)
x
(
F

1
0.8
0.6
0.4
0.2
0
 
100

iOS
Android
BlackBerry
Windows
Mac OS X

)
x
(
F

1
0.8
0.6
0.4
0.2
0
 
100

)
x
(
F

iOS
Android
BlackBerry
Windows
Mac OS X

1
0.8
0.6
0.4
0.2
0
 
100

All States (Educational)

101

102

(a−2) # of DHCP Requests per Device

Select State (Educational)

101

102

(b−2) # of DHCP Requests per Device

Init−Boot State (Educational)

101

102

(c−2) # of DHCP Requests per Device
Renew or Rebinding State (Educational)

101

102

(d−2) # of DHCP Requests per Device

 

103

 

103

 

103

 

103

Figure 1: CDF of the number DHCP Request messages
in the Corporate and Educational network

a previously connected network by attempting to reuse a
previous but still valid conﬁguration, by reducing the num-
ber of DHCP exchange messages and by using unicast ARP
requests3.

Finally, in Figure 2, we plot the interarrival time of the
DHCP request messages. The ﬁrst graph corresponds to the
educational network, and the second two to the corporate
network (with leases of one hour and twelve hours respec-
tively). We also indicate with a dotted vertical line the time
corresponding to half of the lease time. This is the time at
which a DHCP client requests a lease extension. In the edu-
cational network, we observe that the majority of the request
messages are generated at half of the lease time, indicating
that they are renewal requests. In the corporate network,
where the lease times are larger, the devices generate far
fewer requests for renewing an IP address.
3.3 Network Access Patterns

Proper setting of DHCP lease times depends on the amount
of time devices stay active in the network, i.e., the amount
of time they send or receive data4. For a particular host, as
identiﬁed by its MAC address, we deﬁne the following:
• Active Time: The time period, starting at the initial
DHCP lease oﬀer, up to the time a Release message
has been issued5 or the last time that any packet was
generated, before the next lease oﬀer.

3In our trace we observed unicast ARP requests associated
with DHCP init-reboot requests coming from Apple devices.
4Note that the active time does not depend on the conﬁgu-
ration of lease times.
5In both traces a release message is issued in < 0.1% of
the leases, with an exception in Windows laptops of the
corporate environment which is issued in 6.8% of the leases.

367)
x
(
F

)
x
(
F

1
0.8
0.6
0.4
0.2
0
 
100

1
0.8
0.6
0.4
0.2
0
 
100

1

0.8

0.6

0.4

0.2

)
x
(
F

0
 
100

CDF − Subnet #1 − Lease Time 3600

1800

101

102

103

(a) Interrival Time of Request  messages per Device

CDF − Subnet #2 − Lease Time 7200

104

105

3600

101

102

103

(b) Interrival Time of Request  messages per Device

CDF − Subnet #3 − Lease Time 43200

104

105

101

102

103

(c) Interrival Time of Request messages per Device

104

105

21600

 

iOS
Android
BlackBerry
Windows
MAC

106

 

iOS
Android
BlackBerry
Windows
MAC

106

 

iOS
Android
BlackBerry
Windows
MAC

106

Figure 2: CDF of the interrival time of Request messages
with diﬀerent Lease Time setting

Active  time

UDP

TCP

Inactive  time

TCP

TCP

t

DHCPREQUEST

(Init-Reboot/Select)

DHCPREQUEST

(Renew)

DHCPRELEASE

DHCPREQUEST

(Init-Reboot/Select)

Active  time

UDP

TCP

L
a
s
t
 
B
y
t
e

TCP

TCP

DHCPREQUEST

(Init-Reboot/Select)

DHCPREQUEST

(Renew)

Inactive  time

t

DHCPREQUEST

(Init-Reboot/Select)

Figure 3: Calculating Active and Inactive times.

• Inactive Time: The time period between the end of
an active period and the beginning of the next active
period.

Active time starts when a device receives a DHCP ac-
knowledgement message as a response to a DHCP request
message. From the request messages, we exclude those gen-
erated when the client is either in the renewing or the re-
binding state, as their purpose is to update the lease du-
ration. However, we include the ones from the init-reboot
state, where the objective is to reconﬁgure the leases. An
illustration of active and inactive times is depicted in Fig-
ure 3.

Figure 4 shows active and inactive times for the diﬀerent
types of devices. We observe that smartphone active times
are much smaller compared to laptop active times. We also
see that active times for iOS devices are smaller than the
active times of other smartphones. This happens due to a
combination of reasons related to: i) the way users use lap-
tops and smartphones, and ii) the diﬀerent policies related
to energy management between laptops and smartphones.
User behaviour is diﬃcult to analyze without having direct
access on the devices, but we can clearly understand the ef-
fects of diﬀerent energy management policies on the active

)
x
(
F

)
x
(
F

1

0.8

0.6

0.4

0.2

0
 
100

1

0.8

0.6

0.4

0.2

0
 
100

Active Time (Corporate)

iOS
Android
BlackBerry
Windows
Mac OS X

 

)
x
(
F

1

0.8

0.6

0.4

0.2

102

Time (sec)

104

Inactive Time (Corporate)

106

 

)
x
(
F

iOS
Android
BlackBerry
Windows
Mac OS X

102

Time (sec)

104

106

0
 
100

1

0.8

0.6

0.4

0.2

0
 
100

Active Time (Educational)

 

102

Time (sec)

104

Inactive Time (Educational)

iOS
Android
BlackBerry
Windows
Mac OS X

106

 

iOS
Android
BlackBerry
Windows
Mac OS X

102

Time (sec)

104

106

Figure 4: CDFs of Active and Inactive durations.

and inactive times. For laptops the policy has been to keep
the wireless interfaces always active, while for cellphones the
interface can switch oﬀ after some period of inactivity. In
iOS devices, if the device is not plugged in to power and
the device display is switched oﬀ, the Wi-Fi interface is also
switched oﬀ and the cellular network becomes the primary
interface. On the other hand, in Android devices the user is
allowed to conﬁgure the WiFi sleep policy6, although there
is not a unique default policy.

Finally, it is interesting to point out that in the educa-
tional network there are a large number of smartphone de-
vices, especially iOS devices, that have an active time of one
minute or less. We attribute this to the fact that when users
roam from one part of the campus to another, their devices
associate with some subnets for only a brief period of time7.

4. DHCP LEASE POLICIES

Ideally, a DHCP lease allocation policy should account
for the diﬀerences in behavior of the various mobile devices.
The goals of this policy should be to minimize the following,
in decreasing priority:
• Address space utilization: The policy should use as
little of the available address space as possible, in order
to support the most concurrent users.
• Broadcast traﬃc: The policy should cause as few broad-
casts as necessary, since broadcasts wake idle clients
and consume power.
• Server load : The policy should minimize the load on
the DHCP server, to reduce the related capex and opex
expenses of running the server (including power).

We do this in two steps: ﬁrst, we look at the behavior of
the devices in isolation when varying the lease times over
several orders of magnitude. Then, based on those behav-
iors, determine an approach that best meets the above goals.
We wrote a simulator that, given a trace, reproduces the
DHCP behavior and outputs the above metrics.
6There are various sleep policies: never sleep, never sleep
when plugged in, sleep when screen turns oﬀ, sleep after 15
min, etc.
7We conﬁrmed this with the educational network adminis-
trators, who also say that this was one of the reasons that
they set the lease time to a relatively short 900 seconds.

368)

%

(
 

n
o

i
t

a
z

i
l
i
t

U
 
k
a
e
P

s
e
g
a
s
s
e
M

 
t
s
a
c
d
a
o
r
B

d
a
o
L

 
r
e
v
r
e
S
P
C
H
D

 

100

50

 

0
100

104

102

100

 

100

104

102

100

 

100

(a) − Corporate

(a) − Educational

101

101

103
102
Lease Time (sec)
(b) − Corporate

102
103
Lease Time (sec)

(c) − Corporate

104

104

 

105

 

105

 

iOS
Android
Windows
Mac OS X

iOS
Android
Windows
Mac OS X

iOS
Android
Windows
Mac OS X

)

%

(
 

n
o

i
t

a
z

i
l
i
t

U
 
k
a
e
P

s
e
g
a
s
s
e
M

 
t
s
a
c
d
a
o
r
B

d
a
o
L

 
r
e
v
r
e
S
P
C
H
D

 

101

102
103
Lease Time (sec)

104

105

100

50

 

0
100

101

104

102

102
103
Lease Time (sec)

(b) − Educational

101

103
102
Lease Time (sec)
(c) − Educational

100

 

100

104

102

 

105

 

105

 

104

104

100

 

100

101

102
103
Lease Time (sec)

104

105

Figure 5: (a) Address space utilization (b) Broadcast messages (c) Server load, versus lease time, averaged per day
and per device.

Figure 5 shows the results from our simulator. Broadly,
one can see the tension between the goals in the three sets
of graphs. Shorter lease times utilize the address space most
eﬃciently, but cause large amounts of broadcast traﬃc and
high server load. Large lease times minimize broadcasts and
server load, but at the expense of poor address space uti-
lization.

Looking more closely, in Figure 5a we see that address
space utilization stays relatively ﬂat versus lease times for
each device type up until some threshold, after which utiliza-
tion starts to grow logarithmically. In the corporate network
and for iOS devices, the threshold is 103 seconds; for An-
droids, 2 ∗ 103 seconds, and for laptops, 4 ∗ 103 seconds. In
the educational network, the same pattern holds, but with
half the threshold. This is an artifact of the shorter active
periods in the educational network as illustrated in Figure
4. As lease times go up, many leases are wasted on devices
that have transitioned into the inactive period. This issue
becomes more prevailent in smartphone devices since users
have shorter access times and are more mobile compared to
laptops.

In Figure 5b we observe that lease duration does not af-
fect the number of broadcast messages generated by the
laptops in both networks. Laptop users have long active
times, therefore the majority of their DHCP messages are
renews, which are unicast. In contrast, the number of broad-
casts generated by smartphones is sensitive to the lease time.
Shorter lease times incur larger numbers of broadcasts. This
is because short lease time results in smartphones generating
more request messages from the “selecting” state, as leases
expire faster, and new leases require a full DCHP handshake,
which incurs extra broadcast traﬃc.

In Figure 5c, we see that server load levels oﬀ at about
1,000 seconds for smartphones, but 10,000 seconds for lap-
tops. This is due to the longer active times of the laptop
users, as was shown in Figure 4.

Given these behaviors, we evaluated and compared the

following DHCP lease policies:

minutes, and 12 hours, for all devices.

• Static policies: Fixed lease times of 15 minutes, 30
• Exponential adaptation [11], which allocates a short
lease to a client once it arrives, and doubles the lease
time every time the client renews its lease.
• Diﬀerential lease, which allocates diﬀerent lease times
based on the device type. We choose values based on
our analysis of Figure 5. In the corporate network: iOS
devices get 1000 seconds, Androids 2000 seconds, and
Windows and Mac OS X 4000 seconds. In the educa-
tional network: iOS devices get 500 seconds, Androids
1000 seconds, and Windows and Mac OS X 2000 sec-
onds.

Figure 6 shows the results of our simulations. We see that
our diﬀerential lease policy provides a good tradeoﬀ between
our goals for both networks. It is very eﬃcient in address
utilization, almost as much as the 15 minute lease policies,
yet creates less broadcast traﬃc and server load. Exponen-
tial adaptation, on the other hand, uses a large amount of
address space, but produces low amounts of broadcast traﬃc
and DHCP server load on a daily basis.

Diﬀerent environments may have diﬀerent priorities among
the goals outlined above, depending on their address space
size, distribution of clients (smartphones vs.
laptops), etc.
However, using static values requires a manual tuning pro-
cess to determine the right tradeoﬀ for the environment.
Moreover, setting small static leases may have an adverse
impact on the user experience. Devices have to reassociate
in the wireless network when a lease expires, which in some
cases can take several seconds. Our diﬀerential lease policy
allows devices that tend to have longer active times to re-
ceive longer leases. Hence, it should work well across many
environments, with less administrative intervention as the
mixture of devices continues to change.

5. RELATED WORK

Although most wireless networks are conﬁgured to dy-
namically allocate IP addresses, relatively few studies exam-

369Exp. Adapt

Diff. Lease

Static 12h

Static 30min

Static 15min

0

500

1000

Exp. Adapt

Diff. Lease

Static 12h

Static 30min

Static 15min

0

500

1000

(a) − corporate

(b) − corporate

(c) − corporate

Exp. Adapt

Diff. Lease

Static 12h

Static 30min

Static 15min

Exp. Adapt

Diff. Lease

Static 12h

Static 30min

Static 15min

3000

3500

4000

0

0.5

1

Broadcast Messages

1.5

2
x 106

(b) − educational

0

0.5

1

1.5

2

DHCP Server Load

(c) − educational

2.5
x 104

1500

2000

2500

Peak Utilization

(a) − educational

Exp. Adapt

Diff. Lease

Static 12h

Static 30min

Static 15min

Exp. Adapt

Diff. Lease

Static 12h

Static 30min

Static 15min

3000

3500

4000

0

0.5

1

Broadcast Messages

1.5

2
x 106

0

0.5

1500

2000

2500

Peak Utilization

1

1.5

DHCP Server Load

2

2.5
x 104

Figure 6: (a) Address space utilization (b) Broadcast messages (c) Server load, for various policies averaged per day

ine DHCP. Brick et al. [7] investigated the impact of lease
times on DHCP performance. Khadikar et al. [11] studied
the eﬀects of longer DHCP lease times on address space uti-
lization. Our work is the ﬁrst to diﬀerentiate the device
types and study the DHCP usage patterns of smartphones.
Additionally, in contrast to previous studies, we combine
DHCP and TCP/UDP behavior in order to better under-
stand network usage patterns for each device type. Finally,
our work is the ﬁrst to propose DHCP leasing policies that
account for the various device types and their behaviours.

With respect to device classiﬁcation, Maier et al. [12] used
a combination of IP TTL and HTTP user-agent informa-
tion to classify device types among smartphones. Similarly,
Erman et al. [9] identiﬁed devices based on the user-agent
string only. Gember et al. [10] cross-validated the user-agent
results with the organization unique identiﬁer of the MAC
address.
In contrast, we use a diﬀerent classiﬁcation ap-
proach based solely on DHCP information. Our approach,
in addition to being more accurate compared to the previ-
ous art, enables new DHCP leasing policies that account for
diﬀerent device types. Using our device classiﬁcation tech-
nique, such policies can be implemented in current DHCP
server software without requiring any protocol changes.

6. CONCLUSION

It has become of increasing importance for network ad-
ministrators to properly allocate DHCP lease times, due to
the variety of devices connected to wireless local area net-
works. In this paper, we show that smartphones are primary
responsible for the increase in the network address utiliza-
tion, and ﬁxed lease time policies are far from optimal, even
when DHCP lease times are as low as one hour.
In con-
trast, ﬁx leased times of 15 minutes, while they signiﬁcantly
decrease address utilization, produce unnecessary DHCP re-
lated overhead. To reduce this overhead, we propose a dif-
ferential lease policy that assigns diﬀerent lease values to
each device type. The policy makes use of a novel device
ﬁngerprinting technique done at the DHCP server, without

requiring any protocol changes. The main beneﬁt of this
new DHCP lease policy is that it is insensitive to the ac-
tual mixture between laptop and smartphone devices, thus
removing the need to manually tune DHCP lease times as
the mixture of devices continues to change.

7. REFERENCES
[1] The Bro network security monitor. http://bro-ids.org/.
[2] Ethernet number registration.

http://www.iana.org/assignments/ethernet-numbers.

[3] Microsoft DHCP vendor and user classes.

http://support.microsoft.com/kb/266675.

[4] B. Aboba, J. Carlson, and S. Cheshire. RFC 4436 -

Detecting Network Attachment in IPv4 (DNAv4). IETF -
http://www.ietf.org/rfc/rfc4436.txt, March 2006.

[5] R. Agrawal, R. Srikant, et al. Fast algorithms for mining

association rules. In VLDB, 1994.

[6] Apple. DHCP client software.

http://www.opensource.apple.com/source/bootp/
bootp-198.2/IPConfiguration.bproj/dhcp.c.

[7] V. Brik, J. Stroik, and S. Banerjee. Debugging DHCP

performance. In Proceedings of the 7th ACM SIGCOMM
Internet Measurement Conference, pages 257–262. ACM,
2004.

[8] R. Droms. Dynamic host conﬁguration protocol. IETF

RFC, March 2007.

[9] J. Erman, A. Gerber, K. Ramakrishnan, S. Sen, and

O. Spatscheck. Over the top video: The gorilla in cellular
networks. In IMC. ACM, 2011.

[10] A. Gember, A. Anand, and A. Akella. A comparative study

of handheld and non-handheld traﬃc in campus wi-ﬁ
networks. In Passive and Active Measurement, pages
173–183. Springer, 2011.

[11] M. Khadilkar, N. Feamster, M. Sanders, and R. Clark.

Usage-based DHCP lease time optimization. In Proceedings
of the 7th ACM SIGCOMM Internet Measurement
Conference, pages 71–76. ACM, 2007.

[12] G. Maier, F. Schneider, and A. Feldmann. A ﬁrst look at

mobile hand-held device traﬃc. In Passive and Active
Measurement. Springer, 2010.

[13] D. Simmons. Rapid DHCP redux.

http://cafbit.com/entry/rapid_dhcp_redux.

370