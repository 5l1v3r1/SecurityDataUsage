2013 IEEE Symposium on Security and Privacy

Ally Friendly Jamming: How to Jam Your Enemy and Maintain Your Own Wireless

Connectivity at the Same Time

Wenbo Shen, Peng Ning

Department of Computer Science
North Carolina State University

Raleigh, NC 27695

{wshen3, pning}@ncsu.edu

Xiaofan He, Huaiyu Dai

Department of Electrical and Computer Engineering

North Carolina State University

Raleigh, NC 27695

{xhe6, hdai}@ncsu.edu

Abstract—This paper presents a novel mechanism, called
Ally Friendly Jamming, which aims at providing an intelligent
jamming capability that can disable unauthorized (enemy)
wireless communication but at
the same time still allow
authorized wireless devices to communicate, even if all these
devices operate at the same frequency. The basic idea is to
jam the wireless channel continuously but properly control the
jamming signals with secret keys, so that the jamming signals
are unpredictable interference to unauthorized devices, but are
recoverable by authorized ones equipped with the secret keys.
To achieve the ally friendly jamming capability, we develop
new techniques to generate ally jamming signals, to identify
and synchronize with multiple ally jammers. This paper
also reports the analysis, implementation, and experimental
evaluation of ally friendly jamming on a software deﬁned
radio platform. Both the analytical and experimental results
indicate that the proposed techniques can effectively disable
enemy wireless communication and at the same time maintain
wireless communication between authorized devices.

Keywords-Wireless; friendly jamming; interference cancella-

tion

I. INTRODUCTION

Wireless communication technology has been widely de-
ployed and increasingly adopted due to the ease of instal-
lation and reduced operational cost. The applications that
beneﬁt from wireless communication range from traditional
military operations to more recent civilian applications such
as Wi-Fi and mobile phones. There have also been on-
going efforts aimed at adopting wireless communication
in emerging and mission-critical applications (e.g., health-
care [12], [18] and critical
infrastructure protection [6],
[10]).

In mission-critical applications such as battleﬁeld oper-
ations, anti-terrorism activities, and critical
infrastructure
protection, it is highly desirable and sometimes necessary
to gain advantages over the adversary in terms of wireless
communication capability. In particular, it is highly desirable
to disable the adversary’s (unauthorized) wireless communi-
cation while still maintaining our own (authorized) wireless
communication. For example, wireless communication has
been a common way to trigger Improvised Explosive De-
vices (IED) (a.k.a. roadside bombs), which were responsible

1081-6011/13 $26.00 © 2013 IEEE
DOI 10.1109/SP.2013.22

174

for approximately 63% coalition deaths in the second Iraq
war from 2001 to 2007 and over 66% of the coalition
casualties in Afghanistan between 2001 and 2012 [2]. The
capability of disabling enemy wireless communication and at
the same time maintaining coalition’s wireless connectivity
would greatly reduce the casualties due to radio-controlled
IED. It
is conceivable that such a capability will also
enhance the security of other non-military mission-critical
applications such as critical infrastructure protection and
health-care applications.

This paper aims at providing such a capability. Speciﬁ-
cally, we develop a novel mechanism, called Ally Friendly
Jamming, to provide an intelligent jamming capability that
can disable unauthorized (enemy) wireless communication
but at the same time still allow authorized wireless devices to
communicate, even if both the authorized and unauthorized
devices operate at the same frequency.

The basic idea behind ally friendly jamming is to jam
the wireless channel continuously but properly control the
jamming signals using secret keys, so that the jamming sig-
nals are unpredictable interference to unauthorized devices,
but are recoverable by authorized devices equipped with
the secret keys. As a result, when authorized devices need
to communicate, they can employ proper signal processing
techniques to remove the jamming signals and recover the
messages transmitted by other authorized devices. In other
words, authorized devices can regenerate jamming signals
using the secret keys and subtract them from the received,
mixed signals to get jamming-free transmissions.

Though conceptually simple, ally friendly jamming turns
out to be non-trivial to achieve. We have to resolve three
technical challenges to ensure effective jamming and at the
same time enable authorized devices to actually receive
messages under ally friendly jamming, even though such
devices know the secret keys.

First, to achieve ally friendly jamming, the ally jamming
signals need to be irresolvable interference to unauthorized
devices. Simply transmitting modulated pseudo random
numbers as jamming messages can be easily defeated due to
the strong patterns introduced by the digital communication

Second, an authorized receiver has to synchronize with
the ally jammers, so that it can estimate the ally jamming
signals, remove them from received signals, and recover
potential transmissions from authorized transmitters. Though
synchronization is a well-studied problem in digital com-
munication, synchronization in ally friendly jamming faces
a new challenge. As the channel and hardware effects
(e.g., frequency offset) on the received ally jamming signals
are unknown, the authorized receiver cannot synchronize
with ally jammers even though it can generate the same
transmitted ally jamming signals. The frequency offset can
be compensated for by using the phase-locked loop which
depends on the strong phase patterns existing in the transmit-
ted signals. As ally jamming signals mimic random noises,
no strong patterns can be relied on, existing synchronization
approaches (e.g., [11], [16], [28], [34]) cannot be applied
directly in ally friendly jamming. In this paper, we propose
to use the pilot frequency aided correlation to synchronize
authorized receivers with multiple ally jammers.

Third, when multiple ally jammers exist in the network, an
authorized receiver needs to ﬁrst identify these ally jammers
properly and then regenerate the transmitted ally jamming
signals in order to recover the authorized transmission. A
particular challenge lies in how to identify these ally jam-
mers rapidly while their ally jamming signals are pseudo-
random signals and the channel and hardware effects on
the received ally jamming signals are unknown. To solve
this problem, we propose to use the pilot frequency and the
fast Fourier transform (FFT) to identify ally jammers and
further compensate for the hardware difference effects on
the received signals.

process (e.g., modulation) [15]. Thus, the jamming signals
injected by ally jammers must resemble real random noises.
In the proposed ally friendly jamming scheme, we introduce
the concept of epoch and use the shared keys with epoch
indices as the input of a pseudo random number generator to
directly control physical layer symbols, so that these signals
are random noises to unauthorized devices and easy for
authorized devices to synchronize with.

A similar technique called IMD (Implantable Medical
Device) shield [12] was proposed recently which exploited
jamming to provide access control to an IMD. The IMD
shield is a small radio device that employs two antennas for
jamming and receiving, respectively. The receive antenna is
physically connected to a transmit (jam)-and-receive chain,
so that when sending a jamming signal, the jam chain can
inject an “antidote” signal to the receive antenna to cancel
the jamming signal. Due to the physical connection between
the jamming and the receiving antennas, IMD shield does
not have to deal with the synchronization challenge ad-
dressed in this paper. Moreover, the multiple-jammer case
was not considered in IMD shield. This means if multiple
IMD shields operate at the same time in the same area, their
jamming signals will interference with each other, and all

accesses will be denied. Therefore, by providing solutions to
the above problems, our work further advances the current
state of the art in security enhancement through friendly
jamming.

We have implemented a prototype for ally friendly jam-
ming using the Universal Software Radio Peripheral (USRP)
platform [25] and GNURadio [1]. Our experimental results
show that under ally friendly jamming, authorized devices
have close-to-0 packet
the same time
unauthorized devices suffer from 100% packet loss rate.

loss rate, and at

The contributions of this paper are summarized as follows:
We explore a new concept called ally friendly jamming that
can disable unauthorized wireless communication and at the
same time allow authorized devices to maintain wireless
connectivity. We develop new techniques to generate ally
jamming signals, to identify and synchronize with multiple
ally jammers. We have also implemented a prototype for
ally friendly jamming and performed analysis and extensive
experimental evaluation to validate the techniques.

The remainder of this paper is organized as follows.
Section II provides some background knowledge on wire-
less communication. Section III clariﬁes our assumptions
and threat model. Section IV presents the proposed ally
friendly jamming scheme in detail. Section V describes the
analysis and limitations. Section VI presents the implemen-
tation and experimental evaluation of ally friendly jamming.
Section VII discusses related work. Finally, Section VIII
concludes the paper and points out some future research
directions.

II. PRELIMINARIES

Wireless digital communication systems generally em-
ploy radio frequency (RF) signals to transmit information.
Transmitters need to convert digital messages represented
in bits to RF signals, while receivers convert received RF
signals back to digital messages. Figure 1 shows a simpliﬁed
structure for a wireless digital communication system with
one transmitter and one receiver. On the transmitter side,
upon receiving bits from upper layers, the transmitter ﬁrst
modulates them to discrete baseband signals (a.k.a. physical
layer symbols, or simply symbols), then converts them to
analog signals using a digital to analog converter (DAC),
and ﬁnally up-converts them to RF signals. The RF signals
go through the wireless channel and reach the receiver. Upon
receiving the RF signals, the receiver performs the inverse
processing. It down-converts and samples the received sig-
nals to discrete baseband signals, and then demodulates them
to bits.

Physical layer symbols are represented by complex num-
bers. For example, when BPSK is used for modulation,
the transmitter modulates bit “1” to x = 1 + 0j and bit
(cid:2) = −1 + 0j (j is the imaginary unit, satisfying
“0” to x
j2 = −1). A symbol xi = a + bj is often represented in its

175

Transmitter

Wireless 
Channel

Receiver

Modulator

DAC

Analog Up 
Converter

Analog Down 

Converter

ADC

Demodulator

Bits

Discrete 
baseband 

signal

Analog 
baseband 

signal

Radio 

frequency 

signal

Radio 

frequency 

signal

Analog 
baseband 

signal

Discrete 
baseband 

signal

Bits

Figure 1. Simpliﬁed structure for a wireless digital communication system.

polar form xi = M ejθ, where M = |xi| =
θ = tan−1(b/a) [26].

√

a2 + b2 and

The wireless channel introduces attenuation, phase shift,
and additional noise during transmission. After the signal xi
is transmitted through the channel, it is transformed into the
received signal

yi = hejγxi + ni,

where h is the channel attenuation, γ is the phase shift, and
ni is the noise.

In practice, the signal reception at the receiver is also
affected by two additional factors: frequency offset and sam-
pling offset. Frequency offset Δf generally exists between
the transmitter and the receiver, since there is no practical
way to guarantee that two radios operate at exactly the same
frequency. Δf causes variations on the phases of received
signals [13]. Thus, if we take Δf into consideration, the
received signal becomes

yi = hejγej2πΔf ti xi + ni,

(1)

where ti is the time at which the receiver gets the sample
yi.

Moreover, the receiver uses sampling and quantization
to recover the original baseband signals. Due to the lack
of perfect synchronization in wireless communications, the
receiver usually cannot sample perfectly to get the exact
physical layer symbols sent by the transmitter. When the
sampling offset is considered, the received signal becomes

and authorized devices are loosely synchronized, and the fre-
quency offsets between ally jammers and authorized devices
are within a given range. We assume that ally jammers can
block the operational frequencies of all devices, including
both authorized and unauthorized devices. In other words,
unauthorized devices cannot ﬁnd a wireless communication
channel that is not being jammed by the ally jammers. We
also assume that the adversary cannot defeat ally friendly
jamming by physically removing ally jammers. Finally, we
assume that each device (authorized or unauthorized) is
equipped with a single omnidirectional antenna and there
is no adversarial jammer. How to accomplish ally friendly
jamming with MIMO (multiple-input and multiple-output)
devices and how to maintain wireless communication under
both ally and adversarial jamming will be addressed in our
future work.

Threat Model: We consider unauthorized devices as
potential adversaries. The objective of unauthorized devices
is to defeat the proposed scheme so that they can com-
municate under ally friendly jamming. They may analyze
the ally friendly jamming signals and attempt to use the
result of analysis to remove the jamming signals with signal
processing techniques (e.g., [8], [9]). They may also em-
ploy anti-jamming communication techniques such as Direct
Sequence Spread Spectrum (DSSS), Frequency Hopping
Spread Spectrum (FHSS), and their variations (e.g., [20],
[32], [39]).

yi = hejγej2πΔf ti xi+μ + ni,

(2)

IV. ALLY FRIENDLY JAMMING

where μ is the sampling offset due to mis-sampling.

In summary, the wireless channel and the hardware differ-
ences introduce various distortion to the signal transmission.
To correctly recover the transmitted messages, the receiver
need to either estimate these parameters to certain accuracy
or tolerate their inﬂuences.

III. ASSUMPTION AND THREAT MODEL

Assumptions: We assume that there are multiple ally
jammers and multiple authorized wireless devices, all of
which share a secret key set that is unknown to unauthorized
devices. We assume a high signal-to-noise radio (SNR) for
both transmission signals and ally jamming signals at the
receiver. We also assume that the clocks at ally jammers

In ally friendly jamming, upon detecting a transmission,
the authorized device can employ proper signal processing
techniques to remove the jamming signals from the received,
mixed signals. In contrast, the unauthorized device does not
have the secret keys, and cannot remove the interference
introduced by ally jamming signals.

Figure 2 further illustrates ally friendly jamming, where
one ally jammer is presented for simplicity. Assuming the
ally jammer, the authorized and unauthorized devices are all
in the same area. As mentioned earlier, the ally jammer and
authorized devices, including A1, A2, and AJ in Figure 2,
share a secret key k. The ally jammer AJ uses a Pseudo-
Random Number Generator (PRNG) with k as the seed to
continuously emit jamming signals XJ.

176

Authorized 
Device A1

Unauthorized 

Device E1

Ally Jammer AJ

Authorized 
Device A2

Ally Jamming 

Range

Unauthorized 

Device E2

Unauthorized 

Device E3

Figure 2.

Illustration of ally friendly jamming.

When the unauthorized device E1 transmits signals XE1
to another unauthorized device E3, the signals received by
E3 will be the mixture of both XE1 and some portion of XJ.
With enough jamming power, the jamming signals from AJ
can effectively distort the signals XE1 at E3. As a result,
the wireless communication between unauthorized devices
E1 and E3 is disabled.

When A1 transmits signals XA1 to A2,

the jamming
signals XJ will also distort the received signals at A2.
However, since A2 shares the same secret key k with AJ,
it can regenerate the same jamming signals XJ using k. If
it can ﬁnd out which portion of XJ is mixed with XA1, it
can subtract this portion of XJ to get a clean copy of XA1.
To remove XJ from the mixed signals, authorized devices
need to synchronize with the ally jamming signals, estimate
their values in the mixed signals, and remove them from the
received, mixed signals to recover meaningful transmissions.
In the following sections, we will present how the ally
jammer generates ally jamming signals and how the autho-
rized device synchronizes with ally jammers and recovers
the transmissions.

A. Generation of Ally Jamming Signals

Every ally jammer uses a shared, unique secret key to
generate its ally jamming signals. Ally jammers and autho-
rized devices share a set of secret keys. Either group key
agreement (e.g., [17], [22], [43]) or group key distribution
protocols (e.g., [7], [23], [30]) can be used to generate
the secret key set. Assuming there are n ally jammers in
the network, identiﬁed as AJ1, AJ2, . . . , AJn and n keys
k1, k2, . . . , kn in the key set, the key kg will be assigned to
the ally jammer AJg.

To ensure effective jamming against unauthorized devices,
the jamming signals injected by ally jammers should resem-
ble random noises. To achieve this goal, we use a PRNG
to directly control the physical layer symbols so that these
signals appear to be random noises to unauthorized devices.
Since a physical layer symbol is represented as a complex
number, we can use a PRNG to generate random ﬂoating

point numbers with certain precision as the real and the
imaginary parts of each symbol.

Moreover, the injected jamming signals should allow the
authorized devices, which have access to the secret keys, to
synchronize with ally jammers, even they join the network
in the middle of a jamming session and the jamming has
been going on for a long period of time.

epoch

...

ri-1,0

Epoch

eT
ri,1

sT
ri,0

...

ri,n-1

ri+1,0

^

ri-1,n-1

ri-1,1 ...
1i
Figure 3. Generation of jamming signals.

ri+1,1 ...
1i

i

ri+1,n-1

...

Time

To accomplish these goals, we make the following design,
illustrated in Figure 3. We divide the time into equal-sized
epochs, each of which consists of n physical layer symbols.
Assuming that the duration of each physical layer symbol
is Ts. Then the duration of each epoch is Te = n · Ts. For
simplicity, we consider the time period [i· Te, (i + 1)· Te) as
the i-th epoch, where i is the epoch index. For convenience,
we also index and label the physical layer symbols within
each epoch. For example, in Figure 3, the symbols in the i-th
epoch are indexed from 0 to n−1 and labeled as ri,0 through
ri,n−1. With this design, for any given time t, we can easily
(cid:4), and
compute the corresponding epoch index as i = (cid:3) t
the symbol index within the epoch as m = (cid:3) t−i·Te
(cid:4). The
Ts
corresponding physical layer symbol is thus ri,m.

To allow easy synchronization with the jamming signals
on authorized devices, we propose to use both the secret key
and the epoch index to control the PRNG for jamming signal
generation. Speciﬁcally, to generate the jamming symbols
in epoch i, the ally jammer, say AJg, ﬁrst uses the key
kg and the epoch index i as the seed to the PRNG to
get a sequence of pseudo random ﬂoating numbers, i.e.,
(cid:5)a0, a1, . . . , a2n−1(cid:6) = P RN G(kg, i), and then forms each
jamming symbol ri,m as ri,m = a2m + a2m+1 · j, where
m = 0, 1, ..., n − 1. As a result, the jamming signals are
pseudo-random samples, which are independent of the noise
and shifted versions of themselves. Therefore, when an
authorized device comes to the network, it can reﬁne its
synchronization with the ally jammer, and eventually remove
the jamming signals.

Te

Note that the quality of the jamming signals is affected
by two parameters: the duration of each jamming symbol
Ts, and the precision of the pseudo random numbers used
for the real and the imaginary parts of jamming symbols.
To maximize the uncertainty of the jamming signals, the
smallest value for Ts and the maximum precision allowed
for the jamming symbols can be used. Both parameters
are eventually limited by the hardware used for emitting
jamming signals. Finally,
the
jamming symbols should be transmitted without modulation
and encoding.

to ensure the randomness,

177

B. Synchronizing with Ally Jamming Signals

1) Synchronizing by Correlation: An authorized device
has to synchronize with ally jammers, so that it can esti-
mate and remove the ally jamming signals to maintain its
communication. The goal of synchronization is to align the
received ally jamming symbols with the locally generated
ally jamming signals, even though these received signals
have been distorted by the unknown wireless channel param-
eters(i.e., when the parameters γ, Δf, and μ in Equation (2)
are unknown).

Ally Jammer

ri,k … ri,l

i

1i

Authorized Device

yi,k...yi,l

...
Epoch

Join

Received

Generated

...

Epoch

yi,k...yi,l

2i

1i
Moving Correlation

...

ri,k … ri,l

...

i

 

l

e
u
a
V
n
o
i
t
a
e
r
r
o
C

l

Figure 4. Synchronization with ally jamming signals.

Correlation Position

Let us use Figure 4 to explain the synchronization process
in ally friendly jamming. In this and the following two
sections, we will focus on one ally jammer for simplicity,
and defer the discussion of multiple ally jammers to the
Section IV-E. Assuming when an authorized device joins the
network, the ally jammer, say AJg, is in the i-th epoch on its
local clock and the ally jamming signals being transmitted
are ri,k, . . . , ri,l. The corresponding jamming signals re-
ceived by the authorized device are yi,k, . . . , yi,l. Assuming
the frequency offset between AJg and the authorized device
is Δfg, based on Equation (1), we have

yi,m = hejγej2πΔfgti,m ri,m + ni,m, m ∈ [k, l].

At the same time, the authorized device is in the (i + δ)-
th epoch on its own clock (δ = −2 in Figure 4). Assuming
the authorized device knows that the ally jammer is AJg
(we will address how to distinguish ally jammers in Sec-
tion IV-C), it can use the secret key kg and its epoch indices
to regenerate the ally jamming symbols locally. It is assumed
that the ally jammer and authorized devices are loosely
synchronized, with maximum clock difference of ΔT . Thus,
the current local epochs of this authorized device and the ally
(cid:9) epochs away from
jammer will not be more than w = (cid:8) ΔT

Te

each other, and the authorized device only needs to consider
possible symbol alignments within this time window. In our
example, since the authorized device is in the (i − 2)-th
epoch, it should regenerate the following sequence of jam-
ming symbols from the ally jammer: rd,0, rd,1, . . . , rd,n−1,
where d ∈ [i − 2 − w, i − 2 + w].

To obtain the synchronization with the ally jammer, the
authorized device can use correlation to ﬁnd the loca-
tion of the received samples yi,k, . . . , yi,l
in the locally
generated symbols. Correlation is a popular technique for
detecting known signal patterns on the receiver side. As-
suming the correlation length is L. The authorized device
can ﬁrstly align yi,k, . . . , yi,k+L−1 with the ﬁrst L signals
in rd,0, rd,1, . . . , rd,n−1, compute the correlation, shift the
alignment by one sample and re-compute the correlation,
until a spike at
is identiﬁed. The
jamming signals are pseudo-random samples, which are
independent of the noise and shifted versions of themselves.
Therefore,
the correlation is near zero except when the
correct alignment is found.

the correlator output

However, the above statement is only partially correct as
the frequency offset can disrupt the correlation. For example,
assuming the correlation output is Γ:

L−1(cid:2)
L−1(cid:2)

n=0

Γ =

=

≈ hejγ

|ri,k+n|2

.

n=0

The correlation spikes when the received signals are aligned
correctly with the generated signals, as shown in Figure 4.

178

yi,k+n · r

∗
(cid:2)
i

(cid:2)+n

,k

[hejγej2πΔfgti,k+n ri,k+n + ni,k+n] · r

∗
(cid:2)
i

(cid:2)+n,

,k

(cid:2)

,k

n=0
where ri
(cid:2)+n is a signal in the locally generated jamming
signal sequence rd,0, rd,1, . . . , rd,n−1 and r
(cid:2)+n is its
(cid:2)+n is independent of noise,
complex conjugation. As r
ni,k+n will be canceled out. If the correct alignment is
found, say i

∗
(cid:2)
i

∗
(cid:2)
i

,k

,k

(cid:2) = i and k
(cid:2) = k, then we have
L−1(cid:2)
Γ ≈ hejγ

|ri,k+n|2

ej2πΔfgti,k+n .

n=0

The frequency offset part ej2πΔfgti,k+n introduces dynamic
phases to the individual components in the above sum, which
may lead to signal cancellation. Therefore, the authorized
device must compensate for frequency offset before the cor-
relation can be used for synchronization. After compensating
for the frequency offset (we will discuss frequency offset
compensation in IV-C), the correlation output becomes:
Γ ≈ hejγ

ej2πΔfgti,k+n · e

−j2πΔfgti,k+n

|ri,k+n|2

L−1(cid:2)
L−1(cid:2)

n=0

Pilot Frequency Assignment

f

max

AJ 1

2f

max

3f

max

4f

max

5f

max

6f

max

Baseband 
Frequency

AJ 2

AJ 3

RX Side

Pilot frequency shifted by frequency offset

2f

max

4f

max

6f

max

Baseband 
Frequency

Therefore, by detecting the correlation spike, the authorized
device is able to synchronize with the ally jammer.

Recall that there is also a sampling offset between the
received ally jamming signals and the self-generated signals.
For example, assuming for any transmitted jamming signal
ri,m, the received signal by authorized device with sampling
offset μ is ri,m+μ. After generating ri,m with the shared key,
the authorized device interpolates it at a rate of N. As a re-
sult, ri,m will be expanded to ri,m+p/N , p = 0, . . . , N − 1.
When N is large enough (in our experiments, N = 16 gives
a good enough resolution), there will be a value p0 such that
p0/N ≈ μ, as shown in Figure 5. The authorized device can
use p0/N to approximate the sampling offset μ.

e
d
u
t
i
n
g
a
M

0

e
d
u
t
i
n
g
a
M

0

 

For AJ 1

For AJ 2

For AJ 3

e
d
u

t
i
l

p
m
A

1

0.8

0.6

0.4

0.2

0

−0.2

−0.4

 
0

Selected samples

Symbol shape
Interpolated samples
Received samples

1

2

3

4

5

6

7

8

9

Time

Figure 5. Received samples interpolation. Interpolation rate N = 16. The
selected interpolated samples are close to the received samples.

To decide the value of p0, the authorized device uses a
selection of the interpolated samples rather than the samples
before interpolation, to correlate with the received signals.
The authorized device can try all values of p = 0, 1, . . . , N−
1, the one achieving the maximum correlation spike value
is regarded as p0, which can be used to approximate the
sampling offset for the following samples.

C. The Introduction of Pilot Frequencies

In order to compensate for the frequency offset as well as
identify ally jammers rapidly, we introduce the concept pilot
frequency into ally friendly jamming. A pilot frequency is
a 1 Hz wide frequency uniquely associated with each ally
jammer, injected along with the pseudo-random jamming
signals into the channel. On the receiver side, the authorized
device can use this pilot frequency to identify the associated
ally jammer and compute the frequency offset between them.
Before applying pilot frequency, we need to assign a
proper pilot frequency to each ally jammer. Assuming the
maximum frequency offset between ally jammers and autho-
rized devices is fmax, the frequency offset Δf ∈ [0, fmax).
We assign (2g − 1)fmax as the ally jammer AJg’s pilot
frequency and designate [(2g − 2)fmax, 2gfmax) as the
associated shift range, as shown in Figure 6.

For each ally jammer, along with the generated pseudo-
random signals, it also generates the signals of its pilot

Figure 6. Pilot frequency assignment.

frequency. Assume an epoch has n pseudo-random signals,
the ally jammmer will generate n pilot frequency signals,
and apply them to all epochs. For example, for the ally
jammer AJg with the pilot frequency (2g − 1)fmax, the
pilot frequency signal it will generate for the m-th pseudo-
random signals in all epochs is

pfm = ej2π(2g−1)fmaxmTs .

pfm will be added up onto the m-th generated pseudo-
random signals in all the epochs. Hence the m-th jamming
signals in epoch i, say si,m, is given by
si,m = ri,m + pfm.

On the receiver side, for transmitted signal si,m, assuming
the authorized device will
the frequency offset
receive

is Δfg,

yi,m = hejγej2πΔfgti,msi,m + ni,m

= hejγej2πΔfgti,m(ri,m + pfm) + ni,m.

As ri,m are pseudo-random samples, their energy is spread
over a wide range of spectrum. On the other hand, the pilot
frequency signals pfm concentrate all their energy on a
narrow band (1Hz wide), which will achieve a much larger
magnitude, as shown in Figure 7. Therefore, on the receiver
side, if the authorized device analyzes the spectrum of the
received signals, it will ﬁnd a spike within the designated
shift range of the pilot frequency. Since the designated pilot
frequency shift ranges of different ally jammers do not
overlap, as shown in Figure 6, the pilot frequencies can be
used for ally jammer identiﬁcation.
Assuming the ally jammer AJg is identiﬁed, the autho-
rized device knows its pilot frequency (2g−1)fmax. And as
Δfg + (2g − 1)fmax has also been detected, the authorized
device can infer their frequency offset Δfg, which can be
used further to compensate for their frequency offset.

179

300

250

200

150

100

50

e
d
u
t
i
n
g
a
M
T
F
F

 

Pilot frequency signals

Pseudo−random signals

symbols. For example, as the frequency offset has already
been compensated for and the noise is negligible, estimated
channel coefﬁcient for the samples in RS1 is

ci,u = yi,u
si,u

= hejγsi,u

si,u

= hejγ, u ∈ [k, . . . , k + l − 1].

0

0

100

200

300

500

400
600
Frequency (50Hz)

700

800

900

1000

Figure 7. Received signal spectrum. Only show a portion of the whole
spectrum.

If there are no transmissions other than the ally jamming
signals in RS1, ci,u tends to be stable, as shown in Fig-
ure 9 (a). However, when there is an authorized transmission

D. Detecting and Recovering Transmissions

After synchronizing with the ally jamming signals, the
authorized device needs to detect and recover potential trans-
missions from other authorized devices. Before a transmis-
sion is recovered, the authorized device cannot distinguish
it is authorized or unauthorized. Therefore, the authorized
device will try to detect and recover all transmissions in
the same way. For simplicity, in this section and the fol-
lowing section, we assume all transmissions are authorized
transmissions. And we also assume that there is only one
authorized transmission at one time, the media access control
mechanism in ally friendly jamming will be presented later.
1) Re-synchronization & Transmission Detection: When
the authorized device joins the network, it needs to synchro-
nize with the ally jamming signals, this process is denoted
as the initial synchronization. After initial synchronization,
we have each authorized device re-synchronize with the ally
jamming signals periodically. Figure 8 illustrates the re-
synchronization process. Assuming that an authorized device
re-synchronizes with the ally jamming signals every T time
units. At the beginning of each re-synchronization period

Ally Jammer

Authorized

TX

T

Jamming

Message
Collision

Received

yi,k...yi,k+lͲ1

mi,v...mi,w

yi,q...yi,q+lͲ1

Authorized

RX

ReͲSync Succeeds

ReͲSync Fails

ReͲSync Succeeds

Generated

si,k...si,k+lͲ1

RS1

si,r...si,r+lͲ1

RS2

si,q...si,q+lͲ1

RS3

Time

Time

Time

Time

Figure 8.
Transmission detection and recovery under ally friendly
jamming. The authorized RX and the ally jammer are both in i-th epoch. s is
the regenerated ally jamming signal, y is the received ally jamming signal,
m is the received collided signal. T is the re-synchronization interval.

(e.g., RS1 in Figure 8), the authorized device compensates
for the frequency offset, and correlates the received symbols
with the regenerated ones to get the right alignment. Then
it will estimate the channel by forming a quotient between
each pair of received and transmitted (regenerated) jamming

0.15

0.1

0.05

0

e
d
u

t
i
l

p
m
A

 

Real part
Imaginary part

−0.05

 
0

100

200

300

500

400
600
Estimated Channel

700

800

900

1000

(a) Without other transmission

e
d
u
t
i
l

p
m
A

1

0.5

0

−0.5

−1

 
0

 

Real part
Imaginary part

100

200

300

500

400
600
Estimated Channel

700

800

900

1000

(b) With other transmission

Figure 9. Estimated channel.

(e.g., RS2 in Figure 8), we have
ci,u = hejγsi,u + xi,u

si,u

, u ∈ [r, . . . , r + l − 1],

where xi,u is the received signal from the authorized trans-
mission. The stableness of ci,u is corrupted by xi,u, as
shown in Figure 9 (b). Thus by imposing a threshold on
the standard deviation of the estimated channel coefﬁcient,
we can detect the existence of an authorized transmission
under ally jamming.

To ensure that authorized device does not miss authorized
transmissions, we set the re-synchronization interval T as a
value smaller than the minimal packet transmission duration.
2) Recovery of Authorized Transmissions: To remove the
ally jamming signals, the authorized device ﬁrstly needs
to estimate the corresponding components from the ally
jammer in the received, mixed signals, then subtract them
out to recover the detected transmissions.

Let us use the scenario shown in Figure 8 as an example,
where the authorized device re-synchronizes successfully
in RS1, but fails in RS2 due to the collision. Since re-
synchronization in RS1 is successful, the authorized device
can obtain the received ally jamming symbols in this interval
(i.e., yi,k, . . . , yi,k+l−1 in Figure 8), which contain no strong
interference (other strong signals, e.g., authorized transmis-
sion signals). As the frequency offset is already compensated
for and the SNR is high, the least-square (LS) estimator can

180

be employed to obtain a sufﬁciently accurate estimation of
both h and γ.

The re-synchronization failure in RS2 is caused by the
collision of an authorized transmission with the ally jam-
ming signals. Assuming the received signal components
from the authorized transmission are xi,v, . . . , xi,w,
the
corresponding received ally jamming signal components
in collision are yi,v, . . . , yi,w, then the received collided
symbols mi,v, . . . , mi,w, are given by

mi,u = yi,u + xi,u + ni,u, u ∈ [v, . . . , w].
(cid:2),
(cid:2) and γ
Assuming the estimated channel parameters are h
the authorized device can get an estimation of yi,v, . . . , yi,w,
say y

(cid:2)
(cid:2)
i,w, as
i,v, . . . , y
(cid:2)
i,u

(cid:2)
= h

y

(cid:2) · si,u, u ∈ [v, . . . , w],

ejγ

where si,u is the generated ally jamming symbol. Then the
authorized transmission can be recovered by subtracting the
(cid:2)
estimated received ally jamming signals y
i,w from
the received collided signals mi,v, . . . , mi,w. Thus, assuming
the recovered authorized signal is x

(cid:2)
i,v, . . . , y

(cid:2)
i,u, we have

(cid:2)

ejγ

(cid:2) · si,u

(cid:2)
i,u

x

(cid:2)
i,u

= mi,u − y
= yi,u + xi,u + ni,u − y
= hejγ · si,u + xi,u + ni,u − h
= (hejγ − h

(cid:2)
i,u

(cid:2)

(cid:2)

ejγ

(cid:2) and γ

(cid:2) are accurate enough, (hejγ − h

) · si,u + xi,u + ni,u, u ∈ [v, . . . , w].
) · si,u is
As h
close to 0. Recall that the SNR of xi,u is larger enough,
(cid:2)
i,u has sufﬁcient SNR to be de-
then the recovered signal x
modulated correctly, which further indicates the authorized
transmission can be recovered readily.

ejγ

(cid:2)

(cid:2)

Note that as the authorized device does not know the
boundary of the authorized transmission, it will recover all
the signals between two succeed re-synchronizations (i.e.,
all signals between RS1 and RS3 in Figure 8). Moreover,
the authorized device can also use the received signals in
the later successful re-synchronization interval to estimate
the channel coefﬁcients and recover transmission in previous
intervals. For example, in the scenario shown in Figure 8,
the authorized device can use yi,q, . . . , yi,q+l−1 in RS3
to estimate the channel, and recover the transmission in
mi,v, . . . , mi,w.

E. Dealing with Multiple Ally Jammers

When an authorized device joins the system, it is likely
that more than one ally jammers exist
in the network,
the authorized device needs to be able to remove the ally
jamming signals from multiple ally jammers.

1) Synchronization with Multiple Ally Jammers: The au-
thorized device can compute the spectrum of the received
signals through FFT and identify all ally jammers by detect-
ing all the spikes on the spectrum. It can further compensate

for their frequency offsets and synchronize with each ally
jammer through correlation.

Let us use an example to illustrate the process. Assuming
that there are n active ally jammers, from AJ1 to AJn, and
the received signals at the authorized device are Y , which
contain the jamming signals from all ally jammers. For one
ally jammer, say AJg, if the authorized device does FFT on
the received signals, it will ﬁnd a spike within [(2g − 2) ·
fmax, 2g · fmax), which indicates that AJg is jamming the
channel. And then the authorized device can compute their
frequency offset Δfg and ﬁnd out AJg’s key kg which can
be used to generate the jamming signal sequences used by
AJg, say sg(1), sg(2), . . . , sg(n).

Since the received signals Y contain the ally jamming
signals from multiple ally jammers, we cannot compen-
sate for AJg’s frequency offset on Y directly without
disrupting other ally jammers’ frequency offsets. To ad-
dress this problem, the authorized device applies Δfg on
sg(1), sg(2), . . . , sg(n) to mimic the same frequency offset
effect. Then it can correlate the frequency offset compen-
sated sg(1), sg(2), . . . , sg(n) with Y to synchronize with
the ally jammer AJg. Thus by ﬁnding out all the pilot
frequency spikes on spectrum and repeating this process n
times, the authorized device is able to synchronize with all
ally jammers.

2) Authorized Transmission Detection & Recovery: The
detection of the authorized transmission under multiple ally
jammers is similar to the detection under single ally jammer:
when there is no authorized transmission,
the estimated
channels between these multiple ally jammers and the au-
thorized device tend to be stable in short period (e.g., several
milliseconds).

In the previous n active ally jammers example, the au-
thorized device can get sample y(k) which contains ally
jamming signals from all n ally jammers. As the frequency
offsets have already been compensated for, we have

y(k) =

cg · sg(k) + n0(k), k ∈ [1, n],

n(cid:2)

g=1

where cg = hgejγg is the channel coefﬁcient between the
ally jammer AJg and the authorized device, sg(k) is the
jamming signal sent by the ally jammer AJg and n0(k) is
the white noise in received sample y(k). Assuming y =
[y(1), y(2), . . . , y(n)]T , sg = [sg(1), sg(2), . . . , sg(n)]T
and n0 = [n0(1), n0(2), . . . , n0(n)]T , we have

y = [s1 s2 . . . sn] ·

⎤
⎥⎥⎥⎦ + n0.

⎡
⎢⎢⎢⎣

c1
c2

...
cn

The distribution of the noise n0 is known, and we know all
the transmitted ally jamming signals [s1 s2 . . . sn]. Thus

181

the LS estimator can be used to solve the above equation
and get the estimated channel coefﬁcients
[c1 c2 . . . cn]T = (SH S)−1

SH y,

where S = [s1 s2 . . . sn], ()H denotes the conjugate trans-
pose and ()−1 is the matrix inverse operation. The authorized
device can use different received signals to compute multiple
versions of [c1 c2 . . . cn] and further compute the standard
deviation of each channel coefﬁcient. If the mean value of
all these standard deviations is larger than a threshold, then
an authorized transmission is detected, the authorized device
should start to remove the ally jamming signals.

By detecting the authorized transmission, the authorized
device knows whether the received signals contain autho-
rized transmission signals or not. Therefore, it can use the
transmission-free samples to estimate the channel coefﬁ-
cients [c1 c2 . . . cn], then apply these channel coefﬁcients
to estimate the received ally jamming signals in the received
collided signals and ﬁnally subtract them out to recover the
detected transmission.

F. Dealing with Multiple Authorized Transmitters

In practice, it is possible that multiple authorized trans-
mitters exist in the network. Since ally jamming signals
will always occupy the channel, the traditional media access
control (MAC) protocol (e.g., CSMA/CA) for wireless net-
working cannot be applied. It turns out that the transmission
detection techniques can be used to solve this problem.

Before sending any packets, the authorized transmitter
listens to the channel and computes the channel coefﬁcients
between itself and the multiple ally jammers by using the
techniques described in Section IV-E. Suppose that there are
n ally jammers and the computed channel coefﬁcients are
[c1 c2 . . . cn]. If [c1 c2 . . . cn] are stable for sometime
(e.g., DIFS), then there is no other ongoing transmissions
and the authorized transmitter will start to transmit, other-
wise, it will back-off for some random time, listen to the
channel and compute [c1 c2 . . . cn] again.

V. ANALYSIS

In this section, we provide an analysis of the proposed ally
friendly jamming technique, including ally jamming power
control and the limitation discussion.

Let us ﬁrst clarify the notations. We denote the power
of received ally jamming signals, the power of a received
transmission (from either an authorized or unauthorized
transmitter), and the power of received noise as J, R,
and N0, respectively. The jamming to signal power ratio
at the receiver side is JSR = J
R , the Signal to Noise
Ratio is SN R = R
N0 . For simplicity, we assume authorized
and unauthorized receivers observe the same received ally
jamming powers and the same received transmission powers.

A. Maintaining Authorized Communication

We would like to understand how well the authorized
communication can be maintained through analyzing the Bit
Error Rate (BER) at authorized devices. According to [11],
the BER of a wireless device is mainly dependent on its
Signal
to Interference and Noise Ratio (SINR) and the
modulation method.

Let x be the portion of the ally jamming signal power that
can be removed using our techniques. Consider the situation
where the authorized devices use BPSK for modulation.
Based on the result in [11], we can derive the BER as

(cid:9)(cid:10)

(cid:11)

P a
e

= Q

1

SN R

2

+ JSR(1 − x)

,

where Q(·) is the Q-function (i.e., Q(x) is the probability
that a standard normal random variable will obtain a value
larger than x). Figure 10 (a) gives the BER values w.r.t.
SN R can be ignored as SNR is high
x and JSR, where
enough. The results for other modulation methods can be
derived similarly.

1

In our experiments, the percentage of removed jamming
power x is between 99.2% and 99.6% (See Figure 14).
It is generally agreed that wireless communication can be
well maintained when the BER is less than 10−3 [13]. This
implies that we can maintain authorized wireless communi-
cation even if the JSR is as high as 17dB.

B. Disabling Unauthorized Communication

We consider three kinds of unauthorized devices: ordinary
ones that do not use any anti-jamming techniques, those with
DSSS-based anti-jamming capability, and those with FHSS-
based anti-jamming capability.

1) Ordinary Unauthorized Devices: Unauthorized de-
vices do not know the secret keys, and thus cannot regenerate
the ally jamming symbols and remove them from the re-
ceived signals. An ordinary unauthorized device may attempt
to guess the jamming symbols to remove the jamming
signals. Note that the random generation of the ally jamming
symbols is essentially to randomly pick points from the
constellation map. Even assuming a coarse-grained random
generation with only 10 possibilities for the real and the
imaginary parts of a random jamming symbol, there are
102 possible symbols in total. The probability of guessing
y consecutive symbols right will be 10−2y, which quickly
approaches 0 when y increases. Thus, the probability of
removing the ally jamming signals through random guessing
is very close to 0.

Based on the results in [11], if BPSK is used for modu-

lation, the BER for an unauthorized device is

(cid:9)(cid:10)

(cid:11)

2
+ JSR

1

SN R

.

P o
e

= Q

182

e
t
a
R

 
r
o
r
r

E

 
t
i

B

100

10−1

10−2

10−3

10−4

10−5

10−6
 

−10

 

BPSK, x=0%
BPSK, x=90%
BPSK, x=99%

−5

0

5

10

15

20

(a) Authorized/Unauthorized Ordinary Device

JSR (dB)

e
t
a
R

 
r
o
r
r

E

 
t
i

B

100

10−1

10−2

10−3

10−4

10−5

10−6

10−7
 

−10

 

100

 

e
t
a
R

 
r
o
r
r

E

 
t
i

B

10−1

10−2

10−3

10−4

10−5
 

−10

LF=1, SNR=10dB
LF=1, SNR=20dB
LF=3, SNR=10dB
LF=3, SNR=20dB

−5

0

5

10

15

20

JSR (dB)

(c) Unauthorized FHSS Device

Gp = 32
Gp = 64
Gp = 128

−5

0

5

10

15

20

JSR (dB)

(b) Unauthorized DSSS Device

Figure 10. Bit error rate analysis.

1

The BER for other modulation methods can be derived
similarly. Again assuming that the SNR is high enough,
SN R can be ignored, we can get the BER as shown in
Figure 10 (a), in which the line for x = 0% shows the
expected BER for an unauthorized device when BPSK is
used for modulation. It is easy to see that when the jamming
signal is 10dB stronger than the power of a transmission,
the BER of the unauthorized device is close to 50%, a value
obtainable with random guesses, and their communication
is disabled.

2) DSSS-based Unauthorized Devices: To jam DSSS-
based unauthorized devices, the ally jammer needs to act as
a broadband jammer [31] by increasing its symbol rate and
injecting jamming signals with a bandwidth approximately
the same as the DSSS signals from unauthorized devices.
Assuming the spreading code length of unauthorized devices
is Gp and BPSK is used for modulation, according to [31],
we can estimate the BER of a DSSS-based unauthorized
device under ally jamming as

(cid:9)(cid:10)

P d
e

= Q

1

2Gp
+ JSR

SN R

(cid:11)

.

Figure 10 (b) shows the BER when SNR= −10dB. It
indicates that to disrupt the reception at an unauthorized
receiver, the jamming signal must overcome the processing
gain of spreading in DSSS. The result is consistent with the
situation when ally friendly jamming is not used.

3) FHSS-based Unauthorized Devices: To jam FHSS-
based unauthorized devices, the ally jammer needs to use
broadband jamming to make sure the jamming signals are
strong enough on all hopping channels. Assuming a fast
hopping system, the probability that the unauthorized device
=
fails to receive the transmission in one hop is Pek
2 exp(−
1
). According to [31], the BER of the

1

2(

1
+JSR)

SN R

183

FHSS communication under ally jamming is

LF(cid:2)

(cid:12)

(cid:13)

LF
k

= 1 −

P f
e

k=(cid:4) LF

2 (cid:5)+1

]LF −k(1 − Pek

)k,

[Pek

where LF is the number of hops per data bit.

Figure 10 (c) illustrates the jamming performance against
FHSS-based unauthorized devices. It is clear that when the
JSR increases, the BER of FHSS-based unauthorized devices
reaches 50% quickly and the communication is disabled.

C. JSR Trade-off

Maintaining authorized communication and disabling
unauthorized communication have different requirements for
JSR. JSR needs to be large to obtain effective jamming
against unauthorized communication, but at the same time,
JSR cannot be too large to affect authorized communication.
Assuming that the BER of authorized devices should be at
, and the BER of unauthorized devices should
most P a,u
to disable their communication. Based
be at
on the earlier analysis, we can conclude that in order to
maintain authorized communication and disable ordinary
unauthorized devices, the JSR should be in the following
range:

e
least P o,l

e

− 1

[(

2

−1(P o,l

),

1
1 − x

(

2

−1(P a,u

e

(Q

))2

− 1

)].

SN R

SN R

e ))2

(Q
For unauthorized devices using DSSS or FHSS, the jam-
ming performance also depends on their processing gains
besides JSR. When the processing gain is high enough,
the ally jammer may not ﬁnd a usable JSR to both allow
authorized communication and disable unauthorized ones.
However, authorized devices can also use anti-jamming
techniques such as DSSS and FHSS. As a result, the JSR
upper bound derived earlier can be signiﬁcantly increased to
allow effective jamming of unauthorized devices with anti-
jamming capabilities.

D. Limitations

Ally friendly jamming provides us a desirable capability:
disabling unauthorized wireless communication while still
maintaining authorized wireless communication. This paper
may be viewed as the ﬁrst step toward this goal. Several
problems remain open for future works.

Fast Identiﬁcation of Ally Jammers: Ally friendly
jamming uses pilot frequencies for fast
identiﬁcation of
ally jammers, which may introduce potential vulnerabilities.
The attacker can inject or replay pilot frequency signals to
mislead the authorized receiver’s synchronization process.
Therefore, a more robust fast identiﬁcation approach de-
serves further investigations.

Fast Synchronization: Shifting correlation based syn-
chronization used by the authorized receiver is expensive
in computation, and may have scalability issues, especially
when the sample size and/or the number of ally jammers are
large. Thus, a more computational efﬁcient synchronization
approach is desirable.

Ally Friendly Jamming with MIMO Devices: To make
ally friendly jamming suitable for MIMO devices, we need
to consider authorized/unauthorized MIMO devices (e.g.,
TX, RX) and MIMO ally jammers. One possible way of
extending the current approach to the MIMO ally jammer
case is: using a different key to generate jamming signals
on each of the transmit paths of a MIMO ally jammer,
and let the authorized receiver treat the MIMO ally jammer
as multiple ally jammers. More studies are required for
authorized/unauthorized MIMO devices cases.

Handing Adversarial Jamming: Authorized devices can
use the anti-jamming techniques (e.g., DSSS and FHSS)
to suppress the adversarial jamming signals after removing
the ally jamming signals, which calls for efforts on the
integration of ally friendly jamming and the anti-jamming
techniques.

VI. IMPLEMENTATION AND EVALUATION

We have implemented an “off-line processing” based
prototype based on GNURadio and USRP. In the following
of this section, we will give the implementation details and
the corresponding evaluation results.

A. Experiment Setup

The prototype system consists of two ally jammers AJ1
and AJ2, a transmitter, and a receiver. Each of them is imple-
mented by a USRP N210 board connected to a laptop. Each
USRP N210 uses a XCVR2450 daughter board operating in
the 2.4GHz range as the RF front end. The receiver acts as
an authorized device by using the techniques in ally friendly
jamming to synchronize and remove the ally jamming sig-
nals, and as an unauthorized device by directly demodulating
the received signals. Our prototype implementation uses
both GNURadio and MATLAB for signal processing. The
USRP N210 uses a 2.5 PPM [3] temperature-compensated

184

crystal oscillator (TCXO) as its frequency reference [4], the
frequency drift is within [−6KHz, +6KHz] (2.4GHz ·2.5
PPM= 6KHz). Therefore, the maximum frequency offset
fmax = 12KHz, and the pilot frequencies for AJ1 and AJ2
are 12KHz and 36KHz, respectively.

The experiments contain three steps as described below.
First, we use a PRNG with two different keys to generate
the random ﬂoating point numbers with precision of 0.1
and uniformly distributed within [−1, 1], which are then
used to form the ally jamming symbols for AJ1 and AJ2
respectively.

Second, we keep the transmitter silent, turn on the receiver
and let two ally jammers emit the ally jamming symbols
simultaneously with the same transmit power. Ally jammers
are about 2 meters away from the receiver. The ally jammer’s
symbol rate is 5×105 sps (symbols per second). The receiver
samples the channel at 106 sps and dumps the received
samples in a ﬁle for the subsequent off-line processing. The
samples collected in this step will be referred to as the TX
Off Samples.

Third, we start the transmitter, which uses DBPSK mod-
ulation and sends packets with the length of 1, 500 bytes
at a data rate of 500kb/s. The interval between packets
is 15ms. Ally jammers and the transmitter are about 2
meters away from the receiver and they all use the default
transmit power with the same transmit gain. Ally jammers
are still jamming the channel and the receiver still records
the received samples in a ﬁle. The collected samples are
termed as the TX On Samples.

B. Evaluation Methodology

The experimental evaluation consists of two parts: micro-
evaluation and macro-evaluation. In micro-evaluation, we
evaluate the performance of critical techniques used in ally
friendly jamming. In macro-evaluation, we compare the
bit error rates and packet
loss rates for authorized and
unauthorized devices under ally friendly jamming, including
the case where unauthorized devices use DSSS for anti-
jamming communication.

C. Micro-Evaluation

1) Synchronization: The authorized receiver does spec-
trum analysis on the TX Off Samples using FFT. Figure 11
shows the result on frequency domain when 10000 samples
is used for FFT, from which we can clearly see that
there is a spike at 7.9KHz, and another one at 32.7KHz.
As 7.9KHz is within [0, 24KHz) and 32.7KHz is within
[24KHz, 48kHz), the authorized receiver knows that AJ1
and AJ2 are jamming the channel.

After identifying ally jammers, the authorized receiver
computes their frequency offsets, compensates for the fre-
quency offsets on the locally generated symbols and cor-
relates with the received jamming signals to synchronize
with both AJ1 and AJ2. As shown in Figure 12, there is a

500

400

300

200

100

e
d
u
t
i
n
g
a
M
T
F
F

 

0

0

40

30

20

10

0

0

80

60

40

20

0

0

100

200

300

Frequency (100Hz)

400

500

Figure 11.

Identifying ally friend jammers.

0.5

1

1.5

2

2.5

Correlation Position
(a) Sync With AJ1

0.5

1

1.5

2

2.5

Correlation Position
(b) Sync With AJ2

3
x 104

3
x 104

l

e
u
a
V
n
o

 

i
t

l

a
e
r
r
o
C

l

e
u
a
V
 
n
o
i
t
a
e
r
r
o
C

l

Figure 12.
length is 1000 samples.

Synchronizing with multiple ally jammers. The correlation

correlation peak for AJ1 at position 3190, which means that
the timing offset between AJ1 and the authorized receiver is
3190· Tp, where Tp is the sampling interval. The authorized
receiver can use this offset to synchronize with the ally
jammer AJ1. Similarly, there is another correlation peak for
AJ2 at position 22459. The authorized receiver can use the
same process to synchronize with AJ2.

We repeat

this experiment 1,000 times with different
samples. By using the correlation peak position as the
indicator of timing offset, the success rate of synchronization
is 100%. We also measure the time required for initial
synchronization. It takes about 3 seconds for correlating
106 samples with a correlation length of 103 samples. After
the initial synchronization, the re-synchronization takes less
than 1 ms. Note that
timing experiments are conducted
on a laptop with an i7-2760QM CPU. The required time
will be shorter on a dedicated radio chip. All of these
experiments demonstrate that the authorized receiver can
accurately synchronize with ally jammers.

2) Detecting Transmissions under Ally Jamming: In this
experiment, we examine how well the authorized transmis-
sion can be detected under ally jamming by using the TX
On Samples. Since the packet length is 1500 bytes and the
rate is 500kb/s, the packet transmission time is 24 ms. We
set the re-synchronization interval as 10 ms. We adjust the
transmit and receive gains such that the JSR is 5dB, 10dB,
and 15dB, respectively, which are in the JSR trade-off range
shown in Section V-C. Then we examine the true positive

and false positive rates of transmission detection for different
thresholds on the standard deviation of the estimated channel
coefﬁcients. Figure 13 shows the result of the experiment. It
is easy to see that there is a range of threshold values that
allow the transmissions to be detected almost 100% with
close-to-0 false positive rate. In other words, the detection
of transmissions under ally jamming can be performed very
precisely.

1

0.8

0.6

0.4

0.2

 

o

i
t

a
R

0

 
0

0.01

0.02

0.03

0.04

0.05
Threshold value

0.06

0.07

 

TP JSR = 5dB
TP JSR = 10dB
TP JSR = 15dB
FP

0.08

0.09

0.1

Figure 13. Transmission detection rate. FP is the false positive rate, TP
is the true positive rate.

In our experiment,

3) Removal of Ally Jamming Signals: We want to know
how well the authorized device can estimate and remove
ally jamming signals when only ally jamming signals are
received. We use the TX Off Samples collected when one and
two ally jammers are on, respectively. After synchronization,
we use the ﬁrst 1000 samples to estimate the channel(s),
predict the ally jamming signals in the following received
samples, and then subtract
them out from the received
samples to check how much ally jamming power remains.
the percentage of jamming power
removed by the authorized receiver depends on how many
ally jamming samples we need to the estimate. Intuitively, as
channel changes over time, if we apply the same estimated
channel coefﬁcients to estimate too many samples,
the
quality of estimation will degrade, and less jamming power
will be removed. Figure 14 shows that the authorized device
can remove 99.2% to 99.6% ally jamming power when the
length of the estimated samples increases from 1, 000 to
14, 000. In other words, the vast majority of the ally jamming
signal power can be effectively removed.

)

%

(
 
d
e
v
o
m
e
R

 

 
r
e
w
o
P
g
n
m
m
a
J

i

100

99.8

99.6

99.4

99.2

99

 

 

Single Ally Jammer
Two Ally Jammers

2000

4000

6000
Estimated Sample Length

8000

10000

12000

14000

Figure 14. Removal of ally jamming signals.

D. Macro-Evaluation

The TX On Samples are used here. We adjust the trans-
mitter’s gain and ally jammers’ gains to achieve different

185

JSRs. The authorized receiver ﬁrst detects the transmissions,
recovers the transmitted signals, and then streams them
into the demodulation blocks. In contrast, the unauthorized
receiver demodulates the received samples directly.

)

%

(
 

t

e
a
R

 
r
o
r
r

E

 
t
i

B

50

40

30

20

10

0

 
0

)

%

(
 
e

t

a
R
 
s
s
o
L

 

e
g
a
k
c
a
P

100

80

60

40

20

0

 
0

 

Unauthorized Device
Authorized Device

2

4

6

8

10

12

14

16

18

20

JSR (dB)

(a) Bit Error Rate

 

Unauthorized Device
Authorized Device

2

4

6

8

10

12

14

16

18

20

JSR (dB)

(b) Packet Loss Rate

Figure 15. Macro-evaluation.

Figure 15 (a) shows the BER for both authorized and
unauthorized devices.
It can be seen that as the JSR
increases, the BER of the unauthorized receiver quickly
increases to about 50%, a value achievable with random
guesses. In contrast, with the ally jamming signals removal
techniques, the authorized receiver can maintain close to 0
BER until the JSR exceeds 17dB. We use the GNURadio
benchmark receiver to evaluate the overall packet loss rate.
Figure 15 (b) shows the packet loss rates for both authorized
and unauthorized receivers. Again, when the JSR increases,
the packet loss rate at the unauthorized receiver quickly
reaches 100%, while the packet loss rate at the authorized
one remains close to 0 until the JSR reaches 16 dB. Unau-
thorized devices can certainly try to use Error Correction
Code (ECC) to tolerate errors. However, with close to 50%
BER, it is unlikely to reduce the packet loss rate much.

We also perform some preliminary evaluation of ally
friendly jamming against unauthorized devices that are
equipped with DSSS-based anti-jamming capability. In this
experiment, we use IEEE 802.11b protocol running at 1
Mbps on unauthorized devices, which uses DSSS with an
11-bit barker code for spreading and despreading [29].
More speciﬁcally, we use two laptops with 802.11b wire-
less adapters operating at the DSSS mode as unauthorized
devices. We use another laptop connected to a USRP N210
board as the ally jammer. All these three devices are about
2 meters away from each other. We set the USRP using
2.452GHz frequency and the 802.11b wireless adapters
using the same frequency (i.e., channel 9). We adjust the
ally jammer’s gain to make sure it has the same transmit
power with the 802.11b transmitter. We test the packet loss
rate at the 802.11b receiver side when different jamming
symbol rates are used. (Note that higher symbol rates will

186

802.11b 1Mbps

100

100

100

100

100

 120

 100

 80

 60

 40

 20

)

%

(
 
e
t
a
R
 
s
s
o
L

 
t
e
k
c
a
P

66

21

12

 0

 0

0

0
 100  200  300  400  500  600  700  800  900  1000  1100

Symbol Rate of Ally Jammer (ksps)

Figure 16.

Jamming DSSS devices (ksps: kilo symbols per second).

cover wider spectrum.) Figure 16 shows that when the
symbol rate for the ally jammer is more than 600ksps,
the communication between these 802.11b DSSS devices
is disabled.

Note that though 802.11b DSSS mode is designed for
wireless communication under interference, it is not intended
as a strong anti-jamming solution. More in-depth evalu-
ation is necessary to understand the performance of ally
friendly jamming against powerful anti-jamming communi-
cation schemes.

VII. RELATED WORK

IMD Shield [12] is the most closely related work to ours.
As discussed in the introduction, IMD Shield cannot achieve
ally friendly jamming. We do not repeat it here.

Our work in this paper is in general related to research on
interference cancellation and suppression. Zigzag recursively
applies interference cancellation to get the interference free
signals from colliding ones [13]. Another Interference Align-
ment and Cancellation (IAC) technique was proposed to
enable collaborative Access Points (APs) in MIMO LANs
to decode more packets by controlling transmitted signals
with proper vectors [14]. 802.11n+ was proposed to use
“antidote” signals to nullify the transmitted signals from
other nodes in order to enable multiple access to wireless
channels [19]. An implementation of successive interference
cancellation (SIC) for ZigBee on software radios was pre-
sented in [15] which can decode concurrently transmitted
packets. Moreover, SAM [41] provides a chain-decoding
technique to decode concurrent frames. All these techniques
assume regular modulated signals are transmitted and per-
form interference cancellation accordingly. Unfortunately,
when the ally jamming signals mimic random noises, none
of them can be used due to the challenges in synchronization
and channel estimation. Our proposed techniques have ad-
dressed these issues and advanced interference cancellation
techniques to the next level.

Ally friendly jamming is also related to wireless jamming
and anti-jamming research. For friendly jamming studies,
Sankararaman et al. studied strategies of allocating friendly

jammers to create wireless barriers which can prevent the
eavesdropping [36]. There are also other literature (e.g., [27],
[35], [44]) using friendly jamming to block the responses or
unauthorized queries to protect particular wireless devices.
For jamming and anti-jamming techniques, jamming attack
models and several ways to detect jamming attacks have
been studied in [45]. Game theoretical models have been
developed for jamming and jamming defense [37], [46].
Spread spectrum techniques such as DSSS and FHSS have
been traditionally used for anti-jamming wireless commu-
nication. In recent years, researchers have identiﬁed some
weaknesses of such schemes due to shared keys and devel-
oped enhanced schemes, including Uncoordinated FHSS and
its variations (e.g., [20], [38]–[40]), Uncoordinated DSSS
and its variations (e.g., [21], [24], [32], [33]), and novel
coding techniques (e.g., [5], [42]). Several ﬁlter designing
jamming mitigation techniques have also been proposed [8],
[9]. All these works are complementary to our results in this
paper.

VIII. CONCLUSION

In this paper, we presented ally friendly jamming, a mech-
anism that jams unauthorized wireless communication and
maintains legitimate communication at the same time. Ally
friendly jamming is achieved by properly controlling the ally
jamming signals using secret keys shared among authorized
devices and the ally jammers. We have analyzed the prop-
erties of ally friendly jamming, implemented a prototype
system, and performed a series of experimental evaluation.
Our results demonstrated that the proposed techniques can
effectively disable unauthorized wireless communication and
at the same time allow wireless communication between
authorized devices.

Our future work includes enhancing the robustness of the
ally friendly jamming technique, investigating its capability
against unauthorized anti-jamming devices and defending
against adversarial jamming attacks.

ACKNOWLEDGMENT

The authors would like to thank our shepherd, Sr ¯dan
ˇCapkun, and the anonymous reviewers for their insightful
comments. We also thank Yao Liu, Chengzhi Li, Huazi
Zhang, Yajin Zhou, Entong Shen, Ruowen Wang, Jason
Gionta, Xianqing Yu, Quan Chen and Syed Hussain for
helpful discussions. This work was supported in part by the
US National Science Foundation (NSF) under Grants CNS-
1016260 and ECCS-1002258. The opinions and conclusions
in this paper are those of the authors and do not necessarily
reﬂect the views of the NSF.

REFERENCES

[1] GNU Radio - The GNU Software Radio. http://gnuradio.org/

redmine/projects/gnuradio/wiki.

[2] Improvised explosive device - wikipedia. http://en.wikipedia.

org/wiki/Improvised_explosive_device.

[3] PPM. http://en.wikipedia.org/wiki/Parts_per_million.

[4] USRP N210 Datasheet. https://www.ettus.com/content/ﬁles/

07495_Ettus_N200-210_DS_Flyer_HR_1.pdf.

[5] L. C. Baird, W. L. Bahn, M. D. Collins, M. C. Carlisle, and
In IEEE Information

S. C. Butler. Keyless jam resistance.
Assurance and Security Workshop, 2007.

[6] L. Buttyan, D. Gessner, A. Hessler, and P. Langendoerfer.
Application of wireless sensor networks in critical infrastruc-
ture protection: challenges and design options. IEEE Wireless
Communications, 17(5), 2010.

[7] H. Chan, A. Perrig, and D. Song. Random key predistribution
schemes for sensor networks. In IEEE Symposium on Security
and Privacy, 2003.

[8] B. DeBruhl and P. Tague. Digital ﬁlter design for jamming

mitigation in 802.15.4 communication. In ICCCN, 2011.

[9] B. DeBruhl and P. Tague. Mitigation of periodic jamming
in a spread spectrum system by adaptive ﬁlter selection. In
PECCS, 2012.

[10] M. Erol-Kantarci and H.T. Mouftah. Wireless multimedia
sensor and actor networks for the next generation power grid.
Ad Hoc Networks, 2011.

[11] A. Goldsmith. Wireless communications. Cambridge Univer-

sity Press, 2005.

[12] S. Gollakota, H. Hassanieh, B. Ransford, D. Katabi, and
K. Fu. They can hear your heartbeats: non-invasive security
for implantable medical devices. In SIGCOMM, 2011.

[13] S. Gollakota and D. Katabi. Zigzag decoding: Combating
hidden terminals in wireless networks. In SIGCOMM, 2008.

[14] S. Gollakota, S.D. Perli, and D. Katabi. Interference align-

ment and cancellation. In SIGCOMM, 2009.

[15] D. Halperin, T. Anderson, and D. Wetherall. Taking the sting
out of carrier sense: interference cancellation for wireless
LANs. In MobiCom, 2008.

[16] S.S. Haykin. Digital communications, volume 5. Wiley, 1988.

[17] Y. Kim, A. Perrig, and G. Tsudik. Simple and fault-tolerant
In CCS,

key agreement for dynamic collaborative groups.
2000.

[18] B. Latre, B. Braem, I. Moerman, C. Blondia, and P. De-
meester. A survey on wireless body area networks. Wireless
Networks, 17(1), 2011.

[19] K.C. Lin, S. Gollakota, and D. Katabi. Random access

heterogeneous MIMO networks. In SIGCOMM, 2011.

[20] A. Liu, P. Ning, H. Dai, and Y. Liu. USD-FH: Jamming-
resistant wireless communication using frequency hopping
with uncoordinated seed disclosure. In MASS, 2010.

187

[21] A. Liu, P. Ning, H. Dai, Y. Liu, and C. Wang. Defending
DSSS-based broadcast communication against insider jam-
mers via delayed seed-disclosure. In ACSAC, 2010.

[38] D. Slater, P. Tague, R. Poovendran, and B. Matt. A coding-
theoretic approach for efﬁcient message veriﬁcation over
insecure channels. In WiSec, 2009.

[22] D. Liu, P. Ning, and R. Li. Establishing pairwise keys in dis-
tributed sensor networks. ACM Transactions on Information
and System Security, 2005.

[39] M. Strasser, C. Pöper, S. ˇCapkun, and M. ˇCagalj. Jamming-
resistant key establishment using uncoordinated frequency
hopping. In IEEE Symposium on Security and Privacy, 2008.

[23] D. Liu, P. Ning, and K. Sun. Efﬁcient self-healing group key

distribution with revocation capability. In CCS, 2003.

[24] Y. Liu, P. Ning, H. Dai, and A. Liu. Randomized differential
DSSS: Jamming-resistant wireless broadcast communication.
In INFOCOM, 2010.

[25] Ettus Research LLC. The USRP Product Family Products

and Daughter Boards. http://www.ettus.com/products.

[26] R.G. Lyons. Understanding digital signal processing. Pren-

tice Hall, 2011.

[27] I. Martinovic, P. Pichota, and J. B Schmitt. Jamming for good:
In

a fresh approach to authentic communication in WSNs.
WiSec, 2009.

[40] M. Strasser, C. Pöpper, and S. ˇCapkun. Efﬁcient uncoor-
In MobiHoc,

dinated FHSS anti-jamming communication.
2009.

[41] K. Tan, H. Liu, J. Fang, W. Wang, J. S. Zhang, M. Chen, and
G. M. Voelker. SAM: Enabling practical spatical multiple
access in wireless LAN. In MobiCom, 2009.

[42] D. Willkomm, J. Gross, and A. Wolisz.

Reliable link
maintenance in cognitive radio systems. In DySPAN, 2005.

[43] C. K. Wong, M. G. Gouda, and S. S. Lam. Secure group

communications using key graphs. In SIGCOMM, 1998.

[44] F. Xu, Z. Qin, C. C Tan, B. Wang, and Q. Li. IMDGuard:
Securing implantable medical devices with the external wear-
able guardian. In INFOCOM, 2011.

[28] H. Meyr, M. Moeneclaey, and S.A. Fechtel. Digital commu-
nication receivers : synchronization, channel estimation, and
signal processing. John Wiley & Sons, 1998.

[45] W. Xu, W. Trappe, Y. Zhang, and T. Wood. The feasibil-
ity of launching and detecting jamming attacks in wireless
networks. In MobiHoc, 2005.

[46] Q. Zhu, H. Li, Z. Han, and T. Basar. A stochastic game
model for jamming in multi-channel cognitive radio systems.
In ICC, 2010.

[29] K. Pahlavan and P. Krishnamurthy. Principles of wireless

networks. Prentice Hall, 2001.

[30] A. Perrig, D. Song, and J.D. Tygar. ELK, a new protocol for
efﬁcient large-group key distribution. In IEEE Symposium on
Security and Privacy, 2001.

[31] R. Poisel. Modern Communications Jamming Principles and

Techniques. Artech House Publishers, 2006.

[32] C. Pöpper, M. Strasser, and S. ˇCapkun. Jamming-resistant
In USENIX

broadcast communication without shared keys.
Security Symposium, 2009.

[33] C. Pöpper, M. Strasser, and S. ˇCapkun. Anti-jamming broad-
cast communication using uncoordinated spread spectrum
techniques. JSAC, 2010.

[34] J.G. Proakis and M. Salehi.

McGraw-hill, 2008.

Digital communications.

[35] M. Rieback, B. Crispo, and A. Tanenbaum. RFID guardian: A
battery-powered mobile device for rﬁd privacy management.
In Information Security and Privacy. Springer, 2005.

[36] S. Sankararaman, K. Abu-Affash, A. Efrat, S. D. Eriksson-
Bique, V. Polishchuk, S. Ramasubramanian, and M. Segal.
Optimization schemes for protective jamming. In MobiHoc,
2012.

[37] D. Slater, P. Tague, R. Poovendran, and M. Li. A game-
theoretic framework for jamming attacks and mitigation
in commercial aircraft wireless networks.
In AIAA In-
fotech@Aerospace Conference, 2009.

188

