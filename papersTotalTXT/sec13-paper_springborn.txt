Impression Fraud in On-line Advertising 

via Pay-Per-View Networks
Kevin Springborn, Broadcast Interactive Media;  

Paul Barford, Broadcast Interactive Media and University of Wisconsin—Madison

Open access to the Proceedings of the 22nd USENIX Security Symposium is sponsored by USENIXThis paper is included in the Proceedings of the 22nd USENIX Security Symposium.August 14–16, 2013 • Washington, D.C., USAISBN 978-1-931971-03-4Impression Fraud in Online Advertising via Pay-Per-View

Networks

Kevin Springborn

Broadcast Interactive Media

kspringborn@bimlocal.com

Paul Barford

Broadcast Interactive Media

University of Wisconsin-Madison

pbarford@bimlocal.com

ABSTRACT
Advertising is one of the primary means for revenue gener-
ation for millions of websites and mobile apps. While the
majority of online advertising revenues are based on pay-
per-click, alternative forms such as impression-based dis-
play and video advertising have been growing rapidly over
the past several years. In this paper, we investigate the prob-
lem of invalid trafﬁc generation that aims to inﬂate adver-
tising impressions on websites. Our study begins with an
analysis of purchased trafﬁc for a set of honeypot websites.
Data collected from these sites provides a window into the
basic mechanisms used for impression fraud and in partic-
ular enables us to identify pay-per-view (PPV) networks.
PPV networks are comprised of legitimate websites that use
JavaScript provided by PPV network service providers to
render unwanted web pages "underneath" requested content
on a real user’s browser so that additional advertising im-
pressions are registered. We describe the characteristics of
the PPV network ecosystem and the typical methods for de-
livering fraudulent impressions. We also provide a case study
of scope of PPV networks in the Internet. Our results show
that these networks deliver hundreds of millions of fraudu-
lent impressions per day, resulting in hundreds of millions
of lost advertising dollars annually. Characteristics unique
to trafﬁc delivered via PPV networks are also discussed. We
conclude with recommendations for countermeasures that
can reduce the scope and impact of PPV networks.

1.

INTRODUCTION

Advertising is one of the primary methods for generating
revenues from websites and mobile apps. A recent report
from the Internet Advertising Bureau (IAB) places ad rev-
enues in the US for the ﬁrst half of 2012 at $17B, which rep-
resents a 14% increase over the previous year [15]. While
the majority of that revenue is search-based, ad words ad-
vertising, display and video advertising have been growing.
Indeed, a recent report places display and video advertis-
ing in the US at $12.7B for FY2012, growing at 17% annu-
ally [27]. At a high level the basic notion of selling space on
web pages and apps for advertising is simple. However, the
mechanisms and infrastructure that are required for online
advertising are highly diverse and complex.

The online ad ecosystem can roughly be divided into three
groups: advertisers, publishers and intermediaries. Adver-
tisers pay publishers to place a speciﬁed volume of creative
content with embedded links (i.e., text, display or video ads)
on websites and apps. Intermediaries (e.g., ad servers and ad
exchanges) are often used to facilitate connections between
publishers and advertisers. Intermediaries typically place a
surcharge on the fees paid by advertisers to publishers for ad
placements and/or ad clicks. What is immediately obvious
from this simple description is that publisher and intermedi-
ary platform revenues are directly tied to the number of daily
visits to a website or app. Thus, there are strong incentives
for publishers and intermediaries to use any means available
to drive user trafﬁc to publisher sites.

There are certainly legitimate methods for trafﬁc gener-
ation for publisher sites. The most widely used are the
text-based ad words that appear in search results e.g., from
Google or Bing. However, it can be quite difﬁcult and ex-
pensive to drive large trafﬁc volumes to target sites using
ad words alone.1 Thus, other methods for trafﬁc genera-
tion have emerged, many of which are deeded as fraudulent
by advertisers and intermediaries. Google deﬁnes invalid
(fraudulent) trafﬁc as follows:2

Invalid trafﬁc includes both clicks and impres-
sions that Google suspects to not be the result
of genuine user interest [21].

Standard methods for generating invalid trafﬁc includes (i)
using employees at publisher companies to view sites and
click on ads, (ii) hiring 3rd parties to view sites and click
on ads, (iii) click/view pyramid schemes and (iv) using soft-
ware and/or botnets to automate views/clicks [21]. The chal-
lenges for advertisers and intermediaries focused on offering
trustworthy platforms are to understand these and potentially
other threats so that effective countermeasures can be de-
ployed.

In this paper, we investigate a relatively new threat for dis-
play and video advertising called Pay-Per-View (PPV) net-
1This has led to the emergence of a large number of Search Engine
Optimization companies in recent years.
2While Google is not the only company in this domain, we refer to
them as an authoritative source of information due to their size and
experience in online advertising.

USENIX Association  

22nd USENIX Security Symposium  211

1

works. The basic idea for PPV networks is to pay legitimate
publishers to run specialized JavaScript when users access
their sites that will display other publishers websites in a
camouﬂaged fashion. This will result in impressions and po-
tentially even clicks that are registered on the camouﬂaged
pages without "genuine user interest" i.e., invalid trafﬁc gen-
eration. Legitimate publishers view this as another way to
monetize their sites without impact to their users. PPV net-
works sell their trafﬁc generation capability by touting real
and unique users, geolocation and context speciﬁcity among
other things. The fact that pages are appearing on real users’
systems makes detecting and preventing PPV trafﬁc genera-
tion challenging.

To study PPV networks, we employ a small set of honey-
pot websites that we use as the target for trafﬁc generation.
These sites were constructed to include what appears to be
legitimate content and advertising. We then use search to
identify a wide variety of trafﬁc generation offerings on the
Internet. We purchased impressions for our honeypot sites in
various quantities from a selection of different trafﬁc gener-
ation services over the course of a 3.5 month period. By en-
gaging with trafﬁc generation services directly, we were able
to uncover the basic mechanisms of PPV networks and ini-
tiate additional measurements to characterize their deploy-
ments.

The characteristics of the trafﬁc purchased for our honey-
pot sites is dictated at a high level by the service offerings,
which enable volume, time frame and geographic location,
etc. of users to be speciﬁed. Our results show that impres-
sions are typically spread in a somewhat bursty fashion over
the speciﬁed time frame and that user characteristics are well
matched with speciﬁcations. By considering the referer ﬁeld
of the incoming trafﬁc, we were able to identify the fact that
our honeypot sites were being loaded into a frame (along
with as many as ten other sites) for display on remote sys-
tems. By considering names of a small selection of traf-
ﬁc generation services, we use a recent, publicly-available,
Internet-wide web crawl to identify the scope of PPV net-
works. We ﬁnd tags from these services are, in fact, widely
deployed – on tens of thousands of sites. By appealing to
MuStat [29], we conservatively estimate the number of in-
valid impressions that are generated from this small set of
PPV networks to be on the order of 500 million per day. As-
suming a modest quality level for sites that are part of PPV
networks, we estimate the annual cost to advertisers for this
invalid trafﬁc to be on the order of $180 million annually.

Finally, we offer three different methods to defend against
PPV networks. First, observing viewport dimensions of ad
requests can determine if the end user can possibly view the
advertisement. In an effort to increase trafﬁc, PPV networks
commonly display destinations in zero sized frames. Sec-
ond, blacklists of websites that participate in PPV networks
can potentially be used. The idea is to block advertising on
websites that commonly receive PPV trafﬁc until the pub-
lisher discontinues purchasing PPV trafﬁc. Such blacklists

can be compiled through programmatic enumeration of PPV
destinations. Finally, referer ﬁelds can be queried at the time
of advertisement load in order to identify trafﬁc originating
from known PPV domains.

The remainder of this paper is organized as follows. In
Section 2 we provide a description of the online advertis-
ing ecosystem and an overview of invalid trafﬁc generation
threats.
In Section 3, we describe the details of our hon-
eypot websites and our trafﬁc purchases for these sites. In
Section 4, we describe the details of the evaluations that we
conduct on our data including analyses of additional data
sets and measurements that enable us to project some of the
broader characteristics of PPV networks. We provide rec-
ommendations for counter measures that can be employed
to reduce the impact of PPV networks in Section 5. We dis-
cuss prior studies that inform our work in Section 6. We
summarize, conclude and discuss future work in Section 7.

2. ONLINE ADVERTISING ECOSYSTEM
In this section we provide an overview of the online adver-
tising ecosystem including both the business framework and
technical framework for delivering advertisements to pub-
lisher websites and apps. Some prior studies have provided
similar overviews including [16, 34, 41]. We also provide an
overview of invalid trafﬁc generation threats and the chal-
lenges they pose in the ecosystem.
2.1 Business Framework

As mentioned in Section 1, there are three main partici-
pant groups in ad networks: advertisers, intermediaries and
publishers. As shown in Figure 1 there are two other im-
portant groups: brands and users. Brands pay advertisers
to help them sell their products and services. Internet-based
campaigns are attractive to brands and advertisers since con-
sumers/users spend a growing proportion of their time on-
line. An important appeal of online advertising (especially
for consumer goods) is that it offers the opportunity to tie
ad campaigns and associated costs directly to sales e.g., by
tracking clicks from online ads to purchases on a brand’s
ecommerce site.

Advertisers are companies that create and manage adver-
tising campaigns for brands. Advertisers pay publishers to
make ad placements on websites and apps using one of sev-
eral different models. One is the widely used Pay-Per-Click
(PPC) model, where an advertiser only pays a publisher for
an ad when a user clicks on it. PPC campaigns are typically
associated with ad words (short, text-based ads) campaigns.
An alternative payment method that is common in display
and video advertising is Cost Per Mille/Thousand (CPM),
where advertisers pay publishers whenever users view an
ad (CPM prices are given per thousand impressions). The
CPM-based payment model is the primary focus for this pa-
per. The goal for advertisers is to place ads on sites that
they believe attract a brand’s target demographic in a cost-
effective fashion. Thus, their challenge is in identifying these

212  22nd USENIX Security Symposium 

2

USENIX Association

Figure 1: Key participants in the online advertising
ecosystem. Payments ﬂow from brands to advertisers to
intermediaries and publishers.

sites and facilitating ad placement.

In addition to working with publishers directly, advertisers
often work with intermediaries in order to actually place ads
on websites and apps. The two main reasons for this are the
complexity of Internet advertising’s technical landscape (see
below) and the enormous and growing diversity of websites
and apps. Among other things, intermediaries offer "one-
stop shopping" for advertisers, and competitive CPM rates to
publishers who may not be able to ﬁll all of their placements
via direct campaigns.

The scope of intermediaries is quite broad. The most com-
mon offerings include targeting services, ad servers and ad
exchanges to facilitate placements. One of the most widely
used intermediaries in the display advertising space is Google
AdExchange (AdX) [20,30]. The revenue model that is most
commonly used by intermediaries is to take a small CPM
payment for each ad that they participate in serving and then
to pass the remainder of the CPM paid by the advertiser to
the publisher.

Internet publishers are companies that create content that
is of interest to users. Publishers display ads on their pages
using standard sized creatives that typically appear in an
iframe. A publisher’s goal is to maximize their revenue yield
by attracting (i) premium advertisers that pay high CPM’s
and (ii) a high volume of users, some whom will click through
on ads. It is important to note that while ad words-based ad-
vertising (e.g., through AdSense) is widely available, display
and video ads are typically only available to sites that have
somewhat higher volumes of users.
2.2 Technical Framework

Displaying an advertisement on a publisher’s page includes
potentially a large number of data exchanges between par-
ticipants in the advertising ecosystem. A simple example is
depicted in Figure 2. The process begins with the placement
of an ad tag in a section of a publisher page. Ad tags (of-
ten supplied by intermediaries that manage ad servers) are
simple HREF strings that typically reference JavaScript code

Figure 2: Typical data exchanges required to render an
ad in a user’s browser. (1) User request to publisher page.
(2) Base page delivered. (3) Ad tag request to CDN. (4)
JavaScript delivered. (5) Update to JavaScript in CDN
if necessary. (6) Request to ad server. (7) Redirected re-
quest delivered. (8) Request to exchange or 3rd party ad
server. (9) Ad creative delivered.

hosted in a CDN infrastructure.

The JavaScript typically gathers context keywords and other

information from the publisher page or user browser and
then sends an ad request to the target ad server infrastruc-
ture. Ad servers process the ad request and either respond
with an ad directly (e.g., from a direct advertiser campaign)
or send a redirect to a third party such as an ad exchange.
The redirect is forwarded by browser to the target server or
exchange, which will respond with an ad that is rendered in
the browser. The redirect usually includes sufﬁcient infor-
mation for ad targeting and billing. This entire process must
take place quickly (typically on the order of tens of millisec-
onds) in order to ensure a good user experience. When the
ad is delivered, an impression is registered for the ad serv-
ing entity. Click tracking is typically managed by directing
clicks to the ad server, which then redirects to the advertiser.

2.3

Invalid Trafﬁc Generation Threats

Impression-based advertising has a number of potential
threats. The focus of this paper is on trafﬁc generation that
causes invalid impression and thereby inﬂates publisher and
(some) intermediary revenues. Speciﬁcally, we focus on in-
valid trafﬁc generation via PPV networks, which we describe
in detail in Section 4.

Valid methods for trafﬁc generation include search and ad
words-based advertising. However, web search reveals that
there is a wide variety of other trafﬁc generation offerings
available. Many offer a speciﬁed volume of trafﬁc at a target
site over a speciﬁed time period. Many also include guaran-
tees of speciﬁc features in the trafﬁc such as geographic lo-
cations of host systems. Most do not describe their method-

USENIX Association  

3

22nd USENIX Security Symposium  213

ology in detail if at all. One of the important objectives of
trafﬁc generation is that it appear to come from real users.
Appealing to the deﬁnition of invalid trafﬁc given in Sec-
tion 1 above, there are many ways in which such trafﬁc might
be generated.

Common methods for invalid trafﬁc generation have been
borrowed directly from click generation services that have
been offered for some time. Examples include hiring peo-
ple to view pages, bots of various types, and using expired
domains to divert users to 3rd-party pages.

PPV networks are sites that load 3rd-party pages in an
obfuscated fashion when accessed by users. Publishers be-
come part of a PPV network simply by placing a tag on their
site that looks very much like a standard ad tag. We deﬁne
a "network" as a series of sites that run tags from the same
PPV service. Participating publishers are paid on a CPM ba-
sis for something that appears to be low or no impact on their
site.

Since the third party pages that are rendered via PPV net-
works are clearly not the interest of the users, all of the re-
sulting impressions are invalid. Beyond laking the intent
necessary to qualify as valid trafﬁc, we show that PPV net-
work trafﬁc has characteristics unlike organic trafﬁc. For ex-
ample, natural trafﬁc displays a diurnal trafﬁc pattern, while
the PPV trafﬁc we observed often showed highly artiﬁcial
delivery patterns.

3. DATA COLLECTION ON HONEYPOT

WEBSITES

To begin our investigation of trafﬁc generation and im-
pression fraud we established a set of honeypot websites.
We then purchased trafﬁc from a number of different ser-
vices and captured a diverse set of data from the resulting
hits on our sites. In this section we provide details on our
honeypot websites and trafﬁc purchases. The results of these
activities are described in detail in Section 4.
3.1 Honeypot Websites

We created three websites as the starting point for our in-
vestigation of trafﬁc generation service providers. The sites
differed only in styling, formatting, and deployment. The
content on each site was identical. The reason for creating
three different sites was to enable us to conduct A-B com-
parisons between different trafﬁc generation services.

The design objective for our honeypots was to create sites
that looked relatively "legitimate". To that end, they have a
standard layout, content changes regularly and the deploy-
ment is standard. A second objective was that the sites were
instrumented to gather as much data as possible on arriving
trafﬁc.

Each site consisted of a base landing page and four sub-
pages. Three of the pages displayed RSS content from the
news feeds of topwirenews.com or espn.com. One page
listed links to popular news sites. The ﬁnal page was a non-
functional search result. Every page contained four adver-

Figure 3: Screenshot of one of the honeypot websites that
was a target for trafﬁc generation purchases.

tisement placements, identical to standard CPM placements
except they contained dummy creatives instead of displaying
paying advertisers’ placements. All of the ads have embed-
ded links to dummy landing pages that we also monitor.

Domain names were registered for each site with GoDaddy
using their anonymous registration option. We attempted to
give the sites names that sounded interesting and connoted
the news-related content of the sites. The sites were cre-
ated using dotCMS inside Amazon EC2. Amazon’s Cloud-
Front CDN was enabled for the sites in order to handle larger
bursts of trafﬁc. We used a "noindex, nofollow" meta tag and
a robots.txt ﬁle to attempt to prevent inclusion in search en-
gine results.

Instrumentation was facilitated in several ways. Google
Analytics tags were deployed on all pages for general mon-
itoring. Logs from the serving infrastructure were used to
understand the details of individual connections. A series of
JavaScript blocks collected information about the site vis-
itors. The instrumentation reported viewer characteristics
(See Table 1) using 1x1 pixels. Each advertisement on the
sites was instrumented with code that reported the three key
events in the life cycle of every ad: (1) JavaScript load (2)
JavaScript execution and (3) successful delivery. Finally,
the pages contained JavaScript that tracked user interaction
on the site. Simliar to [41] the interaction metrics reported
mouse movements and clicks. The mouse position was col-
lected every time the cursor moved at least 20 pixels.

3.2 Purchased Trafﬁc

We identiﬁed and reviewed 34 trafﬁc generation service
providers for this study. These service providers were iden-
tiﬁed using web search. We manually reviewed each service
provider’s site to catalog available purchasing options. De-
tails of the sites and options are given in Table 3. We make
no claims on the completeness of this list of trafﬁc genera-
tion service providers. However, given the commonality of
their offerings, we believe that they are a representative cross
section.

We also investigated the service provider websites them-
selves to gain some insights on their legitimacy. Their do-

214  22nd USENIX Security Symposium 

USENIX Association

4

main names were checked with McAfee SiteAdvisor [6].
The DNS record was inspected using Network Solutions’
Whois tool [8]. Finally, a tool available from SameID.net [9]
was used to search for sites sharing the same IP address or
Google Analytics tag.

at $1.80) and that "...pop under ads will not block any of your
site content and do not lead to actions where users might be
led to leave your site." [23]. In this case, pop-under windows
are the method that InﬁnityAds uses to generate trafﬁc. We
describe these in more detail below.

Table 1: Visitor information collected from honeypot
websites.

Timestamp

URL

User UID

Viewport Dimensions

Referer

Client IP
User Agent

Page Load UID

From the set of 34 trafﬁc generation services, we selected
5 from which we made purchases. Services were selected to
get a diversity of delivery rates and price points. The char-
acteristics of our purchased trafﬁc indicated the selected ser-
vices were independent networks. The purchased trafﬁc was
directed to the honeypot sites between November 11th, 2012
and February 18th, 2013, resulting in over 69K delivered im-
pressions. We used target URL’s including Google Analytics
campaign parameters [5] to help to differentiate overlapping
purchases.

Our purchasing strategy was oriented around diversity and
not volume. Details of the purchased trafﬁc can be found in
Table 2. With the exception of BuildTrafﬁc all trafﬁc pur-
chased was designated as only trafﬁc from United States and
labeled as news and information. The intended delivery rate
of purchased trafﬁc varied between 333 visitors per day to
25,000 visitors per day. We intend to investigate further di-
versity and higher volume purchases in future work.

Table 2: Trafﬁc purchases made for this study.

Vendor

MaxVisits
BuildTrafﬁc
AeTrafﬁc

BuyBulkVisitor
TrafﬁcMasters

Amount Runtime
5 days
10,000
60 days
20,000
10,000
7 days
5 days
20,000
50,000
2 days

Price
$11.99
$55.00
$39.95
$53.00
$70.00

3.3 Pay-Per-View Publisher Signup

In addition to trafﬁc generation itself, PPV service
providers also offer publishers the opportunity to participate
as a trafﬁc source in their network (this was our initial indi-
cation of PPV networks). To further investigate the mecha-
nisms of trafﬁc generation, we enrolled as a website owner
willing to display content with a PPV service provider called
InﬁnityAds. The signup was completed using InﬁnityAds’
fully automated publisher signup system on their website.
Upon signup we were given a block of JavaScript to load on
our site. In return for running this tag, the website owner is
assured of a relatively attractive CPM (quoted and qualiﬁed

4. PAY-PER-VIEW NETWORK

CHARACTERISTICS

In this section we report the results of our analysis of pur-
chased trafﬁc at our honeypot sites. This analysis reveals the
mechanisms used to drive trafﬁc to target sites and opens the
door to a broader analysis of PPV networks, which is also
reported below.
4.1 Trafﬁc Generation Offerings

We reviewed the details of

the 34 trafﬁc genera-
tion/ecommerce sites that we identiﬁed via web search using
strings like "website trafﬁc", "buying web trafﬁc", "web traf-
ﬁcking", etc. Features such as trafﬁc characteristics, pricing,
timing, reseller information, and DNS entries were noted for
each site. Details are listed in Table 3.

4.1.1 Pricing

There is no uniform pricing for trafﬁc providers. The pric-
ing given in Table 3 was normalized to the cost of delivering
25,000 visitors from the United States for comparison. Of
the 34 trafﬁc generation services that we investigated, ﬁve
of them did not allow purchasing trafﬁc originating exclu-
sively from the United States. One site was deemed fraud-
ulent because it did not have a space to enter a trafﬁc desti-
nation prior to checkout completion. The remaining 28 sites
charged between $29.99 and $200 to purchase 25k visitors.

4.1.2 Overlap/Reselling

There were signiﬁcant similarities between many of the
trafﬁc purchase sites. Many of the providers made mul-
tiple copies of their site in order to target different pub-
lisher segments or to simply use another attractive domain
name. All of the provider domains were assessed using the
sameid.net domain investigation tool [9]. Seven of the
providers appeared to be repackaging another site (handy-
trafﬁc, cmkmarketing, visitorboost, revisitors, buybulkvis-
itor, highurlstats, xrealvisitors). Four of the repackaged
sites shared a Google Analytics account with another trafﬁc
provider site (handytrafﬁc, cmkmarketing, visitorboost, re-
visitors). Three of the repackaged sites shared an IP address
with another trafﬁc purchase site (buybulkvisitor, highurl-
stats, xrealvisitors). Shared website hosting could cause IP
overlap, but it is unlikely that 3 sites in our 34 site sample
are randomly hosted on the same IP. Furthermore an imple-
mentation error caused highurlstats.com to load buybulkvis-
itor.com, making it plausible that these sites are related.

Four of the PPV sellers investigated offered the ability to
become a trafﬁc reseller (hitpro, ineedhits, toptrafﬁcwhole-
saler, trafﬁc-masters). A reseller sells trafﬁc without having

USENIX Association  

5

22nd USENIX Security Symposium  215

Yes
No
No
Yes
Yes
No
No
Yes
Yes
Yes
No
Yes
Yes
Yes
Yes
Yes
Yes

Table 3: Trafﬁc provider details.
Price2 Geotargeting Category Pacing
Site
Option
$75
aetrafﬁc.com
No
NA
allseostar.com
NA
No
bringvisitor.com
30 days
$119
buildtrafﬁc.com
Option
$53
buybulkvisitor.com
No
$110
buyhitscheap.com
No
NA
cheapadvertising.biz
$82
No
cmkmarketing.com
30 days Option
$70
cybertrafﬁcstore.com
?
60 days
$100
easytrafﬁc.biz
?
No
$220
fulltrafﬁc.net
Option
$75
Option
getwebsitetrafﬁc.org
?
Option
$84
growstats.com
Option2
?
$99
handytrafﬁc.com
?
30 days
$200
highurlstats.com
?
$60
30 days
hitpro.us
$120
?
30 days
ineedhits.com
No information, nowhere to enter website URL
masvisitas.net
?
$30
maxvisits.com
Option2
$30
meantrafﬁc.com
?
$43
perfecttrafﬁc.com
?
$30
plusvisites.com
?
$99
purchasewebtrafﬁc.net
$55
?
realtrafﬁcsource.com
$119
revisitors.com
source4trafﬁc.com
$88
thewebtrafﬁcdominator.com $32
toptrafﬁcwholesaler.com
$111
$35
trafﬁc-masters.com
$89
trafﬁcchamp.com
$55
trafﬁcelf.com
$35
traﬁxtech.com
visitorboost.com
$116
NA
xrealvisitors.com

Option
No
Option
Option
No
No
Option2 Option2 Yes2
No
30 days
No
?
30 days Option2 No
Option2 No
Option
30 days No
No
Option2 Yes
Option
Option2 No
Option
30 days
?
No
?
?
No

Yes
Yes
Yes
Yes
No
Yes
Yes
Yes
Yes
Yes2
Yes
Yes
Yes
Yes
Yes
No

Yes
No
No
Yes
Yes
Yes
No
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes

Yes
Yes
Yes
Yes
No
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes
No

Allow Pop-up/Sound
Adult
Yes2
Option
Opion2 No
Yes2
?
No
?
No
?
Yes
?
?
Option
?
No
?
No
?
Yes2
Yes2
Yes
?
No
No

Yes
?
?
?
No
?

?
Option2

1 Cost to purchase 25,000 United States visitors (normalized where needed)
2 Extra cost

to manage trafﬁc delivery infrastructure or payment process-
ing. The reseller acts only as an intermediary forwarding
orders along to the true trafﬁc provider. As per the descrip-
tions, the reseller is charged a ﬁxed rate for the trafﬁc and
can resell the trafﬁc at the price of their choosing. Two of
the reseller packages offered prepackaged websites where
the reseller only needs to supply their branding and market-
ing.

4.1.3 Provider Site Analysis

Given the potentially fraudulent nature of trafﬁc genera-
tion, we were interested in a general measure of the trustwor-
thiness of providers sites. McAfee’s SiteAdvisor [6] rated
most of the provider websites as safe. Speciﬁcally, out of

the 34 sites investigated 22 were labeled as Safe, 11 had not
yet been reviewed by SiteAdvisor, and 1 was labeled as sus-
picious.

4.1.4 DNS Registration

A Whois lookup was performed on each of the trafﬁc
providers websites to gain insights on deployments. 14 out
of the 34 sites listed a DNS anonymization service as their
primary contact. Four of the sites were registered or renewed
in the previous 12 months. Expiration and creation dates
give the period the domain registration. On average the sites
were registered for 5.71 years. The longest registration was
for 16 years. Six sites are registered for only 1 year.

Looking at the contract information of the sites not us-

216  22nd USENIX Security Symposium 

USENIX Association

6

ing anonymization gave the following breakdown of country
residency: 10 United States, 2 Australia, 2 Canada, 2 Spain,
1 France, 1 Italy, 1 Singapore, 1 China.
4.1.5 Features

Providers offer a variety of options for purchased trafﬁc.
Many provide assurances that only "real" trafﬁc will be de-
livered and no "black hat techniques" are used. Every site
promises unique views, such that the same user will not be
directed to the site multiple times in 24 hours. Six sites were
more precise, specifying that a user’s IP address will only be
directed to the destination once in a 24-hour period. Typi-
cal trafﬁc volumes range between 10K and 1M visitors per
campaign. Direct email was required for campaigns larger
than 1M visitors. See Table 4 for other options offered by
the trafﬁc providers that we evaluated.

Table 4: Trafﬁc provider features.

Safe to use with Google AdSense
Deliver users interested in porn
Trafﬁc to increase Alexa ranking

Adsense Safe
Adult Trafﬁc
Alexa Boost
Allow Pop-ups/Sound No restrictions on destination
Campaign Pacing
Geo-targeting
Clicks
Mobile Trafﬁc
Trafﬁc Classes

Select length of campaign
Deliver users from a region
Deliver clicks on target website
Deliver users of mobile devices
Deliver users with speciﬁc interest

4.2 Purchased Trafﬁc Characteristics

One of our purchases did not deliver any appreciable vol-
ume of trafﬁc. The reason for the failure of trafﬁc delivery is
not clear. The provider may have decided not to deliver due
to the instrumentation of the destination site. The provider
still collected payment for the trafﬁc which was not deliv-
ered. See Tables 5 and 6 for a summary of our measure-
ments. Of the target of 110,000 visits that we purchased, we
received 69,567. At the time of writing AeTrafﬁc was still
delivering visitors beyond the campaign end. The BuildTraf-
ﬁc purchase stopped delivering visitors abruptly at the end of
January, 28 days into the 60-day campaign.

We analyzed trafﬁc delivered to our honeypot websites for
a variety of characteristics. Before processing, the data was
ﬁltered to remove any events originating from our honeypot
server’s IP address. Also any user agent containing case-
insensitive ’bot’ was excluded. This was done to remove the
effects of web crawler trafﬁc from our results. All of the
trafﬁc observed appeared to originate from our purchases.
We did not see any indications of natural trafﬁc.
4.2.1 Blacklist Comparison

The IP addresses of the purchased trafﬁc showed some
overlap with public IP blacklists. Every morning at 7 GMT
IP blocklists were pulled from DShield.org [3] and UcePro-
tect [10] as points of comparison. The count of blacklisted IP

addresses from these sources averaged 303,968 (or 0.007%
of the entire IP space) for January 2013. On average, source
IP addresses of the purchased data matched the blacklists
0.97% of the time. This is perhaps more than would be ex-
pected by chance, but too low to draw a strong conclusion
about overlap between the set of sources from trafﬁc gener-
ation services and malicious sources.

4.2.2

Interaction

Each of our honeypot pages tracked four JavaScript events:
onmousemove, onmousedown, onblur, onfocus. There was
an extremely small number of activity events (190) reported
for all purchased trafﬁc. There are a few explanations for
such low interation: (i) it may be an accurate reﬂection of
reality, (ii) the site was 0 sized and the user could not interact
with it (see 4.2.7) or (iii) it could be the result of JavaScript
events not ﬁring as expected. Unfortunately we cannot rule
out JavaScript failure. We cannot draw strong conclusions
from the lack of interaction events other than the fact that
we did not pay for anything other than impressions.

4.2.3 Temporal Distribution

The pacing of visitor delivery varied greatly depending
on trafﬁc service provider. As is described below service
providers trafﬁc millions if not billions of visitors a day,
but individual purchases can require delivery of less than
100 visitors a day to a destination. Furthermore, the net-
work throughput is not guaranteed. So the deliveries need
to be slightly front-loaded to ensure full delivery in the case
of lower than expected throughput. The problem of pacing
manifested itself in both the time of arrivals within a day and
the arrival distribution over the entire campaign.

The daily arrival patterns of visitors showed some unusual
artifacts. AeTrafﬁc delivered consistently though the entire
day as can be seen in Figure 4. It is well known that typical
user trafﬁc follows a diurnal cycle, reaching the high peak
during the day and low peak overnight when users are sleep-
ing. A more obvious example of artiﬁcial delivery is Build-
Trafﬁc, which delivered only during the ﬁrst 10 minutes of
the hour, as can be seen in Figure 5.

The arrival of users throughout the campaign was quite
bursty in some cases. With periods of high delivery followed
by periods of low delivery. MaxVisists delivered trafﬁc pri-
marily in the ﬁrst half of every day as can be seen in Figure
6. Meanwhile, TrafﬁcMasters delivery primarily consisted
of two large spikes with little delivery between, as can be
seen in Figure 7.

4.2.4

Incomplete Loads

Every page on our honeypot sites contained four JavaScript
blocks which loaded advertising creatives. Each creative
was independently instrumented to report when it had been
loaded. Four blocks of JavaScript need to complete in order
to successfully load all of the ads on the pages. Using this
information, we can calculate the percentage of page loads

USENIX Association  

7

22nd USENIX Security Symposium  217

Table 5: Purchased trafﬁc delivery.

Vendor
AeTrafﬁc
BuildTrafﬁc
BuyBulkVisitor
MaxVisits
TrafﬁcMasters

Expected Visitors Delivered Visitors Expected Duration Actual Duration % Loading all 4 Ads
10,000
20,000
20,000
10,000
50,000

16.40
60.75
Unknown2
12.80
58.34

8 days1
29 days
1 day
5 days
3 days

7 days
60 days
5 days
5 days
2 days

17,205
1,086
1
9,635
41,640

1 Still sending trafﬁc at the time of submission
2 User failed to load JavaScript

 140

s
e

t

 120

i

u
n
M
5

 

 
r
e
p
 
s
n
o
s
s
e
r
p
m

i

I

 100

 80

 60

 40

 20

0

0

0

0

0

1

1

1

1

1

2

2

0

0
:
0

2
:
0

4
:
0

6
:
0

8
:
0

0
:
0

2
:
0

4
:
0

6
:
0

8
:
0

0
:
0

2
:
0

0
:
0

0

0

0

0

0

0

0

0

0

0

0

0

0

Time(UTC)

Figure 4: Trafﬁc distribution from AeTrafﬁc.
 60

s
e

t

 50

i

u
n
M
5

 

 
r
e
p

i

 
s
n
o
s
s
e
r
p
m

I

 40

 30

 20

 10

 0

0

0

0

0

0

1

1

1

1

1

2

2

0

r
u
o
H

 
r
e
p

i

 
s
n
o
s
s
e
r
p
m

I

r
u
o
H

 
r
e
p

i

 
s
n
o
s
s
e
r
p
m

I

0
:
0

2
:
0

4
:
0

6
:
0

8
:
0

0
:
0

2
:
0

4
:
0

6
:
0

8
:
0

0
:
0

2
:
0

0
:
0

 400

 350

 300

 250

 200

 150

 100

 50

 0

1

1

1

1

1

1

1

1

1

-

1

1

-

2

1

-

2

1

-

2

1

-

2

1

-

2

1

-

2

1

-

2

9
 
0

0
 
0

1
 
0

2
 
0

3
 
0

4
 
0

5
 
0

6
 
0

0
:
0

0
:
0

0
:
0

0
:
0

0
:
0

0
:
0

0
:
0

0
:
0

0

0

0

0

0

0

0

0

Time(UTC)

Figure 6: Trafﬁc distribution from MaxVisits.
 12000

 10000

 8000

 6000

 4000

 2000

 0

0

0

0

0

0

0

0

0

0

0

0

0

2

2

2

2

2

2

2

2

2

2

2

2

-

-

-

-

-

-

-

-

-

-

-

-

1

1

1

1

1

2

2

2

2

2

2

2

8
 
1

9
 
0

9
 
0

9
 
1

9
 
1

0
 
0

0
 
0

0
 
1

0
 
1

1
 
0

1
 
0

1
 
1

8
:
0

0
:
0

6
:
0

2
:
0

8
:
0

0
:
0

6
:
0

2
:
0

8
:
0

0
:
0

6
:
0

2
:
0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

Figure 5: Trafﬁc distribution from BuildTrafﬁc.

Time(UTC)

Figure 7: Trafﬁc Distribution from TrafﬁcMasters.

Time(UTC)

that completed for all four ads.

Trafﬁc from BuildTrafﬁc and TrafﬁcMasters resulted in
ads completely loading approximately 60% of the time. Ae-
Trafﬁc and MaxVisits only loaded approximately 15% of
the time. Reasons for failure to load all the ads include:
JavaScript blockers, JavaScript errors, JavaScript execution
timeout, and navigation away from the page.

4.2.5 IP Address Distribution

IP addresses from an entire trafﬁc generation campaign
where checked for duplicates to get an idea of the distri-
bution of trafﬁc sources. According to the advertised 24-
hour-unique policy an IP address could be used once per
day. For small purchases our data showed very little over-

lap of IP address for the campaigns: AeTrafﬁc reused 0.75%
of IP addresses, BuildTrafﬁc reused 0.64% and MaxVisits
reused 11.25%. The larger purchase from TrafﬁcMasters
showed signiﬁcantly more IP address overlap with 65% of
IPs reused. The majority of the IPs geolocated inside of the
US, with the exception of the BuildTrafﬁc IPs.

4.2.6 User Agents

The number of unique user agents across the purchases
shows the trafﬁc came from a diverse set of browsers. An
alternative explanation could be that artiﬁcial trafﬁc gener-
ators utilized a large set of User Agent strings. However,
combined with the diverse set of IP addresses, it appears the
trafﬁc could well be generated from genuine viewers.

218  22nd USENIX Security Symposium 

USENIX Association

8

Table 6: Purchased trafﬁc characteristics.

Vendor
AeTrafﬁc
BuildTrafﬁc
BuyBulkVisitor
MaxVisits
TrafﬁcMasters

IP Sources % US IPs % Blacklisted Unique User Agents % Mobile User Agents % Zero Sized
17,075
1,079
1
8,551
14,489

34.08
NA1
Unknown2
NA1
47.34

3,331
312
Unknown2
1,883
3,096

5.44
14.42
0
4.03
4.59

93.14
.17
100
98.83
99.29

.99
1.75
0
.47
1.65

1 Detailed tracking not implemented at time of purchase
2 User failed to load JavaScript

About 5% of the trafﬁc from AeTrafﬁc, MaxVisists and
TrafﬁcMasters had the User Agent signature of a mobile de-
vice. BuildTrafﬁc trafﬁc contained a much higher percent-
age of mobile device User Agents. Possibly due to the in-
creased geographic diversity of the trafﬁc.

4.2.7 Viewport Size

Halfway through our purchases we instrumented the code
to record the element height and width.3 Overall 46.51% of
ad views had a height or width of 0, meaning that the adver-
tisement could not possibly be viewed by the user. 13.42%
of views had both a height and width of zero. These results
corroborate the BuildTrafﬁc delivery technique of zero-sized
frames described in 4.3.1.
4.3 Pay-Per-View Networks

By examining the JavaScript provided by trafﬁc genera-
tion services and the referer ﬁelds from trafﬁc on our hon-
eypot sites, we were able to identify the fact that trafﬁc was
generated primarily from pop-under windows. Interestingly,
while we did see evidence of trafﬁc from expired domains,
we saw no evidence of trafﬁc from botnets. This observation
led to our deeper investigation of the use of pop-unders for
trafﬁc generation and our characterization of PPV networks.
As noted above when publishers participate in a trafﬁc
generation service i.e., a PPV network, they are given a block
of JavaScript to place on their site, which looks very much
like a standard ad tag. In the case of PPV networks, when a
user accesses a PPV network publisher page, the JavaScript
opens a new window (typically behind the active browser
window, hence a pop-under) and loads the PPV server URL.
The publisher running the tag gets a share of the revenue for
every PPV URL that is subsequently loaded. The PPV net-
work solves two problems with respect to marshaling users:
(i) it delivers the JavaScript which creates the pop-under
window and (ii) it determines the site to display in the win-
dow.

In response to prevalent pop-up advertising, web browsers
give users the option to prevent pages from opening unso-
3Using
docu-
ment.body.clientHeight,
on
browser type.

document.documentElement.clientHeight,

window.innerHeight

depending

licited windows. PPV networks need to circumvent this re-
striction. One option is the PPV code can explicitly by-
pass browser protections. A review of the issue trackers for
Chrome or Firefox does not list many bugs related to the
browsers’ pop-up blockers, thus this is likely to be a difﬁcult
coding challenge. Our empirical data did not show any PPV
network tags that attempt to bypass the pop-up blocker di-
rectly. The common approach is to tie pop-under creation to
a user action since browsers typically allow creation of new
windows on these events. Typically the pop-under action is
attached to the onclick event of the body of the page. This
causes the pop-under action to ﬁre whenever the user clicks
anywhere on the site.

After creation, the pop-under window is directed to load
a speciﬁc URL pointing to the network’s ad server. The
ad server URL contains a number of parameters describing
targeting and attribution of the visitor. The parameters al-
ways include an identiﬁer for the originating site so that the
publisher can get paid for the trafﬁc. The list of parame-
ters is clearly dependent on individual implementations, but
some of the more common targeting parameters are: (i) user-
Token, (ii) indication if adult sites are allowed, (iii) user
IP/geolocation, and (iv) viewport size. Using these parame-
ters the ad server selects and returns the most proﬁtable 3rd-
party web sites (i.e., the publishers that have purchased traf-
ﬁc) available. This is presumably the point where the 24
hour unique user guarantee is enforced.

Manually loading a publisher’s PPV network tag often
showed multiple redirections through a network of PPV
servers. This mimics what is seen in standard advertis-
ing networks where an individual ad can be redirected
across many networks in order to optimize the return from
each user. For example, repeatedly loading the InﬁnityAds
publisher tag showed network connections being made to
ads.lzjl.com,
cpxcenter.com, and 199.21.148.39. Whois and reverse IP
lookups on these all indicate YesUp eCommerce Solutions
Inc. for the contact information. YesUp is located in Ontario
Canada and has a host of eCommerce offerings.

Ideally we would have identiﬁed the referer to the main
pop-under page in our purchased trafﬁc. This would en-
able us to identify the sites hosting pop-under tags. Un-

USENIX Association  

22nd USENIX Security Symposium  219

9

fortunately, the sandboxing of child frames (especially child
frames with different domains than the parent) protects the
Document Object Model of the parent frame. Therefore, the
document.referrer node of the parent is inaccessible to the
child frame. None of our trafﬁc purchases had a value for
parent.document.referrer. The best we can do is the referer
value of the frame loading our honeypot sites. This referer
points to the origin of the pop-under window code (originat-
ing from the PPV service provider).

4.3.1 Delivery Analysis

In order to gain a better understanding of how trafﬁc is
delivered to purchasing sites, we reviewed the pages listed in
the referer ﬁelds for the trafﬁc arriving at our honeypot sites.
A closer examination of two of the referer sites (BuildTrafﬁc
and RealTrafﬁcSource) showed methods for increasing the
number of "page views" for every user delivered.

Loading the referer of trafﬁc purchased from BuildTraf-
ﬁc resulted in a simple HTML page, including 11 frames
(see Appendix for example code). The main frame loads
the primary target destination in 100% of the browser view-
port. Following the primary frame there are 10 frames with
a height of 0 pixels. Each of these frames loads the URL of a
PPV network customer. Eight of the frames load paths from
a link shortening service (itsssl.com), which resolve directly
to a number of sites (presumably those purchasing trafﬁc).
One of the frames loads another targeting link from the same
network. The ﬁnal frame loads a targeting link from yet an-
other domain. Resulting in a total of 11 "page loads" each
time the PPV network URL is loaded. Ten of those page
loads are invisible to the end user because they are loaded in
a frame 0 pixels high.

The page listed as the referer in trafﬁc from RealTrafﬁc-
Source also used a frame to load the ﬁnal destination. In this
case only a single frame covered the entire viewport, but the
outer page reloaded itself every 15 seconds. When the page
is displayed as a pop-under it will continue to load a differ-
ent site every 15 seconds even if the pop-under window is
not visible to the user.

4.4 PPV Network Throughput

Based on our evaluation of the pop-under mechanisms
used by PPV networks, we endeavored to assess the broader
issues of the scale of these networks (e.g., number of pub-
lisher sites and number of users) and the potential volume of
impressions that are being delivered on a daily basis. While
all of this analysis is approximate and is based on certain as-
sumptions, we take a conservative approach and argue that
our results provide a meaningful depiction of this threat.

4.4.1

Self Reported Network Data

Many of the PPV providers list the throughput details
(unique users and page views) of their network in advertis-
ing materials. Clearly, when self reporting these numbers,
PPV network providers have incentive to over state in or-

der to make their network appear larger than their competi-
tors. Nonetheless, the self reported numbers give an insight
into at least the approximate size of the networks. None
of the providers publish throughput numbers broken down
by features or delivery mechanisms. Thus, the numbers in-
clude pop-unders, expired domains and any other generation
techniques. As shown in Table 4, 8 of the providers offer
throughput information. An average of 17.16M unique visi-
tors and 6.29B page views per provider per day are claimed.
While the self report by TrafﬁcMasters on page views is
much higher than others and could be false, it may be due
to an extensive afﬁliate network. Indeed, the use of afﬁli-
ate networks means that simple summation of throughput to
assess scope is unlikely to be accurate. However, the self
reported numbers still point to a sizable capacity for PPV
networks.

Table 7: Self reported network throughput from PPV
providers.

Site

Daily Visitors Daily Deliveries

CMK Marketing

HitPro

TrafﬁcElf
BuildTrafﬁc
FullTrafﬁc

TopTrafﬁcWholesaler

BringVisitor
TrafﬁcMasters

2M

40.5M
20M
3.3M
20M

-
-
-

25M
112M
45M

-
-

30M
26.6M
37.5B

4.4.2 Volume Estimation

In order to estimate throughput of the networks we inves-
tigated the scope of the deployment of the PPV network tags
across publisher sites. Given the publisher sites where the
PPV network tags are present along with the estimated traf-
ﬁc for those sites we create a conservative estimate for the
daily trafﬁc across PPV networks.

The ﬁrst step in determining where the PPV network tags
are deployed is identifying the tag URLs. The PPV networks
we considered commonly used a domain name for their de-
livery infrastructure that was different from the public facing
websites that market to publishers. We used three techniques
to identify 10 active PPV network tag URLs: (i) subscribing
to a PPV network as a publisher, (ii) investigating referer
ﬁelds and (iii) searching for ad code on public forums.

Where possible we utilized automated signup processes
to harvest PPV tags directly from the publishers. This is a
trivial case where the code to be run on the publisher site is
directly supplied.

Using referer ﬁelds to identify PPV tags was more chal-
lenging. Typically the destination is loaded inside a frame,
so the referer references the outer page hosting the frame.
The display page is typically not loaded directly from the
publisher site. The publisher loads JavaScript which handles

220  22nd USENIX Security Symposium 

USENIX Association

10

Table 8: Estimated pop-under window loads per day.

Tag Count Domains Domain Trafﬁc Subdomain Trafﬁc Total Estimate (Views/Day)
Network
adsrevenue.net
1,797
adversalservers.com 93,060
855,268
clicksor.com
edomz.com
21,750
ero-advertising.com 2,691,930
ﬂagads.net
lzjl.com
popadscdn.net
poponclick.com
visit-tracker.com
Total

802,815
1,185,769
24,741,249
971,409
100,664,523
2,294,143
17,427,379
17,016,554
2,651,188
623,344
168,378,373

802,943
1,199,937
25,650,898
982,653
100,733,633
2,296,166
17,853,218
17,141,017
2,653,655
623,344
169,937,464

128
14,168
909,649
11,244
69,110
2,023
425,839
124,463
2,467
0
1,559,091

21
269
2,801
62
5,830
102
1,192
1,029
164
38
11,508

36,382
195,406
245,302
28,521
90
4,169,506

the pop-under creation and then calls the display page to ﬁll
the newly created window. In some cases, both the display
page and the pop-under JavaScript are hosted on the same
infrastructure. Searching the Common Crawl [2] database
for the infrastructure domain lead to the identiﬁcation of a
number of PPV tags.

Finally, entering PPV network names into search engines
resulted in a number of forum posts discussing pop-under
tags. Many of the tags collected this way were no longer in
use, but there were a few that were still active.

The next step is identifying the publisher sites that have
deployed PPV network tags. To do this we used the Com-
mon Crawl repository of web crawl data. The August 2012
(see Table 4 for details provided by [11]) dataset included
derived metadata about all of the crawled URLs. The meta-
data dataset contained a list of all outgoing links for each
crawled page (including loading of JavaScript ﬁles). Ama-
zon’s Elastic MapReduce was used to list all paths with egress
links pointing to the serving domains. The egress links were
then manually reviewed to identify JavaScript ﬁles result-
ing in pop-under advertising. Selecting only pop-under tags
from the MapReduce results gives a list of domains running
those tags. We argue that this results in a conservative esti-
mate of PPV networks that use pop-unders and an even more
conservative estimate of PPV networks in general.

Estimates on trafﬁc volumes on the identiﬁed publisher
sites was done using public web analytics data. Alexa and
Compete did not have trafﬁc estimates for many of the do-
mains. Thus, mustats.com was used to estimate domain
trafﬁc. A script was used to programmatically query mus-
tats.com for trafﬁc estimates on the identiﬁed PPV sites. We
collected issued queries for 11,629 domains. MuStats re-
turned an estimate for 10,737 of the queries. 2,635 of the
returned queries estimated 0 views per day for the domain.
Subdomains posed an additional problem for trafﬁc esti-
mation. The web analytics products did not estimate traf-
ﬁc per subdomain. They only gave an estimate for the en-
tire domain. For example, it is clear that just because blog-
sofnote.blogspot.com hosts a PPV network tag, not every do-

Table 9: August 2012 CommonCrawl database sum-
mary.

Crawl Date: January-June 2012
Data Size: 40.1TB (compressed)
Parsed URLs: 3,005,629,093
Domains: 40,600,000

main on blogspot.com hosts that same ad tag. Attributing all
of the trafﬁc for blogspot.com to a PPV network would be
inaccurate.

To estimate the impact of subdomains on PPV networks,
we again utilize the Common Crawl database. Our analysis
counts the total number of URLs crawled for each domain
that lists PPV tags. URLs with ﬁle extensions jpg, png, gif,
js were removed from the total count. The ﬁnal total count
approximates the number of webpages and page fragments
crawled for a given domain. Dividing the link count by the
total crawled pages results in the percentage of pages in a
domain containing links to the PPV code. This is likely a
signiﬁcant underestimation of reality for two reasons First,
many of the URLs crawled were page fragments (where a
full page is the combination of many fragements). Second,
each path is given even weight despite the fact that tags are
more likely to be found on high trafﬁc pages. In any case,
subdomain trafﬁc is estimated by taking the estimated trafﬁc
for the whole domain and multiplying that by the percentage
of pages inside the domain linking to the tag.

domains =

{123lyrics.in f o,serverhk.net, ...}

subDomains =

{site1.blogspot.com,site2.blogspot.com, ...}

11

(1)

(2)

USENIX Association  

22nd USENIX Security Symposium  221

estimate =

∑

domains

domainTra f f ic+

∑

subDomains

linkedPages
totalPages ∗ domainTra f f ic

(3)

Our ﬁnal algorithm for calculating PPV network through-
put is then the estimated trafﬁc for domains hosting PPV tags
plus the proportional estimated trafﬁc for subdomains con-
taining PPV tags as shown in Equation 3. Our estimates only
include the trafﬁc expected from pop-under tags. Obviously,
by including trafﬁc from expired domains and typo squat-
ting domains and bots would likely increase the estimated
throughput substantially.

Table 8 shows throughput estimates for a selection of 10
PPV networks using our algorithm. As is expected from our
conservative approach, the dominant portion of estimated
trafﬁc was to full domains with subdomain estimates mak-
ing up a small portion of the total estimate. The PPV tags
from ero-advertising.com, which is the largest PPV network,
were displayed predominantly on publishers hosting adult
content. It is possible that visitors browsing adult content
are more tolerant of pop-under advertising.

So far we have estimated the number of times that pop-
under code is executed per day. In reality many users have
browser add-ons that prevent the creation of the pop-under
window. One such popular extension for Firefox and Chrome
is Adblock Plus [1]. The Firefox add-ons page for Adblock
Plus lists 15.6M users [4]. Firefox claims 450M users [7],
giving an install rate of 3.5% for Adblock Plus on Firefox.
We conservatively estimate one quarter of all page loads pre-
vent pop-up/pop-under creation due to plugins. Given this,
we still would expect 75% of the estimated loads to result in
a pop-under window. Our investigation of delivery mech-
anisms shows that PPV networks can load up to 11 des-
tinations or more (in the case of auto refresh) in a single
pop-under window. To maintain our conservative approach
we assume four destinations loaded per pop-under window.
Combining the effect of pop-up blockers and multiple loads
we expect each view of a page hosting pop-under code will
deliver 3 (0.75 * 4) impressions to the PPV network.

Our calculation of throughput for just 10 publisher net-
works resulted in more than 160M estimated tag loads per
day, thus more than 500M visitor deliveries per day. Assum-
ing a modest price of $25 per 25k visitors, the PPV providers
make a minimum of $15M in sales of targeted trafﬁc per
month. Those 15B page views per month are delivered to
purchasing websites. Assume the purchasing websites con-
tain an average of 4 ads and each of those ads pays a $0.25
CPM. Advertisers spend $15M a month advertising to pop-
under viewers on these 10 networks alone.

5. PAY-PER-VIEW NETWORK

COUNTERMEASURES

In this section, we describe three potential counter mea-
sures to address the problem of invalid impressions gener-

ated by PPV networks. Each method offers a different per-
spective on the threat and each offers a different capability
in terms of what can be done about the threat. While there
could certainly be other viable counter measures, the follow-
ing methods can be implemented by participants in the ad
ecosystem who would beneﬁt by detection and/or prevention
of invalid impressions via PPV networks.

5.1 Viewport Size Filters

Advertisers who run their own ad server or intermediaries
who run ad servers who are interested in removing impres-
sions from PPV networks can ﬁlter ad requests based on
viewport size. An advertiser or intermediary could imple-
ment a viewport size check countermeasure by augmenting
their current JavaScript tag to include code that ensures a
minimum sized viewport. This simple check code would
prevent display of the advertisement for viewports which are
too small to reasonably be seen by users on target platforms.
In addition to reducing invalid impressions, this approach
would save advertisers the bandwidth costs of delivering cre-
atives in PPV networks.

JavaScript that detects zero-sized viewports could prevent
a large amount of invalid impressions. Over 46% of the
impressions in our data corpus are delivered via zero-sized
viewports. Assuming this approach is used by PPV networks
writ large, we estimate that a zero size viewport ﬁlter could
block impressions from loading on over 200M pages per day
from just the 10 PPV networks we investigated.

5.2 Referer Blacklist

Participants in the ad ecosystem could also use blacklists
to identify and block trafﬁc originating from PPV networks.
We found that the referer ﬁeld identiﬁes a source in the ma-
jority of the trafﬁc that we purchased. Over time, a black-
list of referers could be built that identiﬁes trafﬁc originat-
ing from a large number of PPV networks. This is similar
to browser ad-blocking add-ons or in-network solutions that
utilize a blacklist to remove undesired trafﬁc. The difference
with the referer blacklist is that the advertiser or intermedi-
ary implements the list directly. One limitation of this ap-
proach is that it will only work if no iframes are in use since
iframes would prevent the advertiser code from accessing
the referer.

Similar to viewport size ﬁlters, an advertiser/intermediary
could incorporate the blacklist into their ad tags in order to
prevent display to questionable viewers. As a passive alter-
native an advertiser could simply log the referers and com-
pare them against the blacklist at a later time. Then the ad-
vertiser can use the information in negotiations with their
advertising network.

The blacklist will need continual tuning as new PPV net-
works emerge and old networks disappear. One drawback
of this approach is that a savvy adversary can trivially defeat
this method by clearing or altering the referer ﬁeld. There
is some evidence that this is already happening. A few of

222  22nd USENIX Security Symposium 

12

USENIX Association

the referer strings in our data corpus contained direct IP ad-
dresses instead of DNS names, possibly to thwart existing or
suspected blacklist methodology or simply to obfuscate their
behavior. Even so a referer blacklist based on domain names
would have prevented 99.51% of our purchased trafﬁc.
5.3 Publisher Blacklists

An alternative approach is to create and maintain a black-
list of publishers that participate in PPV networks. Similar
to countermeasures described above, this list could be used
by advertisers to avoid running their display advertising on
sites sourcing trafﬁc from the PPV networks. This somewhat
strong-armed approach would be likely to get the attention
of publishers very quickly since we assume at least some
percentage may not be aware of the negative aspects of their
participation. Even if a publisher was aware, such an ap-
proach would discourage them from engaging with invalid
trafﬁc. Thus, this method could have potential beneﬁts to
the entire advertising ecosystem.

Publisher blacklists can be implemented by the advertiser
in their tag as either preventative or informative, similar to
the referer blacklist. Again this list will need continual up-
dates as publisher behavior changes. One method of gen-
erating a publisher blacklist is to isolate and repeatedly call
the PPV destination selection code block. This would enu-
merate all possible destinations for that PPV network over
time.

6. RELATED WORK

General aspects of online advertising have been discussed
in a large number of studies over the past decade. These
studies have focused on wide variety of issues including the
economic aspects of advertising e.g., [17, 18], theoretical or
analytical evaluations of sponsored search and ad auctions
e.g., [13, 35, 37] and more recently ad exchanges e.g., [14,
30]. However, there are relatively few examples of empiri-
cal characterization studies of online advertising, most likely
due to the private nature of advertising data. Relatively re-
cent empirical studies include [19,26,31,32,39], which pro-
vide informative insights on key assumptions made in theo-
retical studies as well as recommendations that improve the
effectiveness of online advertising.

Google, Microsoft, Yahoo and other large industry players
have online documentation about their invalid trafﬁc moni-
toring activities (although no signiﬁcant technical details are
disclosed) [21, 24, 38]. This is given to raise trust for adver-
tisers. However, many platforms offered by intermediaries
have almost no documentation on fraud. What is clear is
that detecting and preventing fraud in advertising networks
presents signiﬁcant challenges [33, 36].

The problem of fraud in online advertising has been the
subject of many different studies over the years. The ma-
jority of these studies have focused on fraud in PPC-based
environments. Botnets are well known to be used for click
fraud. One example of a large-scale botnet focus on click

fraud was the Bamital botnet, which was recently disman-
tled [25]. Similarly, the ZeroAccess botnet can generate
fraudulent clicks estimated to cost advertisers over $900K/day
in lost revenue [12]. Other studies have focused on develop-
ing methods for detecting click-fraud e.g., [28, 40]. Haddadi
describes bluff ads as a means for measuring click fraud ac-
tivity and creating blacklists for IP addresses to reduce click
fraud [22]. Dave et al. [16] developed a novel measurement
methodology to gather data on click fraud in ad networks.
Their work informs our measurement efforts. Another re-
cent empirical study by Zhang et al. is perhaps most simi-
lar to our work in terms of measurement methods [41]. In
that study, the authors purchased trafﬁc aimed at a honey-
pot website, and reported on a range of characteristics. Our
ﬁndings on the characteristics of purchased trafﬁc are in line
with theirs, although we only purchased impression trafﬁc
and did not focus on click-through in our study.

Finally, several recent studies have included brief discus-
sions of impression fraud. In particular, Stone-Gross et al.
use logs from a large online ad exchange to investigate a va-
riety of characteristics that relate to invalid activity, includ-
ing behaviors related to impression spam [34]. Our work
differs from prior studies principally in its focus on impres-
sion fraud. To the best of our knowledge there are no prior
studies that investigate impression fraud in depth from an
empirical perspective, or that investigate PPV networks and
their characteristics.

7. SUMMARY AND CONCLUSIONS

Internet-based advertising is a large and growing industry.
Search-based advertising still dominates in terms of annual
expenditures, however display and video advertising have
seen signiﬁcant growth over the past several years. While
publishers have always been motivated to use diverse meth-
ods to drive users to their sites, the fact that payments for dis-
play and video ads are often based on impressions motivates
new offerings from 3rd-party trafﬁc generation services.

In this paper, we investigate the problem of invalid trafﬁc
generation that is aimed at inﬂating impressions on publisher
websites and apps. We address this problem empirically
by setting up several honeypot websites that were used as
the targets for trafﬁc generation purchases, which we made
over the course of several months. This trafﬁc provides the
baseline from which we were able to identify a particular
form of impression generation that we call pay-per-view net-
works. A PPV network is a series of legitimate publisher
sites that include a common embedded reference from a par-
ticular trafﬁc generation service. When users access pub-
lisher sites that participate in PPV networks, 3rd-party web-
sites are rendered in an obfuscated and often invisible fash-
ion. By evaluating the JavaScript associated with PPV net-
works, we ﬁnd that the predominate mechanism used is pop-
under windows. We also ﬁnd that PPV networks place mul-
tiple 3rd-party pages on pop-unders using frames or use pe-
riodic refresh to leverage every user access. This approach

USENIX Association  

22nd USENIX Security Symposium  223

13

preserves the user experience on the publisher’s site and gen-
erates invalid impressions on the 3rd-party sites in a way that
is difﬁcult to detect.

Next, we investigate aspects of the broader scope of PPV
networks by gathering information from a small selection of
ten trafﬁc generation services. We search for tags from these
services in a publicly available Internet-wide crawl database
to estimate deployments on publisher sites. We couple these
estimates with estimates for daily unique page views from
those sites and ﬁnd tag throughput above 150M per day.
Combined with conservative estimates of 3rd-party displays
per tag and ad placements per page, this easily pushes the
number of invalid impressions above 500M per day from
these ten PPV networks alone. Based on the fact that our
sampling is so small, the impact of PPV networks is likely
to be much larger.

To address the threat of PPV networks, we describe three

different counter measures. Each offers a different constituency
an opportunity to block the display of the unwanted 3rd-
party content. In future work, we plan to focus on devel-
oping implementations of the proposed counter measures as
well as developing other techniques to address this threat.
Our measurement and characterization work are ongoing and
will soon focus on trafﬁc generation services outside of North
America.

Acknowledgements
The authors would like to thank our shepherd, Chris Grier,
for his input and multiple reviews of the paper. This work
was supported in part by NSF grants CNS-0831427, CNS-
0905186, ARL/ARO grant W911NF1110227 and the DHS
PREDICT Project. Any opinions, ﬁndings, conclusions or
other recommendations expressed in this material are those
of the authors and do not necessarily reﬂect the views of the
NSF, ARO or DHS.

8. REFERENCES
[1] Adblock Plus. http://adblockplus.org, 2013.
[2] Common Crawl. http://commoncrawl.org/, 2013.
[3] Dshield Daily Sources.

http://www.dshield.org/feeds/daily_sources, 2013.

[4] Firefox Add-Ons - Adblock Plus.

https://addons.mozilla.org/en-
US/ﬁrefox/addon/adblock-plus/, February
2013.

[5] Google Analytics URL Builder.

http://support.google.com/analytics/bin/answer.py?
hl=en&answer=1033867&topic=1032998&ctx=topic,
2013.

[6] McAfee SiteAdvisor. http://www.siteadvisor.com/,

2013.

[7] Mozilla Press Center.

http://blog.mozilla.org/press/ataglance/, February
2013.

[8] Network Solutions Whois.

http://www.networksolutions.com/whois, 2013.

[9] SameID.net. http://sameid.net/, 2013.
[10] UCEPROTECT Blacklist.

http://rsync-mirrors.uceprotect.net/rbldnsd-
all/ips.backscatterer.org.gz,
2013.

[11] Web Data Commons - Extraction Results from the

August 2012 Common Crawl Corpus.
http://webdatacommons.org/#toc2, 2013.

[12] ZeroAccess is Top Bot in Home Networks.

http://www.infosecurity-magazine.com, February
2013.

[13] G. Aggarwal, J. Feldman, S. Muthukrishnan, and

M. Pai. Sponsored Search Auctions with Markovian
Users. Internt and Network Economics, Lecture Notes
in Computer Science, 5385, 2008.

[14] S. Balseiro, J. Feldman, v. Mirrokni, and

S. Muthukrishnan. Yield Optimization of Display
Advertising with Ad Exchange. In Proceedings of the
ACM Electronic Commerce ’11, San Jose, CA, June
2011.

[15] Internet Advertising Board. IAB Internet Advertising

Revenue Report 2012 First Six Months Results.
http://www.iab.net, October 2012.

[16] V. Dave, S. Guha, and Y. Zhang. Measuring and
Fingerprinting Click-Spam in Ad Networks. In
Proceedings of ACM SIGCOMM ’12, Helsinki,
Finland, August 2012.

[17] B. Edelman, M. Ostrovsky, and M. Schwarz. Internet

Advertising and the Generalized Second Price
Auctions: Selling Billions of Dollars Worth of
Keywords. American Economic Review, 2007.

[18] D. Evans. The Economics of the Online Advertising
Industry. Review of Network Economics, 7(3), 2008.

[19] A. Ghose and S. Yang. An Empirical Analysis of
Search Engine Advertising: Sponsored Search in
Electronic Markets. Management Science, 55(10),
July 2009.

[20] Google. Adexchange.

http://www.google.com/adwords/watchthisspace/
solutions/ad-exchange/, 2013.

[21] Inc Google. Ad Trafﬁc Quality Resource Center.

http://www.google.com/ads/adtrafﬁcquality/index.html,
2013.

[22] H. Haddadi. Fighting Online Click-fraud Using Bluff

Ads. ACM SIGCOMM Computer Communications
Review, 40(2), 2010.

[23] InﬁnityAds. Publisher Signup.

http://www.inﬁnityads.com, 2013.

[24] T. Kelleher. How Microsoft Advertising Helps Protect

Advertisers from Invalid Trafﬁc.
http://community.bingads.microsoft.com, November
2011.

[25] J. Kirk. Microsoft, Symantec Take Down Bamital

224  22nd USENIX Security Symposium 

14

USENIX Association

[41] Q. Zhang, T. Ristenpart, S. Savage, and G. Voelker.

Got Trafﬁc? An Evaluation of Click Trafﬁc Providers.
In Proceedings of WebQuality ’11, Hyderabad, India,
March 2011.

Click-fraud Botnet. http://www.infoworld.com,
February 2013.

[26] S. Lahaie and P. McAfee. Efﬁcient Ranking in

Sponsored Search. In Proceedings of the Seventh
Workshop on Ad Auctions, San Jose, CA, July 2011.
[27] I. Lunden. Forrester: US Online Display Ad Spend

$12.7B In 2012, Rich Media and Video Leading The
Charge. http://www.techcrunch.com, October 2012.
[28] A. Metwally, D. Agrawal, and A. El Abbadi. Using

Association Rules for Fraud Detection in Web
Advertising Networks. In Proceedings of the
International Conference on Very Large Databases,
Trondheim, Norway, August 2005.

[29] MuStat. MuStat. http://www.mustat.com, 2013.
[30] S. Muthukrishnan. AdX: A Model for Ad Exchanges.

ACM SIGEcon Exchanges, 8(2), 2009.

[31] M. Ostrovsky and M. Schwarz. Reserve Prices in

Internet Advertising Auctions: A Field Experiment. In
Proceedings of the Sixth Workshop on Ad Auctions,
Cambridge, MA, July 2010.

[32] N. Vallina Rodriguez, J. Shah, A. Finamore,

Y. Grunenberger, K. Papaginnaki, H. Haddadi, and
J. Crowcroft. Breaking for commercials:
characterizing mobile advertising. In Proceedings of
ACM Internet Measurement Conference (IMC ’12),
Boston, MA, November 2012.

[33] B. Schwartz. Google: Investigating Invalid AdSense

Trafﬁc is Extremely Difﬁcult.
http://www.seroundtable.com, April 2012.

[34] B. Stone-Gross, R. Stevens, R. Kemmerer, C. Kruegel,

G. Vigna, and A. Zarras. Understanding Fraudulent
Activities in Online Ad Exchanges. In Proceedings of
ACM Internet Measurement Conference (IMC ’11),
Berlin, Germany, November 2011.

[35] C. Tucker and A. Goldfarb. Search Engine

Advertising: Pricing ads to context. In Proceedings of
the Fourth Workshop on Ad Auctions, Chicago, IL,
July 2008.

[36] A. Tuzhilin. The Lane’s Gifts v. Google Report.

http://googleblog.blogspot.com/pdf/Tuzhilin_Report.pdf,
2006.

[37] H. Varian. Position Auctions. International Journal of

Industrial Organization, 25, 2007.

[38] Yahoo. Trafﬁc Quality: We Work to Protect You in a
Variety of Ways. http://advertisingcentral.yahoo.com,
2013.

[39] J. Yan, N. Liu, G. Wang, W. Zhang, Y. Jiang, and

Z. Chen. How Much can Behavioral Targeting Help
Online Advertising? In Proceedings of WWW ’09,
Madrid, Spaing, April 2009.

[40] L. Zhang and Y. Guan. Detecting Click Fraud in Pay

Per Click Streams of Online Advertising Networks. In
Proceedings of the International Conference on
Distributed Computing Systems, Beijing, China, June
2008.

USENIX Association  

15

22nd USENIX Security Symposium  225

APPENDIX
Trafﬁc Delivery Code
...
<frameset rows=’0,*’ framespacing=’0’ border=’0’ frameborder=’0’>
<frame name=’header’ src=’about:blank’ scrolling=’no’ noresize>
<frame name=’main’ src=" +rurl+ " scrolling=’auto’>
<frameset rows=’0,*’ framespacing=’0’ border=’0’ frameborder=’0’>
<frame name=’raaj1’ src=’http://itsssl.com/37kt’ scrolling=’no’ noresize>
<frameset rows=’0,*’ framespacing=’0’ border=’0’ frameborder=’0’>
<frame name=’house2’ src=’http://stats.itsssl.com/?VFJDSz0zNA==’ scrolling=’no’ noresize>
<frameset rows=’0,*’ framespacing=’0’ border=’0’ frameborder=’0’>
<frame name=’house3’ src=’http://stats.itsssl.com/?VFJDSz0zNA==’ scrolling=’no’ noresize>
<frameset rows=’0,*’ framespacing=’0’ border=’0’ frameborder=’0’>
<frame name=’usnopop’ src=’http://stats.itsssl.com/?VFJDSz00’ scrolling=’no’ noresize>
<frameset rows=’0,*’ framespacing=’0’ border=’0’ frameborder=’0’>
<frame name=’usnopop2 src=’http://stats.itsssl.com/?VFJDSz00’ scrolling=’no’ noresize>
<frameset rows=’0,*’ framespacing=’0’ border=’0’ frameborder=’0’>
<frame name=’usnopop3 src=’http://stats.itsssl.com/?VFJDSz00’ scrolling=’no’ noresize>
<frameset rows=’0,*’ framespacing=’0’ border=’0’ frameborder=’0’>
<frame name=’geo1’ src=’http://www.itsssl.com/georedirect/main.html’ scrolling=’no’ noresize>
<frameset rows=’0,*’ framespacing=’0’ border=’0’ frameborder=’0’>
<frame name=’geo2’ src=’http://www.itsssl.com/georedirect/main.html’ scrolling=’no’ noresize>
<frameset rows=’0,*’ framespacing=’0’ border=’0’ frameborder=’0’>
<frame name=’raaj2’ src=’http://stats.buildtrafﬁc.com/?VFJDSz01OA==’ scrolling=’no’ noresize>
<frameset rows=’0,*’ framespacing=’0’ border=’0’ frameborder=’0’>
<frame name=’georedirect’ src=’http://adzay.com/redirect.php’ scrolling=’no’ noresize>
...

226  22nd USENIX Security Symposium 

16

USENIX Association

